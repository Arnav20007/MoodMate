{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\AppWrapper.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport App from './App';\nimport Auth from './Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppWrapper = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Check if user is already logged in\n  useEffect(() => {\n    const savedUser = localStorage.getItem('moodMateUser');\n    if (savedUser) {\n      setUser(JSON.parse(savedUser));\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const handleLogin = credentials => {\n    // Simulate API call - replace with actual API call\n    setTimeout(() => {\n      const userData = {\n        id: Date.now(),\n        name: \"Demo User\",\n        // In real app, this would come from backend\n        email: credentials.email,\n        coins: 100,\n        streak: 5,\n        mentalFitness: 85\n      };\n      setUser(userData);\n      setIsAuthenticated(true);\n      localStorage.setItem('moodMateUser', JSON.stringify(userData));\n    }, 500);\n  };\n  const handleSignup = userData => {\n    // Simulate API call - replace with actual API call\n    setTimeout(() => {\n      const newUser = {\n        id: Date.now(),\n        name: userData.name,\n        email: userData.email,\n        coins: 50,\n        // Bonus coins for signup\n        streak: 1,\n        mentalFitness: 75\n      };\n      setUser(newUser);\n      setIsAuthenticated(true);\n      localStorage.setItem('moodMateUser', JSON.stringify(newUser));\n    }, 500);\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('moodMateUser');\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Auth, {\n      onLogin: handleLogin,\n      onSignup: handleSignup\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(App, {\n    user: user,\n    onLogout: handleLogout\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n_s(AppWrapper, \"mKb+zX9grAar2iMVStuBBwt7fpw=\");\n_c = AppWrapper;\nexport default AppWrapper;\nvar _c;\n$RefreshReg$(_c, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useEffect","App","Auth","jsxDEV","_jsxDEV","AppWrapper","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","savedUser","localStorage","getItem","JSON","parse","handleLogin","credentials","setTimeout","userData","id","Date","now","name","email","coins","streak","mentalFitness","setItem","stringify","handleSignup","newUser","handleLogout","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","onSignup","onLogout","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/AppWrapper.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport App from './App';\r\nimport Auth from './Auth';\r\n\r\nconst AppWrapper = () => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Check if user is already logged in\r\n  useEffect(() => {\r\n    const savedUser = localStorage.getItem('moodMateUser');\r\n    if (savedUser) {\r\n      setUser(JSON.parse(savedUser));\r\n      setIsAuthenticated(true);\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const handleLogin = (credentials) => {\r\n    // Simulate API call - replace with actual API call\r\n    setTimeout(() => {\r\n      const userData = {\r\n        id: Date.now(),\r\n        name: \"Demo User\", // In real app, this would come from backend\r\n        email: credentials.email,\r\n        coins: 100,\r\n        streak: 5,\r\n        mentalFitness: 85\r\n      };\r\n      \r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('moodMateUser', JSON.stringify(userData));\r\n    }, 500);\r\n  };\r\n\r\n  const handleSignup = (userData) => {\r\n    // Simulate API call - replace with actual API call\r\n    setTimeout(() => {\r\n      const newUser = {\r\n        id: Date.now(),\r\n        name: userData.name,\r\n        email: userData.email,\r\n        coins: 50, // Bonus coins for signup\r\n        streak: 1,\r\n        mentalFitness: 75\r\n      };\r\n      \r\n      setUser(newUser);\r\n      setIsAuthenticated(true);\r\n      localStorage.setItem('moodMateUser', JSON.stringify(newUser));\r\n    }, 500);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n    localStorage.removeItem('moodMateUser');\r\n  };\r\n\r\n  if (loading) {\r\n    return <div className=\"loading\">Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    return <Auth onLogin={handleLogin} onSignup={handleSignup} />;\r\n  }\r\n\r\n  return <App user={user} onLogout={handleLogout} />;\r\n};\r\n\r\nexport default AppWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}