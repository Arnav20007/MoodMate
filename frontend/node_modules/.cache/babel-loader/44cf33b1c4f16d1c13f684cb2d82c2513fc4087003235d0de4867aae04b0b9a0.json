{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Community.css';\n\n// Enhanced sample data with revolutionary features\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialMoodWall = [{\n  id: 1,\n  userName: \"Anonymous\",\n  text: \"Finally finished a tough project at work. Feeling so relieved and proud! ✨\",\n  likes: 28,\n  mood: \"accomplished\",\n  timestamp: \"2 hours ago\",\n  empathyPulses: 12,\n  resonance: 0.87\n}, {\n  id: 2,\n  userName: \"HappyUser123\",\n  text: \"Just had a great chat with a friend I hadn't seen in a while. It's the small things!\",\n  likes: 45,\n  mood: \"joyful\",\n  timestamp: \"5 hours ago\",\n  empathyPulses: 23,\n  resonance: 0.92\n}, {\n  id: 3,\n  userName: \"Anonymous\",\n  text: \"Struggling with a bit of anxiety today, but trying to focus on my breathing exercises.\",\n  likes: 62,\n  mood: \"anxious\",\n  timestamp: \"1 day ago\",\n  empathyPulses: 45,\n  resonance: 0.78\n}];\nconst initialTribes = [{\n  id: 1,\n  name: \"Positivity Tribe\",\n  description: \"For those seeking positivity and joy.\",\n  members: 245,\n  isMember: false,\n  collectiveMood: \"optimistic\",\n  energyLevel: \"high\",\n  liveSupport: true\n}, {\n  id: 2,\n  name: \"Anxiety Allies\",\n  description: \"Support for those dealing with anxiety.\",\n  members: 312,\n  isMember: true,\n  collectiveMood: \"supportive\",\n  energyLevel: \"calm\",\n  liveSupport: true\n}, {\n  id: 3,\n  name: \"Mindfulness Masters\",\n  description: \"Practice mindfulness together.\",\n  members: 156,\n  isMember: false,\n  collectiveMood: \"focused\",\n  energyLevel: \"balanced\",\n  liveSupport: false\n}];\nconst initialChallenges = [{\n  id: 1,\n  title: \"7 Days of Gratitude\",\n  description: \"Write one thing you're grateful for each day.\",\n  reward: \"Gratitude Badge + 30 coins\",\n  participants: 1245,\n  completionRate: 72\n}, {\n  id: 2,\n  title: \"Mindful Mornings\",\n  description: \"Start each day with 5 mins of meditation.\",\n  reward: \"Mindful Badge + 20 coins\",\n  participants: 987,\n  completionRate: 68\n}];\n\n// Revolutionary AI features\nconst AIFeatures = {\n  moodPatternRecognition: true,\n  predictiveSupport: true,\n  emotionContagionTracking: true,\n  neuralHarmonization: true,\n  collectiveConsciousnessMapping: true\n};\nfunction Community({\n  user\n}) {\n  _s();\n  const [moodWall, setMoodWall] = useState(initialMoodWall);\n  const [moodTribes, setMoodTribes] = useState(initialTribes);\n  const [activeView, setActiveView] = useState('feed');\n  const [selectedMood, setSelectedMood] = useState('');\n  const [empathyPulse, setEmpathyPulse] = useState(false);\n  const empathyPulseRef = useRef(null);\n\n  // AI-Powered Mood Analysis\n  const analyzeCollectiveMood = () => {\n    const moodCounts = {};\n    moodWall.forEach(post => {\n      if (post.mood) {\n        moodCounts[post.mood] = (moodCounts[post.mood] || 0) + 1;\n      }\n    });\n    return Object.entries(moodCounts).sort((a, b) => b[1] - a[1]).map(([mood]) => mood)[0] || 'neutral';\n  };\n\n  // Neural Response Technology\n  const handleEmpathyPulse = postId => {\n    setEmpathyPulse(true);\n    setMoodWall(prev => prev.map(post => post.id === postId ? {\n      ...post,\n      empathyPulses: post.empathyPulses + 1\n    } : post));\n\n    // Send subtle vibration if available\n    if (navigator.vibrate) {\n      navigator.vibrate([100, 50, 100]);\n    }\n    setTimeout(() => setEmpathyPulse(false), 1000);\n  };\n\n  // Predictive Support System\n  const getSupportSuggestions = mood => {\n    const suggestions = {\n      anxious: \"Try the 4-7-8 breathing exercise. Breathe in for 4, hold for 7, exhale for 8.\",\n      sad: \"Research shows that 20 minutes of sunlight can significantly improve mood.\",\n      stressed: \"The 5-4-3-2-1 grounding technique can help bring you back to the present.\",\n      joyful: \"Share your positive energy with others - it's contagious in the best way!\",\n      accomplished: \"Take a moment to truly savor this feeling of achievement.\"\n    };\n    return suggestions[mood] || \"You're not alone. The community is here with you.\";\n  };\n\n  // Emotion Resonance Technology\n  const calculateResonance = (userMood, postMood) => {\n    var _resonanceMatrix$user;\n    const resonanceMatrix = {\n      anxious: {\n        anxious: 0.95,\n        calm: 0.65,\n        joyful: 0.35\n      },\n      calm: {\n        anxious: 0.65,\n        calm: 0.90,\n        joyful: 0.75\n      },\n      joyful: {\n        anxious: 0.35,\n        calm: 0.75,\n        joyful: 0.95\n      }\n    };\n    return ((_resonanceMatrix$user = resonanceMatrix[userMood]) === null || _resonanceMatrix$user === void 0 ? void 0 : _resonanceMatrix$user[postMood]) || 0.7;\n  };\n\n  // Collective Consciousness Interface\n  const CollectiveConsciousnessView = () => {\n    const collectiveMood = analyzeCollectiveMood();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"collective-consciousness\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDF10 Collective Consciousness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"consciousness-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"consciousness-metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: moodWall.length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Active Connections\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"consciousness-metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: collectiveMood\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Collective Mood\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"consciousness-metric\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: [Math.round(moodWall.reduce((sum, post) => sum + post.resonance, 0) / moodWall.length * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Harmony Level\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-network\",\n        children: moodWall.slice(0, 15).map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `network-node ${post.mood}`,\n          style: {\n            left: `${Math.random() * 90}%`,\n            top: `${Math.random() * 90}%`\n          }\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this);\n  };\n  const handleAddPost = (text, mood) => {\n    if (text && text.trim() !== \"\") {\n      const userMood = (user === null || user === void 0 ? void 0 : user.currentMood) || 'neutral';\n      const newPost = {\n        id: Date.now(),\n        userName: \"Anonymous\",\n        text: text,\n        likes: 0,\n        mood: mood,\n        timestamp: \"Just now\",\n        empathyPulses: 0,\n        resonance: calculateResonance(userMood, mood)\n      };\n      setMoodWall(prev => [newPost, ...prev]);\n    }\n  };\n  const handleJoinTribe = tribeId => {\n    setMoodTribes(prevTribes => prevTribes.map(tribe => tribe.id === tribeId ? {\n      ...tribe,\n      isMember: !tribe.isMember,\n      members: tribe.isMember ? tribe.members - 1 : tribe.members + 1\n    } : tribe));\n  };\n\n  // Neural Harmonization Effect\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setMoodWall(prev => prev.map(post => ({\n        ...post,\n        resonance: Math.min(0.99, post.resonance + 0.01)\n      })));\n    }, 60000); // Increase harmony every minute\n\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-hub tab-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mood Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-selector\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeView === 'feed' ? 'active' : '',\n          onClick: () => setActiveView('feed'),\n          children: \"Feed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeView === 'collective' ? 'active' : '',\n          onClick: () => setActiveView('collective'),\n          children: \"Collective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: activeView === 'support' ? 'active' : '',\n          onClick: () => setActiveView('support'),\n          children: \"Support\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }, this), activeView === 'collective' && /*#__PURE__*/_jsxDEV(CollectiveConsciousnessView, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-wall-section\",\n        children: [activeView === 'feed' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDF0D Community Mood Wall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-creator\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Share your feelings with the community (anonymously)...\",\n              onKeyDown: e => {\n                if (e.key === 'Enter' && !e.shiftKey) {\n                  e.preventDefault();\n                  handleAddPost(e.target.value, selectedMood);\n                  e.target.value = '';\n                  setSelectedMood('');\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mood-selector\",\n              children: ['anxious', 'calm', 'joyful', 'accomplished', 'grateful'].map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n                className: selectedMood === mood ? 'selected' : '',\n                onClick: () => setSelectedMood(mood),\n                children: mood\n              }, mood, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"add-post-btn\",\n              onClick: () => {\n                const text = document.querySelector('.post-creator textarea').value;\n                handleAddPost(text, selectedMood);\n                document.querySelector('.post-creator textarea').value = '';\n                setSelectedMood('');\n              },\n              children: \"+ Share Your Feelings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), activeView === 'support' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"support-view\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83E\\uDD1D AI-Powered Support\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"support-suggestions\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Based on the community's current mood, here's how we can support each other:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"suggestion\",\n              children: getSupportSuggestions(analyzeCollectiveMood())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-list\",\n          children: moodWall.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-avatar\",\n                children: post.userName.charAt(0)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"post-username\",\n                  children: post.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"post-timestamp\",\n                  children: post.timestamp\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `mood-indicator ${post.mood}`,\n                children: post.mood\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"post-content\",\n              children: post.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-resonance\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"resonance-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"resonance-fill\",\n                  style: {\n                    width: `${post.resonance * 100}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"resonance-text\",\n                children: [Math.round(post.resonance * 100), \"% resonance\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"like-btn\",\n                children: [\"\\uD83D\\uDC96 \", post.likes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"empathy-btn\",\n                onClick: () => handleEmpathyPulse(post.id),\n                children: [empathyPulse ? '⚡' : '✨', \" \", post.empathyPulses]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"comment-btn\",\n                children: \"\\uD83D\\uDCAC Comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 33\n            }, this)]\n          }, post.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tribes-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFAF Mood Tribes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-list\",\n            children: moodTribes.map(tribe => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tribe-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: tribe.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: tribe.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tribe-metrics\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tribe-mood\",\n                  children: tribe.collectiveMood\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tribe-energy\",\n                  children: tribe.energyLevel\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 41\n                }, this), tribe.liveSupport && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"live-support\",\n                  children: \"Live Support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 63\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tribe-footer\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\uD83D\\uDC65 \", tribe.members, \" members\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `join-btn ${tribe.isMember ? 'joined' : ''}`,\n                  onClick: () => handleJoinTribe(tribe.id),\n                  children: tribe.isMember ? 'Joined' : 'Join'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 37\n              }, this)]\n            }, tribe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenges-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83C\\uDFC6 Community Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar-list\",\n            children: initialChallenges.map(challenge => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"challenge-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: challenge.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: challenge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\uD83D\\uDC65 \", challenge.participants, \" joined\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 396,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\"\\u2705 \", challenge.completionRate, \"% completion\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-reward\",\n                children: challenge.reward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"join-challenge-btn\",\n                children: \"Start Challenge\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 37\n              }, this)]\n            }, challenge.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ai-features\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\uD83E\\uDDE0 AI Features\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"features-list\",\n            children: Object.entries(AIFeatures).map(([feature, active]) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feature-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"feature-name\",\n                children: feature.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `feature-status ${active ? 'active' : 'inactive'}`,\n                children: active ? 'Active' : 'Inactive'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 37\n              }, this)]\n            }, feature, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n}\n_s(Community, \"Ob4WnKAsm65CXN2k9oToMuTEbTA=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","initialMoodWall","id","userName","text","likes","mood","timestamp","empathyPulses","resonance","initialTribes","name","description","members","isMember","collectiveMood","energyLevel","liveSupport","initialChallenges","title","reward","participants","completionRate","AIFeatures","moodPatternRecognition","predictiveSupport","emotionContagionTracking","neuralHarmonization","collectiveConsciousnessMapping","Community","user","_s","moodWall","setMoodWall","moodTribes","setMoodTribes","activeView","setActiveView","selectedMood","setSelectedMood","empathyPulse","setEmpathyPulse","empathyPulseRef","analyzeCollectiveMood","moodCounts","forEach","post","Object","entries","sort","a","b","map","handleEmpathyPulse","postId","prev","navigator","vibrate","setTimeout","getSupportSuggestions","suggestions","anxious","sad","stressed","joyful","accomplished","calculateResonance","userMood","postMood","_resonanceMatrix$user","resonanceMatrix","calm","CollectiveConsciousnessView","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","Math","round","reduce","sum","slice","style","left","random","top","handleAddPost","trim","currentMood","newPost","Date","now","handleJoinTribe","tribeId","prevTribes","tribe","interval","setInterval","min","clearInterval","onClick","placeholder","onKeyDown","e","key","shiftKey","preventDefault","target","value","document","querySelector","charAt","width","challenge","feature","active","replace","str","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Community.css';\r\n\r\n// Enhanced sample data with revolutionary features\r\nconst initialMoodWall = [\r\n    {\r\n        id: 1, \r\n        userName: \"Anonymous\", \r\n        text: \"Finally finished a tough project at work. Feeling so relieved and proud! ✨\", \r\n        likes: 28,\r\n        mood: \"accomplished\",\r\n        timestamp: \"2 hours ago\",\r\n        empathyPulses: 12,\r\n        resonance: 0.87\r\n    },\r\n    {\r\n        id: 2, \r\n        userName: \"HappyUser123\", \r\n        text: \"Just had a great chat with a friend I hadn't seen in a while. It's the small things!\", \r\n        likes: 45,\r\n        mood: \"joyful\",\r\n        timestamp: \"5 hours ago\",\r\n        empathyPulses: 23,\r\n        resonance: 0.92\r\n    },\r\n    {\r\n        id: 3, \r\n        userName: \"Anonymous\", \r\n        text: \"Struggling with a bit of anxiety today, but trying to focus on my breathing exercises.\", \r\n        likes: 62,\r\n        mood: \"anxious\",\r\n        timestamp: \"1 day ago\",\r\n        empathyPulses: 45,\r\n        resonance: 0.78\r\n    }\r\n];\r\n\r\nconst initialTribes = [\r\n    {\r\n        id: 1, \r\n        name: \"Positivity Tribe\", \r\n        description: \"For those seeking positivity and joy.\", \r\n        members: 245, \r\n        isMember: false,\r\n        collectiveMood: \"optimistic\",\r\n        energyLevel: \"high\",\r\n        liveSupport: true\r\n    },\r\n    {\r\n        id: 2, \r\n        name: \"Anxiety Allies\", \r\n        description: \"Support for those dealing with anxiety.\", \r\n        members: 312, \r\n        isMember: true,\r\n        collectiveMood: \"supportive\",\r\n        energyLevel: \"calm\",\r\n        liveSupport: true\r\n    },\r\n    {\r\n        id: 3, \r\n        name: \"Mindfulness Masters\", \r\n        description: \"Practice mindfulness together.\", \r\n        members: 156, \r\n        isMember: false,\r\n        collectiveMood: \"focused\",\r\n        energyLevel: \"balanced\",\r\n        liveSupport: false\r\n    }\r\n];\r\n\r\nconst initialChallenges = [\r\n    {\r\n        id: 1, \r\n        title: \"7 Days of Gratitude\", \r\n        description: \"Write one thing you're grateful for each day.\", \r\n        reward: \"Gratitude Badge + 30 coins\",\r\n        participants: 1245,\r\n        completionRate: 72\r\n    },\r\n    {\r\n        id: 2, \r\n        title: \"Mindful Mornings\", \r\n        description: \"Start each day with 5 mins of meditation.\", \r\n        reward: \"Mindful Badge + 20 coins\",\r\n        participants: 987,\r\n        completionRate: 68\r\n    }\r\n];\r\n\r\n// Revolutionary AI features\r\nconst AIFeatures = {\r\n    moodPatternRecognition: true,\r\n    predictiveSupport: true,\r\n    emotionContagionTracking: true,\r\n    neuralHarmonization: true,\r\n    collectiveConsciousnessMapping: true\r\n};\r\n\r\nfunction Community({ user }) {\r\n    const [moodWall, setMoodWall] = useState(initialMoodWall);\r\n    const [moodTribes, setMoodTribes] = useState(initialTribes);\r\n    const [activeView, setActiveView] = useState('feed');\r\n    const [selectedMood, setSelectedMood] = useState('');\r\n    const [empathyPulse, setEmpathyPulse] = useState(false);\r\n    const empathyPulseRef = useRef(null);\r\n\r\n    // AI-Powered Mood Analysis\r\n    const analyzeCollectiveMood = () => {\r\n        const moodCounts = {};\r\n        moodWall.forEach(post => {\r\n            if (post.mood) {\r\n                moodCounts[post.mood] = (moodCounts[post.mood] || 0) + 1;\r\n            }\r\n        });\r\n        return Object.entries(moodCounts)\r\n            .sort((a, b) => b[1] - a[1])\r\n            .map(([mood]) => mood)[0] || 'neutral';\r\n    };\r\n\r\n    // Neural Response Technology\r\n    const handleEmpathyPulse = (postId) => {\r\n        setEmpathyPulse(true);\r\n        setMoodWall(prev => \r\n            prev.map(post => \r\n                post.id === postId \r\n                    ? { ...post, empathyPulses: post.empathyPulses + 1 } \r\n                    : post\r\n            )\r\n        );\r\n        \r\n        // Send subtle vibration if available\r\n        if (navigator.vibrate) {\r\n            navigator.vibrate([100, 50, 100]);\r\n        }\r\n        \r\n        setTimeout(() => setEmpathyPulse(false), 1000);\r\n    };\r\n\r\n    // Predictive Support System\r\n    const getSupportSuggestions = (mood) => {\r\n        const suggestions = {\r\n            anxious: \"Try the 4-7-8 breathing exercise. Breathe in for 4, hold for 7, exhale for 8.\",\r\n            sad: \"Research shows that 20 minutes of sunlight can significantly improve mood.\",\r\n            stressed: \"The 5-4-3-2-1 grounding technique can help bring you back to the present.\",\r\n            joyful: \"Share your positive energy with others - it's contagious in the best way!\",\r\n            accomplished: \"Take a moment to truly savor this feeling of achievement.\"\r\n        };\r\n        return suggestions[mood] || \"You're not alone. The community is here with you.\";\r\n    };\r\n\r\n    // Emotion Resonance Technology\r\n    const calculateResonance = (userMood, postMood) => {\r\n        const resonanceMatrix = {\r\n            anxious: { anxious: 0.95, calm: 0.65, joyful: 0.35 },\r\n            calm: { anxious: 0.65, calm: 0.90, joyful: 0.75 },\r\n            joyful: { anxious: 0.35, calm: 0.75, joyful: 0.95 }\r\n        };\r\n        return resonanceMatrix[userMood]?.[postMood] || 0.7;\r\n    };\r\n\r\n    // Collective Consciousness Interface\r\n    const CollectiveConsciousnessView = () => {\r\n        const collectiveMood = analyzeCollectiveMood();\r\n        \r\n        return (\r\n            <div className=\"collective-consciousness\">\r\n                <h3>🌐 Collective Consciousness</h3>\r\n                <div className=\"consciousness-grid\">\r\n                    <div className=\"consciousness-metric\">\r\n                        <span className=\"metric-value\">{moodWall.length}</span>\r\n                        <span className=\"metric-label\">Active Connections</span>\r\n                    </div>\r\n                    <div className=\"consciousness-metric\">\r\n                        <span className=\"metric-value\">{collectiveMood}</span>\r\n                        <span className=\"metric-label\">Collective Mood</span>\r\n                    </div>\r\n                    <div className=\"consciousness-metric\">\r\n                        <span className=\"metric-value\">\r\n                            {Math.round(moodWall.reduce((sum, post) => sum + post.resonance, 0) / moodWall.length * 100)}%\r\n                        </span>\r\n                        <span className=\"metric-label\">Harmony Level</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mood-network\">\r\n                    {moodWall.slice(0, 15).map(post => (\r\n                        <div \r\n                            key={post.id} \r\n                            className={`network-node ${post.mood}`}\r\n                            style={{\r\n                                left: `${Math.random() * 90}%`,\r\n                                top: `${Math.random() * 90}%`\r\n                            }}\r\n                        ></div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const handleAddPost = (text, mood) => {\r\n        if (text && text.trim() !== \"\") {\r\n            const userMood = user?.currentMood || 'neutral';\r\n            const newPost = {\r\n                id: Date.now(),\r\n                userName: \"Anonymous\",\r\n                text: text,\r\n                likes: 0,\r\n                mood: mood,\r\n                timestamp: \"Just now\",\r\n                empathyPulses: 0,\r\n                resonance: calculateResonance(userMood, mood)\r\n            };\r\n            setMoodWall(prev => [newPost, ...prev]);\r\n        }\r\n    };\r\n\r\n    const handleJoinTribe = (tribeId) => {\r\n        setMoodTribes(prevTribes => \r\n            prevTribes.map(tribe => \r\n                tribe.id === tribeId ? { \r\n                    ...tribe, \r\n                    isMember: !tribe.isMember, \r\n                    members: tribe.isMember ? tribe.members - 1 : tribe.members + 1 \r\n                } : tribe\r\n            )\r\n        );\r\n    };\r\n\r\n    // Neural Harmonization Effect\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setMoodWall(prev => prev.map(post => ({\r\n                ...post,\r\n                resonance: Math.min(0.99, post.resonance + 0.01)\r\n            })));\r\n        }, 60000); // Increase harmony every minute\r\n        \r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"community-hub tab-content\">\r\n            <div className=\"community-header\">\r\n                <h2>Mood Community</h2>\r\n                <div className=\"view-selector\">\r\n                    <button \r\n                        className={activeView === 'feed' ? 'active' : ''} \r\n                        onClick={() => setActiveView('feed')}\r\n                    >\r\n                        Feed\r\n                    </button>\r\n                    <button \r\n                        className={activeView === 'collective' ? 'active' : ''} \r\n                        onClick={() => setActiveView('collective')}\r\n                    >\r\n                        Collective\r\n                    </button>\r\n                    <button \r\n                        className={activeView === 'support' ? 'active' : ''} \r\n                        onClick={() => setActiveView('support')}\r\n                    >\r\n                        Support\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {activeView === 'collective' && <CollectiveConsciousnessView />}\r\n\r\n            <div className=\"community-layout\">\r\n                <div className=\"mood-wall-section\">\r\n                    {activeView === 'feed' && (\r\n                        <>\r\n                            <h3>🌍 Community Mood Wall</h3>\r\n                            <div className=\"post-creator\">\r\n                                <textarea \r\n                                    placeholder=\"Share your feelings with the community (anonymously)...\"\r\n                                    onKeyDown={(e) => {\r\n                                        if (e.key === 'Enter' && !e.shiftKey) {\r\n                                            e.preventDefault();\r\n                                            handleAddPost(e.target.value, selectedMood);\r\n                                            e.target.value = '';\r\n                                            setSelectedMood('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                <div className=\"mood-selector\">\r\n                                    {['anxious', 'calm', 'joyful', 'accomplished', 'grateful'].map(mood => (\r\n                                        <button\r\n                                            key={mood}\r\n                                            className={selectedMood === mood ? 'selected' : ''}\r\n                                            onClick={() => setSelectedMood(mood)}\r\n                                        >\r\n                                            {mood}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <button className=\"add-post-btn\" onClick={() => {\r\n                                    const text = document.querySelector('.post-creator textarea').value;\r\n                                    handleAddPost(text, selectedMood);\r\n                                    document.querySelector('.post-creator textarea').value = '';\r\n                                    setSelectedMood('');\r\n                                }}>\r\n                                    + Share Your Feelings\r\n                                </button>\r\n                            </div>\r\n                        </>\r\n                    )}\r\n\r\n                    {activeView === 'support' && (\r\n                        <div className=\"support-view\">\r\n                            <h3>🤝 AI-Powered Support</h3>\r\n                            <div className=\"support-suggestions\">\r\n                                <p>Based on the community's current mood, here's how we can support each other:</p>\r\n                                <div className=\"suggestion\">\r\n                                    {getSupportSuggestions(analyzeCollectiveMood())}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"post-list\">\r\n                        {moodWall.map(post => (\r\n                            <div key={post.id} className=\"post-card\">\r\n                                <div className=\"post-header\">\r\n                                    <div className=\"post-avatar\">{post.userName.charAt(0)}</div>\r\n                                    <div className=\"post-info\">\r\n                                        <span className=\"post-username\">{post.userName}</span>\r\n                                        <span className=\"post-timestamp\">{post.timestamp}</span>\r\n                                    </div>\r\n                                    <div className={`mood-indicator ${post.mood}`}>\r\n                                        {post.mood}\r\n                                    </div>\r\n                                </div>\r\n                                <p className=\"post-content\">{post.text}</p>\r\n                                <div className=\"post-resonance\">\r\n                                    <div className=\"resonance-bar\">\r\n                                        <div \r\n                                            className=\"resonance-fill\" \r\n                                            style={{ width: `${post.resonance * 100}%` }}\r\n                                        ></div>\r\n                                    </div>\r\n                                    <span className=\"resonance-text\">\r\n                                        {Math.round(post.resonance * 100)}% resonance\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"post-actions\">\r\n                                    <button className=\"like-btn\">💖 {post.likes}</button>\r\n                                    <button \r\n                                        className=\"empathy-btn\"\r\n                                        onClick={() => handleEmpathyPulse(post.id)}\r\n                                    >\r\n                                        {empathyPulse ? '⚡' : '✨'} {post.empathyPulses}\r\n                                    </button>\r\n                                    <button className=\"comment-btn\">💬 Comment</button>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"community-sidebar\">\r\n                    <div className=\"tribes-section\">\r\n                        <h3>🎯 Mood Tribes</h3>\r\n                        <div className=\"sidebar-list\">\r\n                            {moodTribes.map(tribe => (\r\n                                <div key={tribe.id} className=\"tribe-card\">\r\n                                    <h4>{tribe.name}</h4>\r\n                                    <p>{tribe.description}</p>\r\n                                    <div className=\"tribe-metrics\">\r\n                                        <span className=\"tribe-mood\">{tribe.collectiveMood}</span>\r\n                                        <span className=\"tribe-energy\">{tribe.energyLevel}</span>\r\n                                        {tribe.liveSupport && <span className=\"live-support\">Live Support</span>}\r\n                                    </div>\r\n                                    <div className=\"tribe-footer\">\r\n                                        <span>👥 {tribe.members} members</span>\r\n                                        <button \r\n                                            className={`join-btn ${tribe.isMember ? 'joined' : ''}`}\r\n                                            onClick={() => handleJoinTribe(tribe.id)}\r\n                                        >\r\n                                            {tribe.isMember ? 'Joined' : 'Join'}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"challenges-section\">\r\n                        <h3>🏆 Community Challenges</h3>\r\n                        <div className=\"sidebar-list\">\r\n                            {initialChallenges.map(challenge => (\r\n                                <div key={challenge.id} className=\"challenge-card\">\r\n                                    <h4>{challenge.title}</h4>\r\n                                    <p>{challenge.description}</p>\r\n                                    <div className=\"challenge-stats\">\r\n                                        <span>👥 {challenge.participants} joined</span>\r\n                                        <span>✅ {challenge.completionRate}% completion</span>\r\n                                    </div>\r\n                                    <div className=\"challenge-reward\">{challenge.reward}</div>\r\n                                    <button className=\"join-challenge-btn\">Start Challenge</button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"ai-features\">\r\n                        <h3>🧠 AI Features</h3>\r\n                        <div className=\"features-list\">\r\n                            {Object.entries(AIFeatures).map(([feature, active]) => (\r\n                                <div key={feature} className=\"feature-item\">\r\n                                    <span className=\"feature-name\">\r\n                                        {feature.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase())}\r\n                                    </span>\r\n                                    <span className={`feature-status ${active ? 'active' : 'inactive'}`}>\r\n                                        {active ? 'Active' : 'Inactive'}\r\n                                    </span>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Community;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}