{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000';\nfunction Chat({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    // Initial welcome message\n    setMessages([{\n      text: `Hello ${user.username}! I'm MoodMate, your mental health companion. How are you feeling today?`,\n      sender: 'bot'\n    }]);\n  }, [user.username]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const response = await fetch(`${API_BASE_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      const botMessage = {\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      const errorMsg = {\n        text: \"Sorry, I couldn't connect. Please try again.\",\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message bot typing\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 63\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 77\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"nOTu7TZx1TtBTwsvkZRLf++FuY4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","Chat","user","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","chatEndRef","text","username","sender","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","response","fetch","method","headers","credentials","body","JSON","stringify","message","ok","Error","status","data","json","botMessage","reply","error","console","errorMsg","className","children","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nconst API_BASE_URL = 'http://127.0.0.1:5000';\r\n\r\nfunction Chat({ user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        // Initial welcome message\r\n        setMessages([{\r\n            text: `Hello ${user.username}! I'm MoodMate, your mental health companion. How are you feeling today?`,\r\n            sender: 'bot'\r\n        }]);\r\n    }, [user.username]);\r\n\r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = { text: input, sender: 'user' };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInput(\"\");\r\n        setIsTyping(true);\r\n\r\n        try {\r\n            const response = await fetch(`${API_BASE_URL}/api/chat`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                credentials: 'include',\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n\r\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\r\n            \r\n            const data = await response.json();\r\n            const botMessage = { text: data.reply, sender: 'bot' };\r\n            setMessages(prev => [...prev, botMessage]);\r\n\r\n        } catch (error) {\r\n            console.error(\"Chat error:\", error);\r\n            const errorMsg = { text: \"Sorry, I couldn't connect. Please try again.\", sender: 'bot' };\r\n            setMessages(prev => [...prev, errorMsg]);\r\n        } finally {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                {messages.map((msg, index) => (\r\n                    <div key={index} className={`chat-message ${msg.sender}`}>\r\n                        <div className=\"bubble\">{msg.text}</div>\r\n                    </div>\r\n                ))}\r\n                {isTyping && (\r\n                    <div className=\"chat-message bot typing\">\r\n                        <div className=\"bubble\"><span>.</span><span>.</span><span>.</span></div>\r\n                    </div>\r\n                )}\r\n                <div ref={chatEndRef} />\r\n            </div>\r\n            <div className=\"input-area\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button onClick={sendMessage}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}