{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Community.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Community.css';\n\n// Sample data that would normally come from your backend\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialMoodWall = [{\n  id: 1,\n  userName: \"Anonymous\",\n  text: \"Finally finished a tough project at work. Feeling so relieved and proud! âœ¨\",\n  likes: 28,\n  comments: 3,\n  shares: 2,\n  timestamp: \"2 hours ago\",\n  userLiked: false\n}, {\n  id: 2,\n  userName: \"HappyUser123\",\n  text: \"Just had a great chat with a friend I hadn't seen in a while. It's the small things!\",\n  likes: 45,\n  comments: 5,\n  shares: 1,\n  timestamp: \"5 hours ago\",\n  userLiked: true\n}, {\n  id: 3,\n  userName: \"Anonymous\",\n  text: \"Struggling with a bit of anxiety today, but trying to focus on my breathing exercises.\",\n  likes: 62,\n  comments: 7,\n  shares: 0,\n  timestamp: \"1 day ago\",\n  userLiked: false\n}];\nconst initialTribes = [{\n  id: 1,\n  name: \"Positivity Tribe\",\n  description: \"For those seeking positivity and joy.\",\n  members: 245,\n  isMember: false,\n  online: 23,\n  tags: [\"positivity\", \"joy\", \"gratitude\"]\n}, {\n  id: 2,\n  name: \"Anxiety Allies\",\n  description: \"Support for those dealing with anxiety.\",\n  members: 312,\n  isMember: true,\n  online: 45,\n  tags: [\"support\", \"anxiety\", \"mental-health\"]\n}, {\n  id: 3,\n  name: \"Mindfulness Masters\",\n  description: \"Practice mindfulness together.\",\n  members: 156,\n  isMember: false,\n  online: 12,\n  tags: [\"mindfulness\", \"meditation\", \"peace\"]\n}];\nconst initialChallenges = [{\n  id: 1,\n  title: \"7 Days of Gratitude\",\n  description: \"Write one thing you're grateful for each day.\",\n  reward: \"Gratitude Badge + 30 coins\",\n  participants: 1245,\n  joined: false\n}, {\n  id: 2,\n  title: \"Mindful Mornings\",\n  description: \"Start each day with 5 mins of meditation.\",\n  reward: \"Mindful Badge + 20 coins\",\n  participants: 987,\n  joined: true\n}];\nfunction Community({\n  user\n}) {\n  _s();\n  const [moodWall, setMoodWall] = useState(initialMoodWall);\n  const [moodTribes, setMoodTribes] = useState(initialTribes);\n  const [challenges, setChallenges] = useState(initialChallenges);\n  const [newPostText, setNewPostText] = useState('');\n  const [selectedMood, setSelectedMood] = useState('');\n  const [activeTribe, setActiveTribe] = useState(null);\n  const [tribeChat, setTribeChat] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  // Simulate loading user data\n  useEffect(() => {\n    // This would be an API call in a real app\n    const userData = {\n      name: \"CurrentUser\",\n      mood: \"calm\",\n      level: 5,\n      achievements: [\"7-day streak\", \"Helper badge\"]\n    };\n  }, []);\n  const handleAddPost = () => {\n    if (newPostText.trim() !== \"\") {\n      const newPost = {\n        id: Date.now(),\n        userName: \"You\",\n        text: newPostText,\n        likes: 0,\n        comments: 0,\n        shares: 0,\n        timestamp: \"Just now\",\n        userLiked: false,\n        mood: selectedMood\n      };\n      setMoodWall(prev => [newPost, ...prev]);\n      setNewPostText('');\n      setSelectedMood('');\n    }\n  };\n  const handleJoinTribe = tribeId => {\n    setMoodTribes(prevTribes => prevTribes.map(tribe => tribe.id === tribeId ? {\n      ...tribe,\n      isMember: !tribe.isMember,\n      members: tribe.isMember ? tribe.members - 1 : tribe.members + 1\n    } : tribe));\n  };\n  const handleLikePost = postId => {\n    setMoodWall(prev => prev.map(post => post.id === postId ? {\n      ...post,\n      likes: post.userLiked ? post.likes - 1 : post.likes + 1,\n      userLiked: !post.userLiked\n    } : post));\n  };\n  const handleJoinChallenge = challengeId => {\n    setChallenges(prevChallenges => prevChallenges.map(challenge => challenge.id === challengeId ? {\n      ...challenge,\n      joined: !challenge.joined,\n      participants: challenge.joined ? challenge.participants - 1 : challenge.participants + 1\n    } : challenge));\n  };\n  const handleJoinTribeChat = tribe => {\n    setActiveTribe(tribe);\n    // Simulate loading tribe chat messages\n    const mockMessages = [{\n      id: 1,\n      user: \"MindfulUser\",\n      text: \"Welcome to our tribe! How is everyone today?\",\n      timestamp: \"10:30 AM\"\n    }, {\n      id: 2,\n      user: \"CalmSoul\",\n      text: \"I'm doing well, just finished my morning meditation\",\n      timestamp: \"10:32 AM\"\n    }, {\n      id: 3,\n      user: \"PeaceSeeker\",\n      text: \"Has anyone tried the new breathing exercise?\",\n      timestamp: \"10:45 AM\"\n    }];\n    setTribeChat(mockMessages);\n  };\n  const handleSendMessage = () => {\n    if (newMessage.trim() !== \"\" && activeTribe) {\n      const message = {\n        id: Date.now(),\n        user: \"You\",\n        text: newMessage,\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setTribeChat(prev => [...prev, message]);\n      setNewMessage('');\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-hub\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Mood Community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Connect with others who understand what you're going through\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-layout\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-wall-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Community Mood Wall\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-creator\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              placeholder: \"Share your feelings with the community...\",\n              value: newPostText,\n              onChange: e => setNewPostText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mood-selector\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"I'm feeling:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), ['happy', 'calm', 'anxious', 'sad', 'excited', 'grateful'].map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: selectedMood === mood ? 'mood-option selected' : 'mood-option',\n                  onClick: () => setSelectedMood(mood),\n                  children: mood\n                }, mood, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 41\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"post-btn\",\n                onClick: handleAddPost,\n                disabled: !newPostText.trim(),\n                children: \"Post\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-list\",\n            children: moodWall.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"post-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-info\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"post-avatar\",\n                    children: post.userName.charAt(0)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"post-username\",\n                      children: post.userName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"post-timestamp\",\n                      children: post.timestamp\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 41\n                }, this), post.mood && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `post-mood ${post.mood}`,\n                  children: post.mood\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 55\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"post-content\",\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"post-stats\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: post.userLiked ? 'like-btn liked' : 'like-btn',\n                  onClick: () => handleLikePost(post.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: post.userLiked ? \"fas fa-heart\" : \"far fa-heart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 45\n                  }, this), post.likes]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment-btn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 45\n                  }, this), post.comments]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"share-btn\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"far fa-share-square\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 45\n                  }, this), post.shares]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this)]\n            }, post.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tribes-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Mood Tribes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tribe-list\",\n            children: moodTribes.map(tribe => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tribe-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tribe-header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: tribe.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"tribe-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"members-count\",\n                    children: [tribe.members, \" members\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"online-count\",\n                    children: [tribe.online, \" online\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"tribe-description\",\n                children: tribe.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tribe-tags\",\n                children: tribe.tags.map(tag => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag\",\n                  children: [\"#\", tag]\n                }, tag, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 45\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tribe-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: tribe.isMember ? 'join-btn joined' : 'join-btn',\n                  onClick: () => handleJoinTribe(tribe.id),\n                  children: tribe.isMember ? 'Joined' : 'Join Tribe'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"chat-btn\",\n                  onClick: () => handleJoinTribeChat(tribe),\n                  children: \"Chat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this)]\n            }, tribe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenges-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Community Challenges\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenge-list\",\n            children: challenges.map(challenge => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"challenge-card\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: challenge.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: challenge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"participants\",\n                  children: [challenge.participants, \" participants\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reward\",\n                  children: challenge.reward\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: challenge.joined ? 'join-challenge-btn joined' : 'join-challenge-btn',\n                onClick: () => handleJoinChallenge(challenge.id),\n                children: challenge.joined ? 'Joined' : 'Join Challenge'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 37\n              }, this)]\n            }, challenge.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), activeTribe && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tribe-chat-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [activeTribe.name, \" Chat\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-chat\",\n          onClick: () => setActiveTribe(null),\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-times\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: tribeChat.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: message.user === \"You\" ? \"message own-message\" : \"message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-sender\",\n            children: message.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: message.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Type a message...\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n}\n_s(Community, \"D/vFVKeCsc2CYbFn3ID+9gLeBdc=\");\n_c = Community;\nexport default Community;\nvar _c;\n$RefreshReg$(_c, \"Community\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","initialMoodWall","id","userName","text","likes","comments","shares","timestamp","userLiked","initialTribes","name","description","members","isMember","online","tags","initialChallenges","title","reward","participants","joined","Community","user","_s","moodWall","setMoodWall","moodTribes","setMoodTribes","challenges","setChallenges","newPostText","setNewPostText","selectedMood","setSelectedMood","activeTribe","setActiveTribe","tribeChat","setTribeChat","newMessage","setNewMessage","userData","mood","level","achievements","handleAddPost","trim","newPost","Date","now","prev","handleJoinTribe","tribeId","prevTribes","map","tribe","handleLikePost","postId","post","handleJoinChallenge","challengeId","prevChallenges","challenge","handleJoinTribeChat","mockMessages","handleSendMessage","message","toLocaleTimeString","hour","minute","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","target","onClick","disabled","charAt","tag","type","onKeyPress","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Community.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './Community.css';\r\n\r\n// Sample data that would normally come from your backend\r\nconst initialMoodWall = [\r\n    {id: 1, userName: \"Anonymous\", text: \"Finally finished a tough project at work. Feeling so relieved and proud! âœ¨\", likes: 28, comments: 3, shares: 2, timestamp: \"2 hours ago\", userLiked: false},\r\n    {id: 2, userName: \"HappyUser123\", text: \"Just had a great chat with a friend I hadn't seen in a while. It's the small things!\", likes: 45, comments: 5, shares: 1, timestamp: \"5 hours ago\", userLiked: true},\r\n    {id: 3, userName: \"Anonymous\", text: \"Struggling with a bit of anxiety today, but trying to focus on my breathing exercises.\", likes: 62, comments: 7, shares: 0, timestamp: \"1 day ago\", userLiked: false}\r\n];\r\n\r\nconst initialTribes = [\r\n    {id: 1, name: \"Positivity Tribe\", description: \"For those seeking positivity and joy.\", members: 245, isMember: false, online: 23, tags: [\"positivity\", \"joy\", \"gratitude\"]},\r\n    {id: 2, name: \"Anxiety Allies\", description: \"Support for those dealing with anxiety.\", members: 312, isMember: true, online: 45, tags: [\"support\", \"anxiety\", \"mental-health\"]},\r\n    {id: 3, name: \"Mindfulness Masters\", description: \"Practice mindfulness together.\", members: 156, isMember: false, online: 12, tags: [\"mindfulness\", \"meditation\", \"peace\"]}\r\n];\r\n\r\nconst initialChallenges = [\r\n    {id: 1, title: \"7 Days of Gratitude\", description: \"Write one thing you're grateful for each day.\", reward: \"Gratitude Badge + 30 coins\", participants: 1245, joined: false},\r\n    {id: 2, title: \"Mindful Mornings\", description: \"Start each day with 5 mins of meditation.\", reward: \"Mindful Badge + 20 coins\", participants: 987, joined: true}\r\n];\r\n\r\nfunction Community({ user }) {\r\n    const [moodWall, setMoodWall] = useState(initialMoodWall);\r\n    const [moodTribes, setMoodTribes] = useState(initialTribes);\r\n    const [challenges, setChallenges] = useState(initialChallenges);\r\n    const [newPostText, setNewPostText] = useState('');\r\n    const [selectedMood, setSelectedMood] = useState('');\r\n    const [activeTribe, setActiveTribe] = useState(null);\r\n    const [tribeChat, setTribeChat] = useState([]);\r\n    const [newMessage, setNewMessage] = useState('');\r\n\r\n    // Simulate loading user data\r\n    useEffect(() => {\r\n        // This would be an API call in a real app\r\n        const userData = {\r\n            name: \"CurrentUser\",\r\n            mood: \"calm\",\r\n            level: 5,\r\n            achievements: [\"7-day streak\", \"Helper badge\"]\r\n        };\r\n    }, []);\r\n\r\n    const handleAddPost = () => {\r\n        if (newPostText.trim() !== \"\") {\r\n            const newPost = {\r\n                id: Date.now(),\r\n                userName: \"You\",\r\n                text: newPostText,\r\n                likes: 0,\r\n                comments: 0,\r\n                shares: 0,\r\n                timestamp: \"Just now\",\r\n                userLiked: false,\r\n                mood: selectedMood\r\n            };\r\n            setMoodWall(prev => [newPost, ...prev]);\r\n            setNewPostText('');\r\n            setSelectedMood('');\r\n        }\r\n    };\r\n\r\n    const handleJoinTribe = (tribeId) => {\r\n        setMoodTribes(prevTribes => \r\n            prevTribes.map(tribe => \r\n                tribe.id === tribeId ? { \r\n                    ...tribe, \r\n                    isMember: !tribe.isMember, \r\n                    members: tribe.isMember ? tribe.members - 1 : tribe.members + 1 \r\n                } : tribe\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleLikePost = (postId) => {\r\n        setMoodWall(prev => \r\n            prev.map(post => \r\n                post.id === postId ? { \r\n                    ...post, \r\n                    likes: post.userLiked ? post.likes - 1 : post.likes + 1,\r\n                    userLiked: !post.userLiked\r\n                } : post\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleJoinChallenge = (challengeId) => {\r\n        setChallenges(prevChallenges => \r\n            prevChallenges.map(challenge => \r\n                challenge.id === challengeId ? { \r\n                    ...challenge, \r\n                    joined: !challenge.joined,\r\n                    participants: challenge.joined ? challenge.participants - 1 : challenge.participants + 1\r\n                } : challenge\r\n            )\r\n        );\r\n    };\r\n\r\n    const handleJoinTribeChat = (tribe) => {\r\n        setActiveTribe(tribe);\r\n        // Simulate loading tribe chat messages\r\n        const mockMessages = [\r\n            {id: 1, user: \"MindfulUser\", text: \"Welcome to our tribe! How is everyone today?\", timestamp: \"10:30 AM\"},\r\n            {id: 2, user: \"CalmSoul\", text: \"I'm doing well, just finished my morning meditation\", timestamp: \"10:32 AM\"},\r\n            {id: 3, user: \"PeaceSeeker\", text: \"Has anyone tried the new breathing exercise?\", timestamp: \"10:45 AM\"}\r\n        ];\r\n        setTribeChat(mockMessages);\r\n    };\r\n\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim() !== \"\" && activeTribe) {\r\n            const message = {\r\n                id: Date.now(),\r\n                user: \"You\",\r\n                text: newMessage,\r\n                timestamp: new Date().toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'})\r\n            };\r\n            setTribeChat(prev => [...prev, message]);\r\n            setNewMessage('');\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSendMessage();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"community-hub\">\r\n            <div className=\"community-header\">\r\n                <h2>Mood Community</h2>\r\n                <p>Connect with others who understand what you're going through</p>\r\n            </div>\r\n\r\n            <div className=\"community-layout\">\r\n                <div className=\"main-content\">\r\n                    <div className=\"mood-wall-section\">\r\n                        <h3>Community Mood Wall</h3>\r\n                        \r\n                        <div className=\"post-creator\">\r\n                            <textarea \r\n                                placeholder=\"Share your feelings with the community...\"\r\n                                value={newPostText}\r\n                                onChange={(e) => setNewPostText(e.target.value)}\r\n                            />\r\n                            <div className=\"post-actions\">\r\n                                <div className=\"mood-selector\">\r\n                                    <span>I'm feeling:</span>\r\n                                    {['happy', 'calm', 'anxious', 'sad', 'excited', 'grateful'].map(mood => (\r\n                                        <button\r\n                                            key={mood}\r\n                                            className={selectedMood === mood ? 'mood-option selected' : 'mood-option'}\r\n                                            onClick={() => setSelectedMood(mood)}\r\n                                        >\r\n                                            {mood}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                                <button \r\n                                    className=\"post-btn\"\r\n                                    onClick={handleAddPost}\r\n                                    disabled={!newPostText.trim()}\r\n                                >\r\n                                    Post\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"post-list\">\r\n                            {moodWall.map(post => (\r\n                                <div key={post.id} className=\"post-card\">\r\n                                    <div className=\"post-header\">\r\n                                        <div className=\"user-info\">\r\n                                            <div className=\"post-avatar\">{post.userName.charAt(0)}</div>\r\n                                            <div>\r\n                                                <div className=\"post-username\">{post.userName}</div>\r\n                                                <div className=\"post-timestamp\">{post.timestamp}</div>\r\n                                            </div>\r\n                                        </div>\r\n                                        {post.mood && <div className={`post-mood ${post.mood}`}>{post.mood}</div>}\r\n                                    </div>\r\n                                    <p className=\"post-content\">{post.text}</p>\r\n                                    <div className=\"post-stats\">\r\n                                        <button \r\n                                            className={post.userLiked ? 'like-btn liked' : 'like-btn'}\r\n                                            onClick={() => handleLikePost(post.id)}\r\n                                        >\r\n                                            <i className={post.userLiked ? \"fas fa-heart\" : \"far fa-heart\"}></i>\r\n                                            {post.likes}\r\n                                        </button>\r\n                                        <button className=\"comment-btn\">\r\n                                            <i className=\"far fa-comment\"></i>\r\n                                            {post.comments}\r\n                                        </button>\r\n                                        <button className=\"share-btn\">\r\n                                            <i className=\"far fa-share-square\"></i>\r\n                                            {post.shares}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"community-sidebar\">\r\n                    <div className=\"tribes-section\">\r\n                        <h3>Mood Tribes</h3>\r\n                        <div className=\"tribe-list\">\r\n                            {moodTribes.map(tribe => (\r\n                                <div key={tribe.id} className=\"tribe-card\">\r\n                                    <div className=\"tribe-header\">\r\n                                        <h4>{tribe.name}</h4>\r\n                                        <div className=\"tribe-meta\">\r\n                                            <span className=\"members-count\">{tribe.members} members</span>\r\n                                            <span className=\"online-count\">{tribe.online} online</span>\r\n                                        </div>\r\n                                    </div>\r\n                                    <p className=\"tribe-description\">{tribe.description}</p>\r\n                                    <div className=\"tribe-tags\">\r\n                                        {tribe.tags.map(tag => (\r\n                                            <span key={tag} className=\"tag\">#{tag}</span>\r\n                                        ))}\r\n                                    </div>\r\n                                    <div className=\"tribe-actions\">\r\n                                        <button \r\n                                            className={tribe.isMember ? 'join-btn joined' : 'join-btn'}\r\n                                            onClick={() => handleJoinTribe(tribe.id)}\r\n                                        >\r\n                                            {tribe.isMember ? 'Joined' : 'Join Tribe'}\r\n                                        </button>\r\n                                        <button \r\n                                            className=\"chat-btn\"\r\n                                            onClick={() => handleJoinTribeChat(tribe)}\r\n                                        >\r\n                                            Chat\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"challenges-section\">\r\n                        <h3>Community Challenges</h3>\r\n                        <div className=\"challenge-list\">\r\n                            {challenges.map(challenge => (\r\n                                <div key={challenge.id} className=\"challenge-card\">\r\n                                    <h4>{challenge.title}</h4>\r\n                                    <p>{challenge.description}</p>\r\n                                    <div className=\"challenge-meta\">\r\n                                        <span className=\"participants\">{challenge.participants} participants</span>\r\n                                        <span className=\"reward\">{challenge.reward}</span>\r\n                                    </div>\r\n                                    <button \r\n                                        className={challenge.joined ? 'join-challenge-btn joined' : 'join-challenge-btn'}\r\n                                        onClick={() => handleJoinChallenge(challenge.id)}\r\n                                    >\r\n                                        {challenge.joined ? 'Joined' : 'Join Challenge'}\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {activeTribe && (\r\n                <div className=\"tribe-chat-modal\">\r\n                    <div className=\"chat-header\">\r\n                        <h3>{activeTribe.name} Chat</h3>\r\n                        <button className=\"close-chat\" onClick={() => setActiveTribe(null)}>\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"chat-messages\">\r\n                        {tribeChat.map(message => (\r\n                            <div key={message.id} className={message.user === \"You\" ? \"message own-message\" : \"message\"}>\r\n                                <div className=\"message-sender\">{message.user}</div>\r\n                                <div className=\"message-text\">{message.text}</div>\r\n                                <div className=\"message-time\">{message.timestamp}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div className=\"chat-input\">\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Type a message...\"\r\n                            value={newMessage}\r\n                            onChange={(e) => setNewMessage(e.target.value)}\r\n                            onKeyPress={handleKeyPress}\r\n                        />\r\n                        <button onClick={handleSendMessage}>\r\n                            <i className=\"fas fa-paper-plane\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Community;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}