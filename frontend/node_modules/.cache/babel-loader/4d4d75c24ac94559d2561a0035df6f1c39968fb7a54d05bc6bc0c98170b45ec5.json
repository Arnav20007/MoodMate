{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessages = [...messages, {\n      sender: \"You\",\n      text: input\n    }];\n    setMessages(newMessages);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const reply = data.reply || \"⚠️ Error: No reply from server\";\n      setMessages([...newMessages, {\n        sender: \"MoodMate\",\n        text: reply\n      }]);\n    } catch (err) {\n      setMessages([...newMessages, {\n        sender: \"MoodMate\",\n        text: \"⚠️ Error connecting to backend\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: 20\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Simple MoodMate Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid gray\",\n        padding: 10,\n        height: 300,\n        overflowY: \"auto\",\n        marginBottom: 10\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: {\n        width: \"80%\"\n      },\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessages","sender","text","res","fetch","method","headers","body","JSON","stringify","message","data","json","reply","err","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","marginBottom","map","msg","i","width","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessages = [...messages, { sender: \"You\", text: input }];\r\n    setMessages(newMessages);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const reply = data.reply || \"⚠️ Error: No reply from server\";\r\n\r\n      setMessages([...newMessages, { sender: \"MoodMate\", text: reply }]);\r\n    } catch (err) {\r\n      setMessages([\r\n        ...newMessages,\r\n        { sender: \"MoodMate\", text: \"⚠️ Error connecting to backend\" },\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: 20 }}>\r\n      <h1>Simple MoodMate Test</h1>\r\n      <div\r\n        style={{\r\n          border: \"1px solid gray\",\r\n          padding: 10,\r\n          height: 300,\r\n          overflowY: \"auto\",\r\n          marginBottom: 10,\r\n        }}\r\n      >\r\n        {messages.map((msg, i) => (\r\n          <p key={i}>\r\n            <b>{msg.sender}:</b> {msg.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        style={{ width: \"80%\" }}\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}