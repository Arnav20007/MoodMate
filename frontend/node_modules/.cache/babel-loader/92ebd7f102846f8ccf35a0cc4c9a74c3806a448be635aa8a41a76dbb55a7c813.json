{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [user, setUser] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // Load saved session\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const userData = localStorage.getItem(\"user\");\n    if (token && userData) {\n      setUser(JSON.parse(userData));\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const handleLogin = async e => {\n    e.preventDefault();\n    const formData = new FormData(e.target);\n    const credentials = {\n      email: formData.get(\"email\"),\n      password: formData.get(\"password\")\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(credentials)\n      });\n      const data = await response.json();\n      if (data.success) {\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        setUser(data.user);\n        setIsLoggedIn(true);\n        setError(\"\");\n      } else {\n        setError(data.error || \"Login failed\");\n      }\n    } catch (error) {\n      console.error(\"Login error:\", error);\n      setError(\"Server error. Check if backend is running.\");\n    }\n  };\n  const sendMessage = async () => {\n    if (!input.trim() || !isLoggedIn) return;\n    const userMsg = {\n      text: input,\n      sender: \"user\"\n    };\n    setMessages(prev => [...prev, userMsg]);\n    setInput(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        setMessages(prev => [...prev, {\n          text: data.response,\n          sender: \"bot\"\n        }]);\n      } else {\n        setMessages(prev => [...prev, {\n          text: data.error,\n          sender: \"bot\"\n        }]);\n      }\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      setMessages(prev => [...prev, {\n        text: \"Connection error.\",\n        sender: \"bot\"\n      }]);\n    }\n  };\n  if (!isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        maxWidth: \"400px\",\n        margin: \"50px auto\",\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"MoodMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"Email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"Password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"50px auto\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MoodMate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        localStorage.clear();\n        setIsLoggedIn(false);\n        setMessages([]);\n      },\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        marginBottom: \"10px\",\n        height: \"300px\",\n        overflowY: \"auto\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 22\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n      placeholder: \"Type a message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"kLJVO3LNlPPG0QraYVTucF6H2pg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","isLoggedIn","setIsLoggedIn","user","setUser","messages","setMessages","input","setInput","error","setError","token","localStorage","getItem","userData","JSON","parse","handleLogin","e","preventDefault","formData","FormData","target","credentials","email","get","password","response","fetch","method","headers","body","stringify","data","json","success","setItem","console","sendMessage","trim","userMsg","text","sender","prev","message","style","maxWidth","margin","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","color","onClick","clear","border","padding","marginBottom","height","overflowY","map","msg","i","value","onChange","onKeyDown","key","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [user, setUser] = useState(null);\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Load saved session\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const userData = localStorage.getItem(\"user\");\r\n    if (token && userData) {\r\n      setUser(JSON.parse(userData));\r\n      setIsLoggedIn(true);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const credentials = {\r\n      email: formData.get(\"email\"),\r\n      password: formData.get(\"password\"),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(credentials),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        localStorage.setItem(\"token\", data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n        setUser(data.user);\r\n        setIsLoggedIn(true);\r\n        setError(\"\");\r\n      } else {\r\n        setError(data.error || \"Login failed\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login error:\", error);\r\n      setError(\"Server error. Check if backend is running.\");\r\n    }\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim() || !isLoggedIn) return;\r\n\r\n    const userMsg = { text: input, sender: \"user\" };\r\n    setMessages((prev) => [...prev, userMsg]);\r\n    setInput(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setMessages((prev) => [...prev, { text: data.response, sender: \"bot\" }]);\r\n      } else {\r\n        setMessages((prev) => [...prev, { text: data.error, sender: \"bot\" }]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Chat error:\", error);\r\n      setMessages((prev) => [...prev, { text: \"Connection error.\", sender: \"bot\" }]);\r\n    }\r\n  };\r\n\r\n  if (!isLoggedIn) {\r\n    return (\r\n      <div style={{ maxWidth: \"400px\", margin: \"50px auto\", textAlign: \"center\" }}>\r\n        <h1>MoodMate</h1>\r\n        <form onSubmit={handleLogin}>\r\n          <input type=\"email\" name=\"email\" placeholder=\"Email\" required />\r\n          <input type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"50px auto\" }}>\r\n      <h1>MoodMate</h1>\r\n      <button onClick={() => { localStorage.clear(); setIsLoggedIn(false); setMessages([]); }}>Logout</button>\r\n      <div style={{ border: \"1px solid #ccc\", padding: \"10px\", marginBottom: \"10px\", height: \"300px\", overflowY: \"auto\" }}>\r\n        {messages.map((msg, i) => (\r\n          <p key={i}><strong>{msg.sender}:</strong> {msg.text}</p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        placeholder=\"Type a message...\"\r\n      />\r\n      <button onClick={sendMessage}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,QAAQ,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC7C,IAAIF,KAAK,IAAIG,QAAQ,EAAE;MACrBV,OAAO,CAACW,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MAC7BZ,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMe,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAACH,CAAC,CAACI,MAAM,CAAC;IACvC,MAAMC,WAAW,GAAG;MAClBC,KAAK,EAAEJ,QAAQ,CAACK,GAAG,CAAC,OAAO,CAAC;MAC5BC,QAAQ,EAAEN,QAAQ,CAACK,GAAG,CAAC,UAAU;IACnC,CAAC;IAED,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAACT,WAAW;MAClC,CAAC,CAAC;MACF,MAAMU,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChBvB,YAAY,CAACwB,OAAO,CAAC,OAAO,EAAEH,IAAI,CAACtB,KAAK,CAAC;QACzCC,YAAY,CAACwB,OAAO,CAAC,MAAM,EAAErB,IAAI,CAACiB,SAAS,CAACC,IAAI,CAAC9B,IAAI,CAAC,CAAC;QACvDC,OAAO,CAAC6B,IAAI,CAAC9B,IAAI,CAAC;QAClBD,aAAa,CAAC,IAAI,CAAC;QACnBQ,QAAQ,CAAC,EAAE,CAAC;MACd,CAAC,MAAM;QACLA,QAAQ,CAACuB,IAAI,CAACxB,KAAK,IAAI,cAAc,CAAC;MACxC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACd4B,OAAO,CAAC5B,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpCC,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC;EAED,MAAM4B,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAAC/B,KAAK,CAACgC,IAAI,CAAC,CAAC,IAAI,CAACtC,UAAU,EAAE;IAElC,MAAMuC,OAAO,GAAG;MAAEC,IAAI,EAAElC,KAAK;MAAEmC,MAAM,EAAE;IAAO,CAAC;IAC/CpC,WAAW,CAAEqC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEH,OAAO,CAAC,CAAC;IACzChC,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACF,MAAMmB,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;UAAEY,OAAO,EAAErC;QAAM,CAAC;MACzC,CAAC,CAAC;MACF,MAAM0B,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,OAAO,EAAE;QAChB7B,WAAW,CAAEqC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEF,IAAI,EAAER,IAAI,CAACN,QAAQ;UAAEe,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MAC1E,CAAC,MAAM;QACLpC,WAAW,CAAEqC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;UAAEF,IAAI,EAAER,IAAI,CAACxB,KAAK;UAAEiC,MAAM,EAAE;QAAM,CAAC,CAAC,CAAC;MACvE;IACF,CAAC,CAAC,OAAOjC,KAAK,EAAE;MACd4B,OAAO,CAAC5B,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnCH,WAAW,CAAEqC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAE;QAAEF,IAAI,EAAE,mBAAmB;QAAEC,MAAM,EAAE;MAAM,CAAC,CAAC,CAAC;IAChF;EACF,CAAC;EAED,IAAI,CAACzC,UAAU,EAAE;IACf,oBACEH,OAAA;MAAK+C,KAAK,EAAE;QAAEC,QAAQ,EAAE,OAAO;QAAEC,MAAM,EAAE,WAAW;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAC,QAAA,gBAC1EnD,OAAA;QAAAmD,QAAA,EAAI;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACjBvD,OAAA;QAAMwD,QAAQ,EAAErC,WAAY;QAAAgC,QAAA,gBAC1BnD,OAAA;UAAOyD,IAAI,EAAC,OAAO;UAACC,IAAI,EAAC,OAAO;UAACC,WAAW,EAAC,OAAO;UAACC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChEvD,OAAA;UAAOyD,IAAI,EAAC,UAAU;UAACC,IAAI,EAAC,UAAU;UAACC,WAAW,EAAC,UAAU;UAACC,QAAQ;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACzEvD,OAAA;UAAQyD,IAAI,EAAC,QAAQ;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CAAC,EACN5C,KAAK,iBAAIX,OAAA;QAAG+C,KAAK,EAAE;UAAEc,KAAK,EAAE;QAAM,CAAE;QAAAV,QAAA,EAAExC;MAAK;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAEV;EAEA,oBACEvD,OAAA;IAAK+C,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAY,CAAE;IAAAE,QAAA,gBACrDnD,OAAA;MAAAmD,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBvD,OAAA;MAAQ8D,OAAO,EAAEA,CAAA,KAAM;QAAEhD,YAAY,CAACiD,KAAK,CAAC,CAAC;QAAE3D,aAAa,CAAC,KAAK,CAAC;QAAEI,WAAW,CAAC,EAAE,CAAC;MAAE,CAAE;MAAA2C,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxGvD,OAAA;MAAK+C,KAAK,EAAE;QAAEiB,MAAM,EAAE,gBAAgB;QAAEC,OAAO,EAAE,MAAM;QAAEC,YAAY,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAjB,QAAA,EACjH5C,QAAQ,CAAC8D,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBACnBvE,OAAA;QAAAmD,QAAA,gBAAWnD,OAAA;UAAAmD,QAAA,GAASmB,GAAG,CAAC1B,MAAM,EAAC,GAAC;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACe,GAAG,CAAC3B,IAAI;MAAA,GAA3C4B,CAAC;QAAAnB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA8C,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvD,OAAA;MACEyD,IAAI,EAAC,MAAM;MACXe,KAAK,EAAE/D,KAAM;MACbgE,QAAQ,EAAGrD,CAAC,IAAKV,QAAQ,CAACU,CAAC,CAACI,MAAM,CAACgD,KAAK,CAAE;MAC1CE,SAAS,EAAGtD,CAAC,IAAKA,CAAC,CAACuD,GAAG,KAAK,OAAO,IAAInC,WAAW,CAAC,CAAE;MACrDmB,WAAW,EAAC;IAAmB;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACFvD,OAAA;MAAQ8D,OAAO,EAAEtB,WAAY;MAAAW,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACrD,EAAA,CA3GQD,GAAG;AAAA2E,EAAA,GAAH3E,GAAG;AA6GZ,eAAeA,GAAG;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}