{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css'; // Make sure to create and use this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://127.0.0.1:5000';\nfunction Chat({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (user && user.username) {\n      setMessages([{\n        id: Date.now(),\n        text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      }]);\n    }\n  }, [user]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'user',\n      timestamp: new Date().toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      // ✅ CRITICAL FIX: Added `credentials: 'include'` to send the session cookie\n      const response = await fetch(`${API_BASE_URL}/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // This authenticates the user with the backend\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json().catch(() => ({}));\n        throw new Error(errData.message || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const botMessage = {\n        id: Date.now() + 1,\n        text: data.reply,\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      const errorMsg = {\n        id: Date.now() + 1,\n        text: \"Sorry, I couldn't connect. Please ensure the backend is running and try again.\",\n        sender: 'bot',\n        timestamp: new Date().toLocaleTimeString([], {\n          hour: '2-digit',\n          minute: '2-digit'\n        })\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: [msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 50\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [msg.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: \"MoodMate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 54\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-timestamp\",\n            children: msg.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, msg.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message bot\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"avatar\",\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"message-sender\",\n            children: \"MoodMate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bubble typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isTyping || !input.trim(),\n        className: \"send-btn\",\n        children: \"\\u27A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"nOTu7TZx1TtBTwsvkZRLf++FuY4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","Chat","user","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","chatEndRef","username","id","Date","now","text","sender","timestamp","toLocaleTimeString","hour","minute","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","response","fetch","method","headers","credentials","body","JSON","stringify","message","ok","errData","json","catch","Error","status","data","botMessage","reply","error","console","errorMsg","className","children","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyPress","key","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css'; // Make sure to create and use this CSS file\r\n\r\nconst API_BASE_URL = 'http://127.0.0.1:5000';\r\n\r\nfunction Chat({ user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (user && user.username) {\r\n            setMessages([{\r\n                id: Date.now(),\r\n                text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\r\n                sender: 'bot',\r\n                timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n            }]);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = { \r\n            id: Date.now(), \r\n            text: input, \r\n            sender: 'user',\r\n            timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n        };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInput(\"\");\r\n        setIsTyping(true);\r\n\r\n        try {\r\n            // ✅ CRITICAL FIX: Added `credentials: 'include'` to send the session cookie\r\n            const response = await fetch(`${API_BASE_URL}/api/chat`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                credentials: 'include', // This authenticates the user with the backend\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errData = await response.json().catch(() => ({}));\r\n                throw new Error(errData.message || `HTTP error! status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            const botMessage = { \r\n                id: Date.now() + 1, \r\n                text: data.reply, \r\n                sender: 'bot',\r\n                timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n            };\r\n            setMessages(prev => [...prev, botMessage]);\r\n\r\n        } catch (error) {\r\n            console.error(\"Chat error:\", error);\r\n            const errorMsg = { \r\n                id: Date.now() + 1, \r\n                text: \"Sorry, I couldn't connect. Please ensure the backend is running and try again.\", \r\n                sender: 'bot',\r\n                timestamp: new Date().toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })\r\n            };\r\n            setMessages(prev => [...prev, errorMsg]);\r\n        } finally {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-box\">\r\n                {messages.map((msg) => (\r\n                    <div key={msg.id} className={`chat-message ${msg.sender}`}>\r\n                        {msg.sender === 'bot' && <div className=\"avatar\">M</div>}\r\n                        <div className=\"message-content\">\r\n                            {msg.sender === 'bot' && <span className=\"message-sender\">MoodMate</span>}\r\n                            <div className=\"bubble\">{msg.text}</div>\r\n                            <span className=\"message-timestamp\">{msg.timestamp}</span>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {isTyping && (\r\n                    <div className=\"chat-message bot\">\r\n                        <div className=\"avatar\">M</div>\r\n                        <div className=\"message-content\">\r\n                            <span className=\"message-sender\">MoodMate</span>\r\n                            <div className=\"bubble typing-indicator\">\r\n                                <span></span><span></span><span></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div ref={chatEndRef} />\r\n            </div>\r\n            <div className=\"input-area\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                    onKeyPress={(e) => e.key === 'Enter' && sendMessage()}\r\n                    placeholder=\"Type your message...\"\r\n                />\r\n                <button \r\n                    onClick={sendMessage} \r\n                    disabled={isTyping || !input.trim()}\r\n                    className=\"send-btn\"\r\n                >\r\n                    ➤\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}