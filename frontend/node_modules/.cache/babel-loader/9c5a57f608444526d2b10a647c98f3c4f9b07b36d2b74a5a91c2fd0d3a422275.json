{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$(),\n  _s1 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$();\n/**\r\n * MoodMate - Complete React Frontend\r\n * ==================================\r\n * * A comprehensive mental health companion app that integrates with the MoodMate Flask backend.\r\n * Features: AI chat, mood tracking, community wall, daily challenges, gamification, \r\n * wellness exercises, analytics, and more.\r\n */\nimport React, { useState, useEffect, useContext, useMemo, useCallback, createContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './app.css';\n\n// ================================================================\n// GLOBAL STATE MANAGEMENT\n// ================================================================\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\nconst useAppContext = () => {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppContext must be used within AppProvider');\n  }\n  return context;\n};\n\n// ================================================================\n// CUSTOM HOOKS\n// ================================================================\n_s(useAppContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst useAPI = () => {\n  _s2();\n  const makeRequest = useCallback(async (endpoint, options = {}) => {\n    try {\n      const response = await fetch(`/api${endpoint}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Important for session-based auth\n        ...options\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        throw new Error(data.error || `HTTP ${response.status}`);\n      }\n      return data;\n    } catch (error) {\n      console.error('API Error:', error);\n      throw error;\n    }\n  }, []);\n  return {\n    makeRequest\n  };\n};\n_s2(useAPI, \"fGzyk2XN7WEpatVMHM3/EtBR0Dw=\");\nconst useLocalStorage = (key, defaultValue) => {\n  _s3();\n  const [value, setValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      return defaultValue;\n    }\n  });\n  const setStoredValue = useCallback(newValue => {\n    try {\n      setValue(newValue);\n      window.localStorage.setItem(key, JSON.stringify(newValue));\n    } catch (error) {\n      console.error('LocalStorage error:', error);\n    }\n  }, [key]);\n  return [value, setStoredValue];\n};\n_s3(useLocalStorage, \"Mm4J9ISLsVrrRDpBz5KubkzEfOU=\");\nconst useTypingEffect = (text, speed = 30) => {\n  _s4();\n  const [displayedText, setDisplayedText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  useEffect(() => {\n    if (!text) {\n      setDisplayedText('');\n      return;\n    }\n    setIsTyping(true);\n    setDisplayedText('');\n    let index = 0;\n    const timer = setInterval(() => {\n      if (index < text.length) {\n        setDisplayedText(text.slice(0, index + 1));\n        index++;\n      } else {\n        setIsTyping(false);\n        clearInterval(timer);\n      }\n    }, speed);\n    return () => {\n      clearInterval(timer);\n      setIsTyping(false);\n    };\n  }, [text, speed]);\n  return {\n    displayedText,\n    isTyping\n  };\n};\n_s4(useTypingEffect, \"UQ25kdMGnuFC5P/kLuPD8AvN944=\");\nconst useAutoScroll = dependency => {\n  _s5();\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    if (scrollRef.current) {\n      const element = scrollRef.current;\n      element.scrollTop = element.scrollHeight;\n    }\n  }, [dependency]);\n  return scrollRef;\n};\n\n// ================================================================\n// UTILITY FUNCTIONS\n// ================================================================\n_s5(useAutoScroll, \"P14GFulhWAl/Oec4Pk4QeBwKyr0=\");\nconst getMoodEmoji = mood => {\n  const emojiMap = {\n    happy: '😊',\n    sad: '😢',\n    angry: '😠',\n    anxious: '😰',\n    excited: '🤩',\n    calm: '😌',\n    confused: '😕',\n    motivated: '💪',\n    lonely: '😔',\n    grateful: '🙏',\n    neutral: '😐'\n  };\n  return emojiMap[mood] || '😐';\n};\nconst formatTimeAgo = timestamp => {\n  const now = new Date();\n  const past = new Date(timestamp);\n  const diff = Math.floor((now - past) / 1000);\n  if (diff < 60) return 'Just now';\n  if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\n  if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\n  return `${Math.floor(diff / 86400)}d ago`;\n};\nconst getStreakEmoji = streak => {\n  if (streak >= 365) return '👑';\n  if (streak >= 100) return '🔥';\n  if (streak >= 30) return '⭐';\n  if (streak >= 7) return '🌟';\n  return '✨';\n};\nconst getBadgeDetails = badgeKey => {\n  const badges = {\n    first_chat: {\n      name: 'First Hello',\n      emoji: '👋',\n      description: 'Started first conversation'\n    },\n    streak_7: {\n      name: 'Week Warrior',\n      emoji: '🔥',\n      description: '7 day streak'\n    },\n    streak_30: {\n      name: 'Month Master',\n      emoji: '🏆',\n      description: '30 day streak'\n    },\n    chatterbox: {\n      name: 'Chatterbox',\n      emoji: '💬',\n      description: '100 messages sent'\n    },\n    mood_tracker: {\n      name: 'Mood Master',\n      emoji: '😌',\n      description: '50 mood logs'\n    }\n  };\n  return badges[badgeKey] || {\n    name: badgeKey,\n    emoji: '🏅',\n    description: 'Achievement unlocked!'\n  };\n};\n\n// ================================================================\n// NOTIFICATION COMPONENT\n// ================================================================\n\nconst Notification = ({\n  notification,\n  onClose\n}) => {\n  _s6();\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      onClose(notification.id);\n    }, 5000);\n    return () => clearTimeout(timer);\n  }, [notification.id, onClose]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `notification ${notification.type} animate-slide-in`,\n    onClick: () => onClose(notification.id),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"notification-emoji\",\n        children: notification.emoji\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-title\",\n          children: notification.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-message\",\n          children: notification.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"notification-close\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// AUTHENTICATION COMPONENTS\n// ================================================================\n_s6(Notification, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Notification;\nconst LoginForm = ({\n  onLogin,\n  onSwitchToRegister\n}) => {\n  _s7();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    makeRequest\n  } = useAPI();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const response = await makeRequest('/login', {\n        method: 'POST',\n        body: JSON.stringify(formData)\n      });\n      onLogin(response.user);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome Back to MoodMate! \\uD83D\\uDC9C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Your AI companion is waiting for you\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          }),\n          placeholder: \"Enter your username\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          }),\n          placeholder: \"Enter your password\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? 'Signing in...' : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"New to MoodMate?\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSwitchToRegister,\n            className: \"link-button\",\n            children: \"Create Account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 229,\n    columnNumber: 9\n  }, this);\n};\n_s7(LoginForm, \"rgWilWdhoiWqjUXi5Fyh3wSgYt4=\", false, function () {\n  return [useAPI];\n});\n_c2 = LoginForm;\nconst RegisterForm = ({\n  onRegister,\n  onSwitchToLogin\n}) => {\n  _s8();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const {\n    makeRequest\n  } = useAPI();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    if (formData.password !== formData.confirmPassword) {\n      setError('Passwords do not match');\n      setLoading(false);\n      return;\n    }\n    try {\n      const response = await makeRequest('/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password\n        })\n      });\n      onRegister(response.user);\n    } catch (error) {\n      setError(error.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Join MoodMate! \\uD83C\\uDF1F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Start your mental wellness journey today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: formData.username,\n          onChange: e => setFormData({\n            ...formData,\n            username: e.target.value\n          }),\n          placeholder: \"Choose a username\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: formData.email,\n          onChange: e => setFormData({\n            ...formData,\n            email: e.target.value\n          }),\n          placeholder: \"your.email@example.com\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.password,\n          onChange: e => setFormData({\n            ...formData,\n            password: e.target.value\n          }),\n          placeholder: \"Create a secure password\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: formData.confirmPassword,\n          onChange: e => setFormData({\n            ...formData,\n            confirmPassword: e.target.value\n          }),\n          placeholder: \"Confirm your password\",\n          required: true,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: loading,\n        children: loading ? 'Creating Account...' : 'Create Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSwitchToLogin,\n            className: \"link-button\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// CHAT COMPONENTS\n// ================================================================\n_s8(RegisterForm, \"nP1J2DwVb5jDUSsi1pnC7ypA/58=\", false, function () {\n  return [useAPI];\n});\n_c3 = RegisterForm;\nconst ChatMessage = ({\n  message,\n  isUser,\n  onSuggestionClick\n}) => {\n  _s9();\n  const {\n    displayedText,\n    isTyping\n  } = useTypingEffect(!isUser && message.ai_response ? message.ai_response : '', 30);\n  const content = isUser ? message.user_message || message.message : displayedText || message.response || message.ai_response;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${isUser ? 'user' : 'assistant'} animate-slide-up`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-avatar\",\n      children: isUser ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-avatar\",\n        children: \"\\uD83D\\uDC64\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-avatar\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-bubble\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: [content, !isUser && isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-cursor\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 21\n        }, this), !isUser && message.mood && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-emoji\",\n            children: getMoodEmoji(message.mood)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-text\",\n            children: [\"Detected: \", message.mood]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 25\n        }, this), !isUser && message.points_earned && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"points-earned\",\n          children: [\"+\", message.points_earned, \" points! \\u2728\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: formatTimeAgo(message.timestamp)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 17\n      }, this), !isUser && message.suggestion && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestion-card\",\n        onClick: () => onSuggestionClick(message.suggestion),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-header\",\n          children: \"\\uD83D\\uDCA1 Try this:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"suggestion-text\",\n          children: message.suggestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 21\n      }, this), !isUser && message.music_recommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-recommendation\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-header\",\n          children: \"\\uD83C\\uDFB5 Music for you:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-text\",\n          children: message.music_recommendation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }, this), !isUser && message.new_badges && message.new_badges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badge-notification\",\n        children: message.new_badges.map((badge, index) => {\n          const badgeInfo = getBadgeDetails(badge);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"new-badge\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge-emoji\",\n              children: badgeInfo.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge-name\",\n              children: [\"New Badge: \", badgeInfo.name, \"!\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 9\n  }, this);\n};\n_s9(ChatMessage, \"CSuQWMqQWxvtobUA6BtMonb9H/I=\", false, function () {\n  return [useTypingEffect];\n});\n_c4 = ChatMessage;\nconst ChatInput = ({\n  onSendMessage,\n  loading\n}) => {\n  _s0();\n  const [message, setMessage] = useState('');\n  const textareaRef = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (message.trim() && !loading) {\n      onSendMessage(message.trim());\n      setMessage('');\n      if (textareaRef.current) {\n        textareaRef.current.style.height = 'auto';\n      }\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  const adjustHeight = e => {\n    const textarea = e.target;\n    textarea.style.height = 'auto';\n    textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: message,\n          onChange: e => {\n            setMessage(e.target.value);\n            adjustHeight(e);\n          },\n          onKeyPress: handleKeyPress,\n          placeholder: \"Share what's on your mind...\",\n          className: \"chat-textarea\",\n          disabled: loading,\n          rows: 1,\n          maxLength: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: !message.trim() || loading,\n          children: loading ? '...' : '➤'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-hints\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Press Enter to send, Shift+Enter for new line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"char-counter\",\n          children: [message.length, \"/2000\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 502,\n    columnNumber: 9\n  }, this);\n};\n_s0(ChatInput, \"nSZtx3BjYZl96sTgPGtyk23sYqk=\");\n_c5 = ChatInput;\nconst ChatInterface = ({\n  user,\n  onUpdateUser,\n  onShowNotification\n}) => {\n  _s1();\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [initialLoading, setInitialLoading] = useState(true);\n  const {\n    makeRequest\n  } = useAPI();\n  const messagesEndRef = useAutoScroll(messages);\n\n  // Load chat history on component mount\n  useEffect(() => {\n    loadChatHistory();\n  }, []);\n  const loadChatHistory = async () => {\n    try {\n      const response = await makeRequest('/chat/history?limit=50');\n      setMessages(response.history || []);\n    } catch (error) {\n      console.error('Failed to load chat history:', error);\n    } finally {\n      setInitialLoading(false);\n    }\n  };\n  const handleSendMessage = async messageText => {\n    if (!messageText.trim()) return;\n\n    // Add user message immediately\n    const userMessage = {\n      id: Date.now(),\n      user_message: messageText,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setLoading(true);\n    try {\n      const response = await makeRequest('/chat', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: messageText\n        })\n      });\n\n      // Add AI response\n      const aiMessage = {\n        id: Date.now() + 1,\n        response: response.response,\n        mood: response.mood,\n        sentiment: response.sentiment,\n        points_earned: response.points_earned,\n        suggestion: response.suggestion,\n        music_recommendation: response.music_recommendation,\n        new_badges: response.new_badges,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n\n      // Update user stats\n      if (response.points_earned > 0) {\n        onUpdateUser({\n          ...user,\n          mood_points: (user.mood_points || 0) + response.points_earned\n        });\n      }\n\n      // Show notifications for new badges\n      if (response.new_badges && response.new_badges.length > 0) {\n        response.new_badges.forEach(badge => {\n          const badgeInfo = getBadgeDetails(badge);\n          onShowNotification({\n            type: 'success',\n            title: 'New Badge Earned!',\n            message: badgeInfo.name,\n            emoji: badgeInfo.emoji\n          });\n        });\n      }\n    } catch (error) {\n      console.error('Chat error:', error);\n      const errorMessage = {\n        id: Date.now() + 2,\n        response: \"I'm having trouble responding right now. Please try again in a moment.\",\n        timestamp: new Date().toISOString(),\n        is_error: true\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSuggestionClick = suggestion => {\n    onShowNotification({\n      type: 'info',\n      title: 'Great Suggestion!',\n      message: 'Try incorporating this into your day',\n      emoji: '💡'\n    });\n  };\n  if (initialLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCAC Chat with MoodMate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your AI mental health companion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-stats-mini\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\uD83E\\uDE99\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: user.mood_points || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 657,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: getStreakEmoji(user.current_streak || 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 662,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: user.current_streak || 0\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-emoji\",\n            children: \"\\u2B50\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"stat-value\",\n            children: [\"Lv.\", user.level || 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      ref: messagesEndRef,\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message animate-fade-in\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-avatar\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Namaste \", user.username, \"! \\uD83D\\uDE4F\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Main MoodMate hun, tumhara AI companion! I'm here to listen, support, and chat with you in natural Hinglish.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"How are you feeling today? Kya chal raha hai aaj? Share anything on your mind! \\uD83D\\uDC9C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }, this) : messages.map((message, index) => /*#__PURE__*/_jsxDEV(ChatMessage, {\n        message: message,\n        isUser: !!(message.user_message || message.message),\n        onSuggestionClick: handleSuggestionClick\n      }, message.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 25\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-typing animate-fade-in\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-dots\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"MoodMate is typing...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 701,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 694,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 672,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 707,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 649,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// MOOD TRACKING COMPONENTS\n// ================================================================\n_s1(ChatInterface, \"QAhPoVksyHspnbGvkWNEYnKnQgE=\", false, function () {\n  return [useAPI, useAutoScroll];\n});\n_c6 = ChatInterface;\nconst MoodLogger = ({\n  user,\n  onShowNotification\n}) => {\n  _s10();\n  const [selectedMood, setSelectedMood] = useState('');\n  const [intensity, setIntensity] = useState(5);\n  const [triggers, setTriggers] = useState('');\n  const [activities, setActivities] = useState('');\n  const [loading, setLoading] = useState(false);\n  const {\n    makeRequest\n  } = useAPI();\n  const moods = [{\n    key: 'happy',\n    label: 'Happy',\n    emoji: '😊',\n    color: '#FFD93D'\n  }, {\n    key: 'sad',\n    label: 'Sad',\n    emoji: '😢',\n    color: '#6C9BD1'\n  }, {\n    key: 'anxious',\n    label: 'Anxious',\n    emoji: '😰',\n    color: '#FF6B9D'\n  }, {\n    key: 'calm',\n    label: 'Calm',\n    emoji: '😌',\n    color: '#4ECDC4'\n  }, {\n    key: 'excited',\n    label: 'Excited',\n    emoji: '🤩',\n    color: '#FF8C42'\n  }, {\n    key: 'angry',\n    label: 'Angry',\n    emoji: '😠',\n    color: '#FF4757'\n  }, {\n    key: 'confused',\n    label: 'Confused',\n    emoji: '😕',\n    color: '#A4B0BE'\n  }, {\n    key: 'grateful',\n    label: 'Grateful',\n    emoji: '🙏',\n    color: '#2ED573'\n  }];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedMood) return;\n    setLoading(true);\n    try {\n      const response = await makeRequest('/mood/log', {\n        method: 'POST',\n        body: JSON.stringify({\n          mood: selectedMood,\n          intensity: intensity,\n          triggers: triggers,\n          activities: activities\n        })\n      });\n      if (response.success) {\n        onShowNotification({\n          type: 'success',\n          title: 'Mood Logged!',\n          message: `+${response.points_earned} points earned`,\n          emoji: '📝'\n        });\n\n        // Reset form\n        setSelectedMood('');\n        setIntensity(5);\n        setTriggers('');\n        setActivities('');\n      }\n    } catch (error) {\n      console.error('Failed to log mood:', error);\n      onShowNotification({\n        type: 'error',\n        title: 'Error',\n        message: 'Failed to log mood. Please try again.',\n        emoji: '❌'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-logger animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-logger-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCDD Log Your Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"How are you feeling right now?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-selection\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-grid\",\n          children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `mood-option ${selectedMood === mood.key ? 'selected' : ''}`,\n            onClick: () => setSelectedMood(mood.key),\n            style: {\n              borderColor: mood.color\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mood-emoji\",\n              children: mood.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mood-label\",\n              children: mood.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 798,\n              columnNumber: 33\n            }, this)]\n          }, mood.key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 787,\n        columnNumber: 17\n      }, this), selectedMood && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-details animate-slide-down\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Intensity (1-10)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"intensity-slider\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              min: \"1\",\n              max: \"10\",\n              value: intensity,\n              onChange: e => setIntensity(parseInt(e.target.value)),\n              className: \"slider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"intensity-value\",\n              children: [intensity, \"/10\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"What triggered this mood? (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: triggers,\n            onChange: e => setTriggers(e.target.value),\n            placeholder: \"e.g., work stress, good news, social interaction...\",\n            rows: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"What activities helped? (Optional)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 832,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: activities,\n            onChange: e => setActivities(e.target.value),\n            placeholder: \"e.g., listening to music, talking to friends, meditation...\",\n            rows: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: loading,\n          children: loading ? 'Logging...' : 'Log Mood'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 786,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 780,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// COMMUNITY WALL COMPONENT\n// ================================================================\n_s10(MoodLogger, \"0cmqUIMeQQ70l6B+b0WFi6ARxAw=\", false, function () {\n  return [useAPI];\n});\n_c7 = MoodLogger;\nconst CommunityWall = ({\n  onShowNotification\n}) => {\n  _s11();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [newPost, setNewPost] = useState({\n    mood: '',\n    message: ''\n  });\n  const [posting, setPosting] = useState(false);\n  const {\n    makeRequest\n  } = useAPI();\n  const moods = ['happy', 'sad', 'anxious', 'excited', 'calm', 'grateful', 'motivated'];\n  useEffect(() => {\n    loadCommunityPosts();\n  }, []);\n  const loadCommunityPosts = async () => {\n    try {\n      const response = await makeRequest('/community');\n      setPosts(response.posts || []);\n    } catch (error) {\n      console.error('Failed to load community posts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmitPost = async e => {\n    e.preventDefault();\n    if (!newPost.mood || !newPost.message.trim()) return;\n    setPosting(true);\n    try {\n      const response = await makeRequest('/community', {\n        method: 'POST',\n        body: JSON.stringify(newPost)\n      });\n      if (response.success) {\n        setPosts(prev => [response.post, ...prev]);\n        setNewPost({\n          mood: '',\n          message: ''\n        });\n        onShowNotification({\n          type: 'success',\n          title: 'Posted!',\n          message: 'Your anonymous post has been shared',\n          emoji: '📝'\n        });\n      }\n    } catch (error) {\n      console.error('Failed to create post:', error);\n    } finally {\n      setPosting(false);\n    }\n  };\n  const handleReaction = async (postId, emoji) => {\n    try {\n      const response = await makeRequest(`/community/${postId}/react`, {\n        method: 'POST',\n        body: JSON.stringify({\n          emoji\n        })\n      });\n      if (response.success) {\n        setPosts(prev => prev.map(post => post.id === postId ? {\n          ...post,\n          reactions: response.reactions\n        } : post));\n      }\n    } catch (error) {\n      console.error('Failed to add reaction:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"community-wall\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF0D Community Wall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 930,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Share your feelings anonymously with the MoodMate community\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 929,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-composer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Share Anonymously\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmitPost,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"How are you feeling?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-selector\",\n            children: moods.map(mood => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `mood-chip ${newPost.mood === mood ? 'selected' : ''}`,\n              onClick: () => setNewPost({\n                ...newPost,\n                mood\n              }),\n              children: [getMoodEmoji(mood), \" \", mood]\n            }, mood, true, {\n              fileName: _jsxFileName,\n              lineNumber: 941,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 939,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 937,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: newPost.message,\n            onChange: e => setNewPost({\n              ...newPost,\n              message: e.target.value\n            }),\n            placeholder: \"Share what's on your mind... Your post will be anonymous.\",\n            maxLength: \"500\",\n            rows: \"3\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"char-counter\",\n            children: [newPost.message.length, \"/500\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 953,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: !newPost.mood || !newPost.message.trim() || posting,\n          children: posting ? 'Posting...' : 'Share Anonymously'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 934,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"community-posts\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 978,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading community posts...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 21\n      }, this) : posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"community-post animate-fade-in\",\n        style: {\n          borderLeft: `4px solid ${post.color_theme}`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-mood\",\n            children: [getMoodEmoji(post.mood), \" \", post.mood]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 986,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"post-time\",\n            children: post.time_ago || formatTimeAgo(post.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-content\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 992,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-reactions\",\n          children: ['❤️', '🤗', '💪', '🙏', '✨'].map(emoji => {\n            var _post$reactions;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"reaction-btn\",\n              onClick: () => handleReaction(post.id, emoji),\n              children: [emoji, \" \", ((_post$reactions = post.reactions) === null || _post$reactions === void 0 ? void 0 : _post$reactions[emoji]) || 0]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 37\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 996,\n          columnNumber: 29\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 928,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// DAILY CHALLENGE COMPONENT\n// ================================================================\n_s11(CommunityWall, \"RtdO0PTa+nrmqgS3dah89J/lCuI=\", false, function () {\n  return [useAPI];\n});\n_c8 = CommunityWall;\nconst DailyChallenge = ({\n  user,\n  onShowNotification\n}) => {\n  _s12();\n  const [challenge, setChallenge] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [completing, setCompleting] = useState(false);\n  const {\n    makeRequest\n  } = useAPI();\n  useEffect(() => {\n    loadDailyChallenge();\n  }, []);\n  const loadDailyChallenge = async () => {\n    try {\n      const response = await makeRequest('/challenges/daily');\n      setChallenge(response.challenge);\n    } catch (error) {\n      console.error('Failed to load daily challenge:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleCompleteChallenge = async () => {\n    if (!challenge || challenge.completed) return;\n    setCompleting(true);\n    try {\n      const response = await makeRequest(`/challenges/${challenge.id}/complete`, {\n        method: 'POST'\n      });\n      if (response.success) {\n        setChallenge(prev => ({\n          ...prev,\n          completed: true\n        }));\n        onShowNotification({\n          type: 'success',\n          title: 'Challenge Completed!',\n          message: `+${response.points_earned} points earned`,\n          emoji: '🎉'\n        });\n        if (response.new_badges && response.new_badges.length > 0) {\n          response.new_badges.forEach(badge => {\n            const badgeInfo = getBadgeDetails(badge);\n            onShowNotification({\n              type: 'success',\n              title: 'New Badge!',\n              message: badgeInfo.name,\n              emoji: badgeInfo.emoji\n            });\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Failed to complete challenge:', error);\n    } finally {\n      setCompleting(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1081,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading daily challenge...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1082,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1080,\n      columnNumber: 13\n    }, this);\n  }\n  if (!challenge) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daily-challenge\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFAF Daily Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1090,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No challenge available today. Check back tomorrow!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"daily-challenge animate-fade-in\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"challenge-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFAF Today's Challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-points\",\n        children: [\"+\", challenge.points, \" points\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `challenge-card ${challenge.completed ? 'completed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-type\",\n        children: challenge.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-text\",\n        children: challenge.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1105,\n        columnNumber: 17\n      }, this), challenge.completed ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"challenge-completed\",\n        children: \"\\u2705 Completed! Great job!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1108,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary challenge-btn\",\n        onClick: handleCompleteChallenge,\n        disabled: completing,\n        children: completing ? 'Marking Complete...' : 'Mark as Complete'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1097,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// WELLNESS FEATURES COMPONENT\n// ================================================================\n_s12(DailyChallenge, \"CuXV/u3KR+WH3Bu9wUD0UGmnSOw=\", false, function () {\n  return [useAPI];\n});\n_c9 = DailyChallenge;\nconst WellnessFeatures = ({\n  onShowNotification\n}) => {\n  _s13();\n  const [activeFeature, setActiveFeature] = useState(null);\n  const [content, setContent] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    makeRequest\n  } = useAPI();\n  const features = [{\n    key: 'breathing',\n    title: '🌬️ Breathing Exercise',\n    description: 'Guided breathing exercises'\n  }, {\n    key: 'mindfulness',\n    title: '🧘 Mindfulness',\n    description: 'Mindfulness and meditation'\n  }, {\n    key: 'quotes',\n    title: '💭 Daily Quotes',\n    description: 'Inspirational quotes'\n  }, {\n    key: 'affirmations',\n    title: '✨ Affirmations',\n    description: 'Positive affirmations'\n  }, {\n    key: 'music',\n    title: '🎵 Music Therapy',\n    description: 'Mood-based music recommendations'\n  }, {\n    key: 'emergency',\n    title: '🆘 Emergency Resources',\n    description: 'Crisis support contacts'\n  }];\n  const handleFeatureClick = async feature => {\n    setActiveFeature(feature);\n    setLoading(true);\n    setContent(null);\n    try {\n      let response;\n      switch (feature.key) {\n        case 'breathing':\n          response = await makeRequest('/breathing-exercise');\n          break;\n        case 'mindfulness':\n          response = await makeRequest('/mindfulness/exercise');\n          break;\n        case 'quotes':\n          response = await makeRequest('/quotes/random');\n          break;\n        case 'affirmations':\n          response = await makeRequest('/affirmations');\n          break;\n        case 'music':\n          response = await makeRequest('/music/recommend', {\n            method: 'POST',\n            body: JSON.stringify({\n              mood: 'happy'\n            })\n          });\n          break;\n        case 'emergency':\n          response = await makeRequest('/emergency/resources');\n          break;\n        default:\n          response = {\n            message: 'Feature coming soon!'\n          };\n      }\n      setContent(response);\n    } catch (error) {\n      console.error('Failed to load feature content:', error);\n      setContent({\n        error: 'Failed to load content. Please try again.'\n      });\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderContent = () => {\n    var _content$exercise, _content$exercise2, _content$exercise3, _content$exercise4, _content$exercise5, _content$exercise5$in, _content$exercise6, _content$affirmations, _content$recommendati, _content$resources;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1186,\n      columnNumber: 29\n    }, this);\n    if (!content) return null;\n    if (content.error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: content.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1188,\n      columnNumber: 35\n    }, this);\n    switch (activeFeature.key) {\n      case 'breathing':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"breathing-exercise\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: (_content$exercise = content.exercise) === null || _content$exercise === void 0 ? void 0 : _content$exercise.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: (_content$exercise2 = content.exercise) === null || _content$exercise2 === void 0 ? void 0 : _content$exercise2.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1195,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-duration\",\n            children: [\"Duration: \", (_content$exercise3 = content.exercise) === null || _content$exercise3 === void 0 ? void 0 : _content$exercise3.duration, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1196,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1193,\n          columnNumber: 21\n        }, this);\n      case 'mindfulness':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mindfulness-exercise\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: (_content$exercise4 = content.exercise) === null || _content$exercise4 === void 0 ? void 0 : _content$exercise4.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            children: (_content$exercise5 = content.exercise) === null || _content$exercise5 === void 0 ? void 0 : (_content$exercise5$in = _content$exercise5.instructions) === null || _content$exercise5$in === void 0 ? void 0 : _content$exercise5$in.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: step\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1206,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"exercise-duration\",\n            children: [\"Duration: \", Math.floor(((_content$exercise6 = content.exercise) === null || _content$exercise6 === void 0 ? void 0 : _content$exercise6.duration) / 60), \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1202,\n          columnNumber: 21\n        }, this);\n      case 'quotes':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"daily-quote\",\n          children: /*#__PURE__*/_jsxDEV(\"blockquote\", {\n            children: [\"\\\"\", content.quote, \"\\\"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1216,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1215,\n          columnNumber: 21\n        }, this);\n      case 'affirmations':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"affirmations\",\n          children: [(_content$affirmations = content.affirmations) === null || _content$affirmations === void 0 ? void 0 : _content$affirmations.map((affirmation, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"affirmation\",\n            children: [\"\\u2728 \", affirmation]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1224,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"daily-reminder\",\n            children: content.daily_reminder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1222,\n          columnNumber: 21\n        }, this);\n      case 'music':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"music-recommendations\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"\\uD83C\\uDFB5 \", content.playlist_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1235,\n            columnNumber: 25\n          }, this), (_content$recommendati = content.recommendations) === null || _content$recommendati === void 0 ? void 0 : _content$recommendati.map((rec, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-rec\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-title\",\n              children: rec.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-reason\",\n              children: rec.reason\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1237,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1234,\n          columnNumber: 21\n        }, this);\n      case 'emergency':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emergency-resources\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emergency-warning\",\n            children: \"If you're in crisis, please reach out for help immediately:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1248,\n            columnNumber: 25\n          }, this), (_content$resources = content.resources) === null || _content$resources === void 0 ? void 0 : _content$resources.map((resource, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emergency-contact\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-name\",\n              children: resource.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-number\",\n              children: resource.number\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1254,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"contact-description\",\n              children: resource.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1255,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1252,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Feature content not available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1262,\n          columnNumber: 24\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wellness-features\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wellness-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83C\\uDF3F Wellness Center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1269,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Tools and resources for your mental well-being\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1270,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1268,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"features-grid\",\n      children: features.map(feature => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `feature-card ${(activeFeature === null || activeFeature === void 0 ? void 0 : activeFeature.key) === feature.key ? 'active' : ''}`,\n        onClick: () => handleFeatureClick(feature),\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: feature.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1280,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: feature.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1281,\n          columnNumber: 25\n        }, this)]\n      }, feature.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1275,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1273,\n      columnNumber: 13\n    }, this), activeFeature && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feature-content animate-slide-down\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-content-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: activeFeature.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1289,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: () => setActiveFeature(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1290,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feature-content-body\",\n        children: renderContent()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1287,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1267,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// USER STATS AND PROFILE COMPONENT\n// ================================================================\n_s13(WellnessFeatures, \"oet+egUrUiCW5B5cV0aOVctJp6o=\", false, function () {\n  return [useAPI];\n});\n_c0 = WellnessFeatures;\nconst UserProfile = ({\n  user,\n  onShowNotification\n}) => {\n  _s14();\n  var _user$username, _user$username$, _userStats$user;\n  const [userStats, setUserStats] = useState(null);\n  const [moodAnalytics, setMoodAnalytics] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const {\n    makeRequest\n  } = useAPI();\n  useEffect(() => {\n    loadUserData();\n  }, []);\n  const loadUserData = async () => {\n    try {\n      const [statsResponse, analyticsResponse] = await Promise.all([makeRequest('/user/stats'), makeRequest('/mood/analytics?days=30')]);\n      setUserStats(statsResponse);\n      setMoodAnalytics(analyticsResponse);\n    } catch (error) {\n      console.error('Failed to load user data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1334,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading your profile...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1335,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1333,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-avatar\",\n        style: {\n          backgroundColor: user.avatar_color || '#8B5CF6'\n        },\n        children: (_user$username = user.username) === null || _user$username === void 0 ? void 0 : (_user$username$ = _user$username[0]) === null || _user$username$ === void 0 ? void 0 : _user$username$.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1343,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-emoji\",\n              children: \"\\u2B50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1351,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Level \", user.level || 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1352,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1350,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-emoji\",\n              children: getStreakEmoji(user.current_streak || 0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1355,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [user.current_streak || 0, \" day streak\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1356,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1354,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-emoji\",\n              children: \"\\uD83E\\uDE99\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1359,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [user.mood_points || 0, \" points\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1358,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1342,\n      columnNumber: 13\n    }, this), (userStats === null || userStats === void 0 ? void 0 : (_userStats$user = userStats.user) === null || _userStats$user === void 0 ? void 0 : _userStats$user.badges) && userStats.user.badges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"badges-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83C\\uDFC6 Your Badges\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1368,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"badges-grid\",\n        children: userStats.user.badges.map((badgeKey, index) => {\n          const badge = getBadgeDetails(badgeKey);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"badge-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge-emoji\",\n              children: badge.emoji\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1374,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"badge-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"badge-name\",\n                children: badge.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1376,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"badge-description\",\n                children: badge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1377,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1375,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1373,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1369,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 17\n    }, this), moodAnalytics && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-analytics\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Your Mood Analytics (Last 30 Days)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1388,\n        columnNumber: 21\n      }, this), moodAnalytics.mood_distribution && moodAnalytics.mood_distribution.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-distribution\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Most Common Moods\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1392,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-bars\",\n          children: moodAnalytics.mood_distribution.slice(0, 5).map(([mood, count, avgIntensity]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mood-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mood-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mood-emoji\",\n                children: getMoodEmoji(mood)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1397,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mood-name\",\n                children: mood\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1398,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mood-count\",\n                children: [count, \" times\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bar-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bar-fill\",\n                style: {\n                  width: `${count / moodAnalytics.mood_distribution[0][1] * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1401,\n              columnNumber: 41\n            }, this)]\n          }, mood, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1395,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1393,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1391,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1387,\n      columnNumber: 17\n    }, this), (userStats === null || userStats === void 0 ? void 0 : userStats.recent_activities) && userStats.recent_activities.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recent-activities\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCDD Recent Activity\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1419,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"activity-list\",\n        children: userStats.recent_activities.slice(0, 5).map((activity, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"activity-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-mood\",\n            children: [getMoodEmoji(activity[1]), \" \", activity[1]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1423,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-message\",\n            children: [activity[0].substring(0, 100), \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1426,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"activity-time\",\n            children: formatTimeAgo(activity[2])\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1427,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1422,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1418,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1341,\n    columnNumber: 9\n  }, this);\n};\n\n// ================================================================\n// MAIN APP COMPONENT\n// ================================================================\n_s14(UserProfile, \"fmeDdDW87eQUYOvHSUy1vkZ5J/U=\", false, function () {\n  return [useAPI];\n});\n_c1 = UserProfile;\nconst App = () => {\n  _s15();\n  var _user$username2, _user$username2$;\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authMode, setAuthMode] = useState('login');\n  const [currentTab, setCurrentTab] = useState('chat');\n  const [notifications, setNotifications] = useState([]);\n  const [theme, setTheme] = useLocalStorage('moodmate-theme', 'dark');\n  const {\n    makeRequest\n  } = useAPI();\n\n  // Initialize app and check authentication\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  // Apply theme to document\n  useEffect(() => {\n    document.documentElement.setAttribute('data-theme', theme);\n  }, [theme]);\n  const checkAuthStatus = async () => {\n    try {\n      const response = await makeRequest('/user/stats');\n      if (response.user) {\n        setUser(response.user);\n      }\n    } catch (error) {\n      console.log('Not authenticated');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleLogin = userData => {\n    setUser(userData);\n    showNotification({\n      type: 'success',\n      title: 'Welcome back!',\n      message: `Namaste ${userData.username}! 🙏`,\n      emoji: '👋'\n    });\n  };\n  const handleRegister = userData => {\n    setUser(userData);\n    showNotification({\n      type: 'success',\n      title: 'Welcome to MoodMate!',\n      message: 'Your mental wellness journey starts now',\n      emoji: '🎉'\n    });\n  };\n  const handleLogout = async () => {\n    try {\n      await makeRequest('/logout', {\n        method: 'POST'\n      });\n    } finally {\n      setUser(null);\n      setCurrentTab('chat');\n      showNotification({\n        type: 'info',\n        title: 'Logged out',\n        message: 'Take care, see you soon! 💜',\n        emoji: '👋'\n      });\n    }\n  };\n  const showNotification = notification => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, {\n      ...notification,\n      id\n    }]);\n  };\n  const removeNotification = id => {\n    setNotifications(prev => prev.filter(n => n.id !== id));\n  };\n  const updateUser = updatedUser => {\n    setUser(updatedUser);\n  };\n  const contextValue = {\n    user,\n    setUser,\n    currentTab,\n    setCurrentTab,\n    theme,\n    setTheme,\n    showNotification\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-logo\",\n          children: \"\\uD83E\\uDDE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"MoodMate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1536,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1537,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your AI mental health companion...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1538,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1534,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1533,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app theme-${theme}`,\n      children: [!user ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1549,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"auth-logo\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"logo-icon\",\n              children: \"\\uD83E\\uDDE0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1552,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"MoodMate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1553,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Your AI Mental Health Companion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1554,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tagline\",\n              children: \"\\u0938\\u091A \\u092E\\u0947\\u0902, \\u0924\\u0941\\u092E\\u094D\\u0939\\u093E\\u0930\\u093E \\u0926\\u094B\\u0938\\u094D\\u0924!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1555,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1551,\n            columnNumber: 29\n          }, this), authMode === 'login' ? /*#__PURE__*/_jsxDEV(LoginForm, {\n            onLogin: handleLogin,\n            onSwitchToRegister: () => setAuthMode('register')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1559,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n            onRegister: handleRegister,\n            onSwitchToLogin: () => setAuthMode('login')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1564,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1548,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-left\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"app-logo\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"logo-icon\",\n                children: \"\\uD83E\\uDDE0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1576,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"logo-text\",\n                children: \"MoodMate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1577,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1575,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1574,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-center\",\n            children: /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"main-nav\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-tab ${currentTab === 'chat' ? 'active' : ''}`,\n                onClick: () => setCurrentTab('chat'),\n                children: \"\\uD83D\\uDCAC Chat\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-tab ${currentTab === 'mood' ? 'active' : ''}`,\n                onClick: () => setCurrentTab('mood'),\n                children: \"\\uD83D\\uDE0A Mood\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1589,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-tab ${currentTab === 'community' ? 'active' : ''}`,\n                onClick: () => setCurrentTab('community'),\n                children: \"\\uD83C\\uDF0D Community\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1595,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-tab ${currentTab === 'wellness' ? 'active' : ''}`,\n                onClick: () => setCurrentTab('wellness'),\n                children: \"\\uD83C\\uDF3F Wellness\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1601,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: `nav-tab ${currentTab === 'profile' ? 'active' : ''}`,\n                onClick: () => setCurrentTab('profile'),\n                children: \"\\uD83D\\uDC64 Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1607,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1582,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1581,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"header-right\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-menu\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"user-name\",\n                  children: user.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1619,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-avatar\",\n                  style: {\n                    backgroundColor: user.avatar_color\n                  },\n                  children: (_user$username2 = user.username) === null || _user$username2 === void 0 ? void 0 : (_user$username2$ = _user$username2[0]) === null || _user$username2$ === void 0 ? void 0 : _user$username2$.toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1620,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1618,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-actions\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"theme-toggle\",\n                  onClick: () => setTheme(theme === 'dark' ? 'light' : 'dark'),\n                  title: \"Toggle theme\",\n                  children: theme === 'dark' ? '☀️' : '🌙'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1626,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"logout-button\",\n                  onClick: handleLogout,\n                  title: \"Logout\",\n                  children: \"\\uD83D\\uDEAA\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1634,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1625,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1617,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1616,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1573,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-content\",\n            children: [currentTab === 'chat' && /*#__PURE__*/_jsxDEV(ChatInterface, {\n              user: user,\n              onUpdateUser: updateUser,\n              onShowNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1649,\n              columnNumber: 37\n            }, this), currentTab === 'mood' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mood-tab\",\n              children: /*#__PURE__*/_jsxDEV(MoodLogger, {\n                user: user,\n                onShowNotification: showNotification\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1658,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1657,\n              columnNumber: 37\n            }, this), currentTab === 'community' && /*#__PURE__*/_jsxDEV(CommunityWall, {\n              onShowNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1666,\n              columnNumber: 37\n            }, this), currentTab === 'wellness' && /*#__PURE__*/_jsxDEV(WellnessFeatures, {\n              onShowNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 37\n            }, this), currentTab === 'profile' && /*#__PURE__*/_jsxDEV(UserProfile, {\n              user: user,\n              onShowNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1674,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1647,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidebar\",\n            children: /*#__PURE__*/_jsxDEV(DailyChallenge, {\n              user: user,\n              onShowNotification: showNotification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1682,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1681,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1572,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notifications-container\",\n        children: notifications.map(notification => /*#__PURE__*/_jsxDEV(Notification, {\n          notification: notification,\n          onClose: removeNotification\n        }, notification.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1693,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1691,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1546,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1545,\n    columnNumber: 9\n  }, this);\n};\n\n// Render the app\n_s15(App, \"FDrYoG+6S3yfvubGZs6ZbTG6cHQ=\", false, function () {\n  return [useLocalStorage, useAPI];\n});\n_c10 = App;\nReactDOM.render(/*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 1706,\n  columnNumber: 17\n}, this), document.getElementById('root'));\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"RegisterForm\");\n$RefreshReg$(_c4, \"ChatMessage\");\n$RefreshReg$(_c5, \"ChatInput\");\n$RefreshReg$(_c6, \"ChatInterface\");\n$RefreshReg$(_c7, \"MoodLogger\");\n$RefreshReg$(_c8, \"CommunityWall\");\n$RefreshReg$(_c9, \"DailyChallenge\");\n$RefreshReg$(_c0, \"WellnessFeatures\");\n$RefreshReg$(_c1, \"UserProfile\");\n$RefreshReg$(_c10, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useMemo","useCallback","createContext","ReactDOM","jsxDEV","_jsxDEV","AppContext","useAppContext","_s","context","Error","useAPI","_s2","makeRequest","endpoint","options","response","fetch","method","headers","credentials","data","json","ok","error","status","console","useLocalStorage","key","defaultValue","_s3","value","setValue","item","window","localStorage","getItem","JSON","parse","setStoredValue","newValue","setItem","stringify","useTypingEffect","text","speed","_s4","displayedText","setDisplayedText","isTyping","setIsTyping","index","timer","setInterval","length","slice","clearInterval","useAutoScroll","dependency","_s5","scrollRef","useRef","current","element","scrollTop","scrollHeight","getMoodEmoji","mood","emojiMap","happy","sad","angry","anxious","excited","calm","confused","motivated","lonely","grateful","neutral","formatTimeAgo","timestamp","now","Date","past","diff","Math","floor","getStreakEmoji","streak","getBadgeDetails","badgeKey","badges","first_chat","name","emoji","description","streak_7","streak_30","chatterbox","mood_tracker","Notification","notification","onClose","_s6","setTimeout","id","clearTimeout","className","type","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","title","message","_c","LoginForm","onLogin","onSwitchToRegister","_s7","formData","setFormData","username","password","loading","setLoading","setError","handleSubmit","e","preventDefault","body","user","onSubmit","onChange","target","placeholder","required","disabled","_c2","RegisterForm","onRegister","onSwitchToLogin","_s8","email","confirmPassword","_c3","ChatMessage","isUser","onSuggestionClick","_s9","ai_response","content","user_message","points_earned","suggestion","music_recommendation","new_badges","map","badge","badgeInfo","_c4","ChatInput","onSendMessage","_s0","setMessage","textareaRef","trim","style","height","handleKeyPress","shiftKey","adjustHeight","textarea","min","ref","onKeyPress","rows","maxLength","_c5","ChatInterface","onUpdateUser","onShowNotification","_s1","messages","setMessages","initialLoading","setInitialLoading","messagesEndRef","loadChatHistory","history","handleSendMessage","messageText","userMessage","toISOString","prev","aiMessage","sentiment","mood_points","forEach","errorMessage","is_error","handleSuggestionClick","current_streak","level","_c6","MoodLogger","_s10","selectedMood","setSelectedMood","intensity","setIntensity","triggers","setTriggers","activities","setActivities","moods","label","color","success","borderColor","max","parseInt","_c7","CommunityWall","_s11","posts","setPosts","newPost","setNewPost","posting","setPosting","loadCommunityPosts","handleSubmitPost","post","handleReaction","postId","reactions","borderLeft","color_theme","time_ago","_post$reactions","_c8","DailyChallenge","_s12","challenge","setChallenge","completing","setCompleting","loadDailyChallenge","handleCompleteChallenge","completed","points","_c9","WellnessFeatures","_s13","activeFeature","setActiveFeature","setContent","features","handleFeatureClick","feature","renderContent","_content$exercise","_content$exercise2","_content$exercise3","_content$exercise4","_content$exercise5","_content$exercise5$in","_content$exercise6","_content$affirmations","_content$recommendati","_content$resources","exercise","instructions","duration","step","quote","affirmations","affirmation","daily_reminder","playlist_name","recommendations","rec","reason","resources","resource","number","_c0","UserProfile","_s14","_user$username","_user$username$","_userStats$user","userStats","setUserStats","moodAnalytics","setMoodAnalytics","loadUserData","statsResponse","analyticsResponse","Promise","all","backgroundColor","avatar_color","toUpperCase","mood_distribution","count","avgIntensity","width","recent_activities","activity","substring","_c1","App","_s15","_user$username2","_user$username2$","setUser","authMode","setAuthMode","currentTab","setCurrentTab","notifications","setNotifications","theme","setTheme","checkAuthStatus","document","documentElement","setAttribute","log","handleLogin","userData","showNotification","handleRegister","handleLogout","removeNotification","filter","n","updateUser","updatedUser","contextValue","Provider","_c10","render","getElementById","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["/**\r\n * MoodMate - Complete React Frontend\r\n * ==================================\r\n * * A comprehensive mental health companion app that integrates with the MoodMate Flask backend.\r\n * Features: AI chat, mood tracking, community wall, daily challenges, gamification, \r\n * wellness exercises, analytics, and more.\r\n */\r\nimport React, { useState, useEffect, useContext, useMemo, useCallback, createContext } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n\r\n import './app.css'; \r\n\r\n\r\n// ================================================================\r\n// GLOBAL STATE MANAGEMENT\r\n// ================================================================\r\n\r\nconst AppContext = createContext();\r\n\r\nconst useAppContext = () => {\r\n    const context = useContext(AppContext);\r\n    if (!context) {\r\n        throw new Error('useAppContext must be used within AppProvider');\r\n    }\r\n    return context;\r\n};\r\n\r\n// ================================================================\r\n// CUSTOM HOOKS\r\n// ================================================================\r\n\r\nconst useAPI = () => {\r\n    const makeRequest = useCallback(async (endpoint, options = {}) => {\r\n        try {\r\n            const response = await fetch(`/api${endpoint}`, {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include', // Important for session-based auth\r\n                ...options\r\n            });\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.error || `HTTP ${response.status}`);\r\n            }\r\n\r\n            return data;\r\n        } catch (error) {\r\n            console.error('API Error:', error);\r\n            throw error;\r\n        }\r\n    }, []);\r\n\r\n    return { makeRequest };\r\n};\r\n\r\nconst useLocalStorage = (key, defaultValue) => {\r\n    const [value, setValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : defaultValue;\r\n        } catch (error) {\r\n            return defaultValue;\r\n        }\r\n    });\r\n\r\n    const setStoredValue = useCallback((newValue) => {\r\n        try {\r\n            setValue(newValue);\r\n            window.localStorage.setItem(key, JSON.stringify(newValue));\r\n        } catch (error) {\r\n            console.error('LocalStorage error:', error);\r\n        }\r\n    }, [key]);\r\n\r\n    return [value, setStoredValue];\r\n};\r\n\r\nconst useTypingEffect = (text, speed = 30) => {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!text) {\r\n            setDisplayedText('');\r\n            return;\r\n        }\r\n\r\n        setIsTyping(true);\r\n        setDisplayedText('');\r\n\r\n        let index = 0;\r\n        const timer = setInterval(() => {\r\n            if (index < text.length) {\r\n                setDisplayedText(text.slice(0, index + 1));\r\n                index++;\r\n            } else {\r\n                setIsTyping(false);\r\n                clearInterval(timer);\r\n            }\r\n        }, speed);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n            setIsTyping(false);\r\n        };\r\n    }, [text, speed]);\r\n\r\n    return { displayedText, isTyping };\r\n};\r\n\r\nconst useAutoScroll = (dependency) => {\r\n    const scrollRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (scrollRef.current) {\r\n            const element = scrollRef.current;\r\n            element.scrollTop = element.scrollHeight;\r\n        }\r\n    }, [dependency]);\r\n\r\n    return scrollRef;\r\n};\r\n\r\n// ================================================================\r\n// UTILITY FUNCTIONS\r\n// ================================================================\r\n\r\nconst getMoodEmoji = (mood) => {\r\n    const emojiMap = {\r\n        happy: '😊', sad: '😢', angry: '😠', anxious: '😰',\r\n        excited: '🤩', calm: '😌', confused: '😕', motivated: '💪',\r\n        lonely: '😔', grateful: '🙏', neutral: '😐'\r\n    };\r\n    return emojiMap[mood] || '😐';\r\n};\r\n\r\nconst formatTimeAgo = (timestamp) => {\r\n    const now = new Date();\r\n    const past = new Date(timestamp);\r\n    const diff = Math.floor((now - past) / 1000);\r\n\r\n    if (diff < 60) return 'Just now';\r\n    if (diff < 3600) return `${Math.floor(diff / 60)}m ago`;\r\n    if (diff < 86400) return `${Math.floor(diff / 3600)}h ago`;\r\n    return `${Math.floor(diff / 86400)}d ago`;\r\n};\r\n\r\nconst getStreakEmoji = (streak) => {\r\n    if (streak >= 365) return '👑';\r\n    if (streak >= 100) return '🔥';\r\n    if (streak >= 30) return '⭐';\r\n    if (streak >= 7) return '🌟';\r\n    return '✨';\r\n};\r\n\r\nconst getBadgeDetails = (badgeKey) => {\r\n    const badges = {\r\n        first_chat: { name: 'First Hello', emoji: '👋', description: 'Started first conversation' },\r\n        streak_7: { name: 'Week Warrior', emoji: '🔥', description: '7 day streak' },\r\n        streak_30: { name: 'Month Master', emoji: '🏆', description: '30 day streak' },\r\n        chatterbox: { name: 'Chatterbox', emoji: '💬', description: '100 messages sent' },\r\n        mood_tracker: { name: 'Mood Master', emoji: '😌', description: '50 mood logs' }\r\n    };\r\n    return badges[badgeKey] || { name: badgeKey, emoji: '🏅', description: 'Achievement unlocked!' };\r\n};\r\n\r\n// ================================================================\r\n// NOTIFICATION COMPONENT\r\n// ================================================================\r\n\r\nconst Notification = ({ notification, onClose }) => {\r\n    useEffect(() => {\r\n        const timer = setTimeout(() => {\r\n            onClose(notification.id);\r\n        }, 5000);\r\n\r\n        return () => clearTimeout(timer);\r\n    }, [notification.id, onClose]);\r\n\r\n    return (\r\n        <div className={`notification ${notification.type} animate-slide-in`} onClick={() => onClose(notification.id)}>\r\n            <div className=\"notification-content\">\r\n                <span className=\"notification-emoji\">{notification.emoji}</span>\r\n                <div>\r\n                    <div className=\"notification-title\">{notification.title}</div>\r\n                    <div className=\"notification-message\">{notification.message}</div>\r\n                </div>\r\n            </div>\r\n            <button className=\"notification-close\">×</button>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// AUTHENTICATION COMPONENTS\r\n// ================================================================\r\n\r\nconst LoginForm = ({ onLogin, onSwitchToRegister }) => {\r\n    const [formData, setFormData] = useState({ username: '', password: '' });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const { makeRequest } = useAPI();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const response = await makeRequest('/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            onLogin(response.user);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form animate-fade-in\">\r\n            <div className=\"auth-header\">\r\n                <h2>Welcome Back to MoodMate! 💜</h2>\r\n                <p>Your AI companion is waiting for you</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={formData.username}\r\n                        onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n                        placeholder=\"Enter your username\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={formData.password}\r\n                        onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                        placeholder=\"Enter your password\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                    {loading ? 'Signing in...' : 'Sign In'}\r\n                </button>\r\n\r\n                <div className=\"auth-switch\">\r\n                    <p>New to MoodMate? \r\n                        <button type=\"button\" onClick={onSwitchToRegister} className=\"link-button\">\r\n                            Create Account\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst RegisterForm = ({ onRegister, onSwitchToLogin }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: ''\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n    const { makeRequest } = useAPI();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        if (formData.password !== formData.confirmPassword) {\r\n            setError('Passwords do not match');\r\n            setLoading(false);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await makeRequest('/register', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: formData.username,\r\n                    email: formData.email,\r\n                    password: formData.password\r\n                })\r\n            });\r\n\r\n            onRegister(response.user);\r\n        } catch (error) {\r\n            setError(error.message);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"auth-form animate-fade-in\">\r\n            <div className=\"auth-header\">\r\n                <h2>Join MoodMate! 🌟</h2>\r\n                <p>Start your mental wellness journey today</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"form-group\">\r\n                    <label>Username</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={formData.username}\r\n                        onChange={(e) => setFormData({...formData, username: e.target.value})}\r\n                        placeholder=\"Choose a username\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input\r\n                        type=\"email\"\r\n                        value={formData.email}\r\n                        onChange={(e) => setFormData({...formData, email: e.target.value})}\r\n                        placeholder=\"your.email@example.com\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={formData.password}\r\n                        onChange={(e) => setFormData({...formData, password: e.target.value})}\r\n                        placeholder=\"Create a secure password\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Confirm Password</label>\r\n                    <input\r\n                        type=\"password\"\r\n                        value={formData.confirmPassword}\r\n                        onChange={(e) => setFormData({...formData, confirmPassword: e.target.value})}\r\n                        placeholder=\"Confirm your password\"\r\n                        required\r\n                        disabled={loading}\r\n                    />\r\n                </div>\r\n\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                    {loading ? 'Creating Account...' : 'Create Account'}\r\n                </button>\r\n\r\n                <div className=\"auth-switch\">\r\n                    <p>Already have an account? \r\n                        <button type=\"button\" onClick={onSwitchToLogin} className=\"link-button\">\r\n                            Sign In\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// CHAT COMPONENTS\r\n// ================================================================\r\n\r\nconst ChatMessage = ({ message, isUser, onSuggestionClick }) => {\r\n    const { displayedText, isTyping } = useTypingEffect(\r\n        !isUser && message.ai_response ? message.ai_response : '', \r\n        30\r\n    );\r\n\r\n    const content = isUser \r\n        ? message.user_message || message.message\r\n        : displayedText || message.response || message.ai_response;\r\n\r\n    return (\r\n        <div className={`chat-message ${isUser ? 'user' : 'assistant'} animate-slide-up`}>\r\n            <div className=\"message-avatar\">\r\n                {isUser ? (\r\n                    <div className=\"user-avatar\">👤</div>\r\n                ) : (\r\n                    <div className=\"ai-avatar\">🤖</div>\r\n                )}\r\n            </div>\r\n\r\n            <div className=\"message-content\">\r\n                <div className=\"message-bubble\">\r\n                    <div className=\"message-text\">\r\n                        {content}\r\n                        {!isUser && isTyping && <span className=\"typing-cursor\">|</span>}\r\n                    </div>\r\n\r\n                    {!isUser && message.mood && (\r\n                        <div className=\"mood-indicator\">\r\n                            <span className=\"mood-emoji\">{getMoodEmoji(message.mood)}</span>\r\n                            <span className=\"mood-text\">Detected: {message.mood}</span>\r\n                        </div>\r\n                    )}\r\n\r\n                    {!isUser && message.points_earned && (\r\n                        <div className=\"points-earned\">\r\n                            +{message.points_earned} points! ✨\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"message-time\">\r\n                        {formatTimeAgo(message.timestamp)}\r\n                    </div>\r\n                </div>\r\n\r\n                {!isUser && message.suggestion && (\r\n                    <div className=\"suggestion-card\" onClick={() => onSuggestionClick(message.suggestion)}>\r\n                        <div className=\"suggestion-header\">💡 Try this:</div>\r\n                        <div className=\"suggestion-text\">{message.suggestion}</div>\r\n                    </div>\r\n                )}\r\n\r\n                {!isUser && message.music_recommendation && (\r\n                    <div className=\"music-recommendation\">\r\n                        <div className=\"music-header\">🎵 Music for you:</div>\r\n                        <div className=\"music-text\">{message.music_recommendation}</div>\r\n                    </div>\r\n                )}\r\n\r\n                {!isUser && message.new_badges && message.new_badges.length > 0 && (\r\n                    <div className=\"badge-notification\">\r\n                        {message.new_badges.map((badge, index) => {\r\n                            const badgeInfo = getBadgeDetails(badge);\r\n                            return (\r\n                                <div key={index} className=\"new-badge\">\r\n                                    <span className=\"badge-emoji\">{badgeInfo.emoji}</span>\r\n                                    <span className=\"badge-name\">New Badge: {badgeInfo.name}!</span>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ChatInput = ({ onSendMessage, loading }) => {\r\n    const [message, setMessage] = useState('');\r\n    const textareaRef = useRef(null);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (message.trim() && !loading) {\r\n            onSendMessage(message.trim());\r\n            setMessage('');\r\n            if (textareaRef.current) {\r\n                textareaRef.current.style.height = 'auto';\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n        }\r\n    };\r\n\r\n    const adjustHeight = (e) => {\r\n        const textarea = e.target;\r\n        textarea.style.height = 'auto';\r\n        textarea.style.height = Math.min(textarea.scrollHeight, 120) + 'px';\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-input-container\">\r\n            <form onSubmit={handleSubmit} className=\"chat-input-form\">\r\n                <div className=\"input-wrapper\">\r\n                    <textarea\r\n                        ref={textareaRef}\r\n                        value={message}\r\n                        onChange={(e) => {\r\n                            setMessage(e.target.value);\r\n                            adjustHeight(e);\r\n                        }}\r\n                        onKeyPress={handleKeyPress}\r\n                        placeholder=\"Share what's on your mind...\"\r\n                        className=\"chat-textarea\"\r\n                        disabled={loading}\r\n                        rows={1}\r\n                        maxLength={2000}\r\n                    />\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"send-button\"\r\n                        disabled={!message.trim() || loading}\r\n                    >\r\n                        {loading ? '...' : '➤'}\r\n                    </button>\r\n                </div>\r\n\r\n                <div className=\"input-hints\">\r\n                    <span>Press Enter to send, Shift+Enter for new line</span>\r\n                    <span className=\"char-counter\">{message.length}/2000</span>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst ChatInterface = ({ user, onUpdateUser, onShowNotification }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [initialLoading, setInitialLoading] = useState(true);\r\n    const { makeRequest } = useAPI();\r\n    const messagesEndRef = useAutoScroll(messages);\r\n\r\n    // Load chat history on component mount\r\n    useEffect(() => {\r\n        loadChatHistory();\r\n    }, []);\r\n\r\n    const loadChatHistory = async () => {\r\n        try {\r\n            const response = await makeRequest('/chat/history?limit=50');\r\n            setMessages(response.history || []);\r\n        } catch (error) {\r\n            console.error('Failed to load chat history:', error);\r\n        } finally {\r\n            setInitialLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSendMessage = async (messageText) => {\r\n        if (!messageText.trim()) return;\r\n\r\n        // Add user message immediately\r\n        const userMessage = {\r\n            id: Date.now(),\r\n            user_message: messageText,\r\n            timestamp: new Date().toISOString()\r\n        };\r\n\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await makeRequest('/chat', {\r\n                method: 'POST',\r\n                body: JSON.stringify({ message: messageText })\r\n            });\r\n\r\n            // Add AI response\r\n            const aiMessage = {\r\n                id: Date.now() + 1,\r\n                response: response.response,\r\n                mood: response.mood,\r\n                sentiment: response.sentiment,\r\n                points_earned: response.points_earned,\r\n                suggestion: response.suggestion,\r\n                music_recommendation: response.music_recommendation,\r\n                new_badges: response.new_badges,\r\n                timestamp: new Date().toISOString()\r\n            };\r\n\r\n            setMessages(prev => [...prev, aiMessage]);\r\n\r\n            // Update user stats\r\n            if (response.points_earned > 0) {\r\n                onUpdateUser({\r\n                    ...user,\r\n                    mood_points: (user.mood_points || 0) + response.points_earned\r\n                });\r\n            }\r\n\r\n            // Show notifications for new badges\r\n            if (response.new_badges && response.new_badges.length > 0) {\r\n                response.new_badges.forEach(badge => {\r\n                    const badgeInfo = getBadgeDetails(badge);\r\n                    onShowNotification({\r\n                        type: 'success',\r\n                        title: 'New Badge Earned!',\r\n                        message: badgeInfo.name,\r\n                        emoji: badgeInfo.emoji\r\n                    });\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            console.error('Chat error:', error);\r\n            const errorMessage = {\r\n                id: Date.now() + 2,\r\n                response: \"I'm having trouble responding right now. Please try again in a moment.\",\r\n                timestamp: new Date().toISOString(),\r\n                is_error: true\r\n            };\r\n            setMessages(prev => [...prev, errorMessage]);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (suggestion) => {\r\n        onShowNotification({\r\n            type: 'info',\r\n            title: 'Great Suggestion!',\r\n            message: 'Try incorporating this into your day',\r\n            emoji: '💡'\r\n        });\r\n    };\r\n\r\n    if (initialLoading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Loading your conversation...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"chat-interface\">\r\n            <div className=\"chat-header\">\r\n                <div className=\"chat-title\">\r\n                    <h2>💬 Chat with MoodMate</h2>\r\n                    <p>Your AI mental health companion</p>\r\n                </div>\r\n\r\n                <div className=\"user-stats-mini\">\r\n                    <div className=\"stat-item\">\r\n                        <span className=\"stat-emoji\">🪙</span>\r\n                        <span className=\"stat-value\">{user.mood_points || 0}</span>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <span className=\"stat-emoji\">{getStreakEmoji(user.current_streak || 0)}</span>\r\n                        <span className=\"stat-value\">{user.current_streak || 0}</span>\r\n                    </div>\r\n                    <div className=\"stat-item\">\r\n                        <span className=\"stat-emoji\">⭐</span>\r\n                        <span className=\"stat-value\">Lv.{user.level || 1}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"chat-messages\" ref={messagesEndRef}>\r\n                {messages.length === 0 ? (\r\n                    <div className=\"welcome-message animate-fade-in\">\r\n                        <div className=\"welcome-avatar\">🤖</div>\r\n                        <div className=\"welcome-content\">\r\n                            <h3>Namaste {user.username}! 🙏</h3>\r\n                            <p>Main MoodMate hun, tumhara AI companion! I'm here to listen, support, and chat with you in natural Hinglish.</p>\r\n                            <p>How are you feeling today? Kya chal raha hai aaj? Share anything on your mind! 💜</p>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    messages.map((message, index) => (\r\n                        <ChatMessage\r\n                            key={message.id || index}\r\n                            message={message}\r\n                            isUser={!!(message.user_message || message.message)}\r\n                            onSuggestionClick={handleSuggestionClick}\r\n                        />\r\n                    ))\r\n                )}\r\n\r\n                {loading && (\r\n                    <div className=\"ai-typing animate-fade-in\">\r\n                        <div className=\"typing-indicator\">\r\n                            <div className=\"typing-dots\">\r\n                                <span></span>\r\n                                <span></span>\r\n                                <span></span>\r\n                            </div>\r\n                            <span>MoodMate is typing...</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            <ChatInput onSendMessage={handleSendMessage} loading={loading} />\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// MOOD TRACKING COMPONENTS\r\n// ================================================================\r\n\r\nconst MoodLogger = ({ user, onShowNotification }) => {\r\n    const [selectedMood, setSelectedMood] = useState('');\r\n    const [intensity, setIntensity] = useState(5);\r\n    const [triggers, setTriggers] = useState('');\r\n    const [activities, setActivities] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const { makeRequest } = useAPI();\r\n\r\n    const moods = [\r\n        { key: 'happy', label: 'Happy', emoji: '😊', color: '#FFD93D' },\r\n        { key: 'sad', label: 'Sad', emoji: '😢', color: '#6C9BD1' },\r\n        { key: 'anxious', label: 'Anxious', emoji: '😰', color: '#FF6B9D' },\r\n        { key: 'calm', label: 'Calm', emoji: '😌', color: '#4ECDC4' },\r\n        { key: 'excited', label: 'Excited', emoji: '🤩', color: '#FF8C42' },\r\n        { key: 'angry', label: 'Angry', emoji: '😠', color: '#FF4757' },\r\n        { key: 'confused', label: 'Confused', emoji: '😕', color: '#A4B0BE' },\r\n        { key: 'grateful', label: 'Grateful', emoji: '🙏', color: '#2ED573' }\r\n    ];\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (!selectedMood) return;\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await makeRequest('/mood/log', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    mood: selectedMood,\r\n                    intensity: intensity,\r\n                    triggers: triggers,\r\n                    activities: activities\r\n                })\r\n            });\r\n\r\n            if (response.success) {\r\n                onShowNotification({\r\n                    type: 'success',\r\n                    title: 'Mood Logged!',\r\n                    message: `+${response.points_earned} points earned`,\r\n                    emoji: '📝'\r\n                });\r\n\r\n                // Reset form\r\n                setSelectedMood('');\r\n                setIntensity(5);\r\n                setTriggers('');\r\n                setActivities('');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to log mood:', error);\r\n            onShowNotification({\r\n                type: 'error',\r\n                title: 'Error',\r\n                message: 'Failed to log mood. Please try again.',\r\n                emoji: '❌'\r\n            });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"mood-logger animate-fade-in\">\r\n            <div className=\"mood-logger-header\">\r\n                <h3>📝 Log Your Mood</h3>\r\n                <p>How are you feeling right now?</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mood-selection\">\r\n                    <div className=\"mood-grid\">\r\n                        {moods.map(mood => (\r\n                            <button\r\n                                key={mood.key}\r\n                                type=\"button\"\r\n                                className={`mood-option ${selectedMood === mood.key ? 'selected' : ''}`}\r\n                                onClick={() => setSelectedMood(mood.key)}\r\n                                style={{ borderColor: mood.color }}\r\n                            >\r\n                                <span className=\"mood-emoji\">{mood.emoji}</span>\r\n                                <span className=\"mood-label\">{mood.label}</span>\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedMood && (\r\n                    <div className=\"mood-details animate-slide-down\">\r\n                        <div className=\"form-group\">\r\n                            <label>Intensity (1-10)</label>\r\n                            <div className=\"intensity-slider\">\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"1\"\r\n                                    max=\"10\"\r\n                                    value={intensity}\r\n                                    onChange={(e) => setIntensity(parseInt(e.target.value))}\r\n                                    className=\"slider\"\r\n                                />\r\n                                <div className=\"intensity-value\">{intensity}/10</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>What triggered this mood? (Optional)</label>\r\n                            <textarea\r\n                                value={triggers}\r\n                                onChange={(e) => setTriggers(e.target.value)}\r\n                                placeholder=\"e.g., work stress, good news, social interaction...\"\r\n                                rows=\"2\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <label>What activities helped? (Optional)</label>\r\n                            <textarea\r\n                                value={activities}\r\n                                onChange={(e) => setActivities(e.target.value)}\r\n                                placeholder=\"e.g., listening to music, talking to friends, meditation...\"\r\n                                rows=\"2\"\r\n                            />\r\n                        </div>\r\n\r\n                        <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n                            {loading ? 'Logging...' : 'Log Mood'}\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// COMMUNITY WALL COMPONENT\r\n// ================================================================\r\n\r\nconst CommunityWall = ({ onShowNotification }) => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [newPost, setNewPost] = useState({ mood: '', message: '' });\r\n    const [posting, setPosting] = useState(false);\r\n    const { makeRequest } = useAPI();\r\n\r\n    const moods = ['happy', 'sad', 'anxious', 'excited', 'calm', 'grateful', 'motivated'];\r\n\r\n    useEffect(() => {\r\n        loadCommunityPosts();\r\n    }, []);\r\n\r\n    const loadCommunityPosts = async () => {\r\n        try {\r\n            const response = await makeRequest('/community');\r\n            setPosts(response.posts || []);\r\n        } catch (error) {\r\n            console.error('Failed to load community posts:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleSubmitPost = async (e) => {\r\n        e.preventDefault();\r\n        if (!newPost.mood || !newPost.message.trim()) return;\r\n\r\n        setPosting(true);\r\n\r\n        try {\r\n            const response = await makeRequest('/community', {\r\n                method: 'POST',\r\n                body: JSON.stringify(newPost)\r\n            });\r\n\r\n            if (response.success) {\r\n                setPosts(prev => [response.post, ...prev]);\r\n                setNewPost({ mood: '', message: '' });\r\n                onShowNotification({\r\n                    type: 'success',\r\n                    title: 'Posted!',\r\n                    message: 'Your anonymous post has been shared',\r\n                    emoji: '📝'\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to create post:', error);\r\n        } finally {\r\n            setPosting(false);\r\n        }\r\n    };\r\n\r\n    const handleReaction = async (postId, emoji) => {\r\n        try {\r\n            const response = await makeRequest(`/community/${postId}/react`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ emoji })\r\n            });\r\n\r\n            if (response.success) {\r\n                setPosts(prev => prev.map(post => \r\n                    post.id === postId \r\n                        ? { ...post, reactions: response.reactions }\r\n                        : post\r\n                ));\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to add reaction:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"community-wall\">\r\n            <div className=\"community-header\">\r\n                <h2>🌍 Community Wall</h2>\r\n                <p>Share your feelings anonymously with the MoodMate community</p>\r\n            </div>\r\n\r\n            <div className=\"post-composer\">\r\n                <h3>Share Anonymously</h3>\r\n                <form onSubmit={handleSubmitPost}>\r\n                    <div className=\"form-group\">\r\n                        <label>How are you feeling?</label>\r\n                        <div className=\"mood-selector\">\r\n                            {moods.map(mood => (\r\n                                <button\r\n                                    key={mood}\r\n                                    type=\"button\"\r\n                                    className={`mood-chip ${newPost.mood === mood ? 'selected' : ''}`}\r\n                                    onClick={() => setNewPost({...newPost, mood})}\r\n                                >\r\n                                    {getMoodEmoji(mood)} {mood}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            value={newPost.message}\r\n                            onChange={(e) => setNewPost({...newPost, message: e.target.value})}\r\n                            placeholder=\"Share what's on your mind... Your post will be anonymous.\"\r\n                            maxLength=\"500\"\r\n                            rows=\"3\"\r\n                            required\r\n                        />\r\n                        <div className=\"char-counter\">{newPost.message.length}/500</div>\r\n                    </div>\r\n\r\n                    <button \r\n                        type=\"submit\" \r\n                        className=\"btn btn-primary\" \r\n                        disabled={!newPost.mood || !newPost.message.trim() || posting}\r\n                    >\r\n                        {posting ? 'Posting...' : 'Share Anonymously'}\r\n                    </button>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"community-posts\">\r\n                {loading ? (\r\n                    <div className=\"loading-container\">\r\n                        <div className=\"spinner\"></div>\r\n                        <p>Loading community posts...</p>\r\n                    </div>\r\n                ) : (\r\n                    posts.map(post => (\r\n                        <div key={post.id} className=\"community-post animate-fade-in\" \r\n                             style={{ borderLeft: `4px solid ${post.color_theme}` }}>\r\n                            <div className=\"post-header\">\r\n                                <div className=\"post-mood\">\r\n                                    {getMoodEmoji(post.mood)} {post.mood}\r\n                                </div>\r\n                                <div className=\"post-time\">{post.time_ago || formatTimeAgo(post.timestamp)}</div>\r\n                            </div>\r\n\r\n                            <div className=\"post-content\">\r\n                                {post.message}\r\n                            </div>\r\n\r\n                            <div className=\"post-reactions\">\r\n                                {['❤️', '🤗', '💪', '🙏', '✨'].map(emoji => (\r\n                                    <button\r\n                                        key={emoji}\r\n                                        className=\"reaction-btn\"\r\n                                        onClick={() => handleReaction(post.id, emoji)}\r\n                                    >\r\n                                        {emoji} {post.reactions?.[emoji] || 0}\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    ))\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// DAILY CHALLENGE COMPONENT\r\n// ================================================================\r\n\r\nconst DailyChallenge = ({ user, onShowNotification }) => {\r\n    const [challenge, setChallenge] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [completing, setCompleting] = useState(false);\r\n    const { makeRequest } = useAPI();\r\n\r\n    useEffect(() => {\r\n        loadDailyChallenge();\r\n    }, []);\r\n\r\n    const loadDailyChallenge = async () => {\r\n        try {\r\n            const response = await makeRequest('/challenges/daily');\r\n            setChallenge(response.challenge);\r\n        } catch (error) {\r\n            console.error('Failed to load daily challenge:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleCompleteChallenge = async () => {\r\n        if (!challenge || challenge.completed) return;\r\n\r\n        setCompleting(true);\r\n\r\n        try {\r\n            const response = await makeRequest(`/challenges/${challenge.id}/complete`, {\r\n                method: 'POST'\r\n            });\r\n\r\n            if (response.success) {\r\n                setChallenge(prev => ({ ...prev, completed: true }));\r\n                onShowNotification({\r\n                    type: 'success',\r\n                    title: 'Challenge Completed!',\r\n                    message: `+${response.points_earned} points earned`,\r\n                    emoji: '🎉'\r\n                });\r\n\r\n                if (response.new_badges && response.new_badges.length > 0) {\r\n                    response.new_badges.forEach(badge => {\r\n                        const badgeInfo = getBadgeDetails(badge);\r\n                        onShowNotification({\r\n                            type: 'success',\r\n                            title: 'New Badge!',\r\n                            message: badgeInfo.name,\r\n                            emoji: badgeInfo.emoji\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to complete challenge:', error);\r\n        } finally {\r\n            setCompleting(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Loading daily challenge...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (!challenge) {\r\n        return (\r\n            <div className=\"daily-challenge\">\r\n                <h3>🎯 Daily Challenge</h3>\r\n                <p>No challenge available today. Check back tomorrow!</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"daily-challenge animate-fade-in\">\r\n            <div className=\"challenge-header\">\r\n                <h3>🎯 Today's Challenge</h3>\r\n                <div className=\"challenge-points\">+{challenge.points} points</div>\r\n            </div>\r\n\r\n            <div className={`challenge-card ${challenge.completed ? 'completed' : ''}`}>\r\n                <div className=\"challenge-type\">{challenge.type}</div>\r\n                <div className=\"challenge-text\">{challenge.text}</div>\r\n\r\n                {challenge.completed ? (\r\n                    <div className=\"challenge-completed\">\r\n                        ✅ Completed! Great job!\r\n                    </div>\r\n                ) : (\r\n                    <button\r\n                        className=\"btn btn-primary challenge-btn\"\r\n                        onClick={handleCompleteChallenge}\r\n                        disabled={completing}\r\n                    >\r\n                        {completing ? 'Marking Complete...' : 'Mark as Complete'}\r\n                    </button>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// WELLNESS FEATURES COMPONENT\r\n// ================================================================\r\n\r\nconst WellnessFeatures = ({ onShowNotification }) => {\r\n    const [activeFeature, setActiveFeature] = useState(null);\r\n    const [content, setContent] = useState(null);\r\n    const [loading, setLoading] = useState(false);\r\n    const { makeRequest } = useAPI();\r\n\r\n    const features = [\r\n        { key: 'breathing', title: '🌬️ Breathing Exercise', description: 'Guided breathing exercises' },\r\n        { key: 'mindfulness', title: '🧘 Mindfulness', description: 'Mindfulness and meditation' },\r\n        { key: 'quotes', title: '💭 Daily Quotes', description: 'Inspirational quotes' },\r\n        { key: 'affirmations', title: '✨ Affirmations', description: 'Positive affirmations' },\r\n        { key: 'music', title: '🎵 Music Therapy', description: 'Mood-based music recommendations' },\r\n        { key: 'emergency', title: '🆘 Emergency Resources', description: 'Crisis support contacts' }\r\n    ];\r\n\r\n    const handleFeatureClick = async (feature) => {\r\n        setActiveFeature(feature);\r\n        setLoading(true);\r\n        setContent(null);\r\n\r\n        try {\r\n            let response;\r\n            switch (feature.key) {\r\n                case 'breathing':\r\n                    response = await makeRequest('/breathing-exercise');\r\n                    break;\r\n                case 'mindfulness':\r\n                    response = await makeRequest('/mindfulness/exercise');\r\n                    break;\r\n                case 'quotes':\r\n                    response = await makeRequest('/quotes/random');\r\n                    break;\r\n                case 'affirmations':\r\n                    response = await makeRequest('/affirmations');\r\n                    break;\r\n                case 'music':\r\n                    response = await makeRequest('/music/recommend', {\r\n                        method: 'POST',\r\n                        body: JSON.stringify({ mood: 'happy' })\r\n                    });\r\n                    break;\r\n                case 'emergency':\r\n                    response = await makeRequest('/emergency/resources');\r\n                    break;\r\n                default:\r\n                    response = { message: 'Feature coming soon!' };\r\n            }\r\n            setContent(response);\r\n        } catch (error) {\r\n            console.error('Failed to load feature content:', error);\r\n            setContent({ error: 'Failed to load content. Please try again.' });\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const renderContent = () => {\r\n        if (loading) return <div className=\"spinner\"></div>;\r\n        if (!content) return null;\r\n        if (content.error) return <div className=\"error-message\">{content.error}</div>;\r\n\r\n        switch (activeFeature.key) {\r\n            case 'breathing':\r\n                return (\r\n                    <div className=\"breathing-exercise\">\r\n                        <h4>{content.exercise?.name}</h4>\r\n                        <p>{content.exercise?.instructions}</p>\r\n                        <div className=\"exercise-duration\">Duration: {content.exercise?.duration}s</div>\r\n                    </div>\r\n                );\r\n\r\n            case 'mindfulness':\r\n                return (\r\n                    <div className=\"mindfulness-exercise\">\r\n                        <h4>{content.exercise?.name}</h4>\r\n                        <ol>\r\n                            {content.exercise?.instructions?.map((step, index) => (\r\n                                <li key={index}>{step}</li>\r\n                            ))}\r\n                        </ol>\r\n                        <div className=\"exercise-duration\">Duration: {Math.floor(content.exercise?.duration / 60)} minutes</div>\r\n                    </div>\r\n                );\r\n\r\n            case 'quotes':\r\n                return (\r\n                    <div className=\"daily-quote\">\r\n                        <blockquote>\"{content.quote}\"</blockquote>\r\n                    </div>\r\n                );\r\n\r\n            case 'affirmations':\r\n                return (\r\n                    <div className=\"affirmations\">\r\n                        {content.affirmations?.map((affirmation, index) => (\r\n                            <div key={index} className=\"affirmation\">\r\n                                ✨ {affirmation}\r\n                            </div>\r\n                        ))}\r\n                        <div className=\"daily-reminder\">{content.daily_reminder}</div>\r\n                    </div>\r\n                );\r\n\r\n            case 'music':\r\n                return (\r\n                    <div className=\"music-recommendations\">\r\n                        <h4>🎵 {content.playlist_name}</h4>\r\n                        {content.recommendations?.map((rec, index) => (\r\n                            <div key={index} className=\"music-rec\">\r\n                                <div className=\"song-title\">{rec.title}</div>\r\n                                <div className=\"song-reason\">{rec.reason}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n\r\n            case 'emergency':\r\n                return (\r\n                    <div className=\"emergency-resources\">\r\n                        <div className=\"emergency-warning\">\r\n                            If you're in crisis, please reach out for help immediately:\r\n                        </div>\r\n                        {content.resources?.map((resource, index) => (\r\n                            <div key={index} className=\"emergency-contact\">\r\n                                <div className=\"contact-name\">{resource.name}</div>\r\n                                <div className=\"contact-number\">{resource.number}</div>\r\n                                <div className=\"contact-description\">{resource.description}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                );\r\n\r\n            default:\r\n                return <div>Feature content not available</div>;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"wellness-features\">\r\n            <div className=\"wellness-header\">\r\n                <h2>🌿 Wellness Center</h2>\r\n                <p>Tools and resources for your mental well-being</p>\r\n            </div>\r\n\r\n            <div className=\"features-grid\">\r\n                {features.map(feature => (\r\n                    <div \r\n                        key={feature.key} \r\n                        className={`feature-card ${activeFeature?.key === feature.key ? 'active' : ''}`}\r\n                        onClick={() => handleFeatureClick(feature)}\r\n                    >\r\n                        <h3>{feature.title}</h3>\r\n                        <p>{feature.description}</p>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            {activeFeature && (\r\n                <div className=\"feature-content animate-slide-down\">\r\n                    <div className=\"feature-content-header\">\r\n                        <h3>{activeFeature.title}</h3>\r\n                        <button className=\"close-btn\" onClick={() => setActiveFeature(null)}>×</button>\r\n                    </div>\r\n                    <div className=\"feature-content-body\">\r\n                        {renderContent()}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// USER STATS AND PROFILE COMPONENT\r\n// ================================================================\r\n\r\nconst UserProfile = ({ user, onShowNotification }) => {\r\n    const [userStats, setUserStats] = useState(null);\r\n    const [moodAnalytics, setMoodAnalytics] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const { makeRequest } = useAPI();\r\n\r\n    useEffect(() => {\r\n        loadUserData();\r\n    }, []);\r\n\r\n    const loadUserData = async () => {\r\n        try {\r\n            const [statsResponse, analyticsResponse] = await Promise.all([\r\n                makeRequest('/user/stats'),\r\n                makeRequest('/mood/analytics?days=30')\r\n            ]);\r\n\r\n            setUserStats(statsResponse);\r\n            setMoodAnalytics(analyticsResponse);\r\n        } catch (error) {\r\n            console.error('Failed to load user data:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"loading-container\">\r\n                <div className=\"spinner\"></div>\r\n                <p>Loading your profile...</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className=\"user-profile\">\r\n            <div className=\"profile-header\">\r\n                <div className=\"profile-avatar\" style={{ backgroundColor: user.avatar_color || '#8B5CF6' }}>\r\n                    {user.username?.[0]?.toUpperCase()}\r\n                </div>\r\n                <div className=\"profile-info\">\r\n                    <h2>{user.username}</h2>\r\n                    <p>{user.email}</p>\r\n                    <div className=\"profile-stats\">\r\n                        <div className=\"stat\">\r\n                            <span className=\"stat-emoji\">⭐</span>\r\n                            <span>Level {user.level || 1}</span>\r\n                        </div>\r\n                        <div className=\"stat\">\r\n                            <span className=\"stat-emoji\">{getStreakEmoji(user.current_streak || 0)}</span>\r\n                            <span>{user.current_streak || 0} day streak</span>\r\n                        </div>\r\n                        <div className=\"stat\">\r\n                            <span className=\"stat-emoji\">🪙</span>\r\n                            <span>{user.mood_points || 0} points</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {userStats?.user?.badges && userStats.user.badges.length > 0 && (\r\n                <div className=\"badges-section\">\r\n                    <h3>🏆 Your Badges</h3>\r\n                    <div className=\"badges-grid\">\r\n                        {userStats.user.badges.map((badgeKey, index) => {\r\n                            const badge = getBadgeDetails(badgeKey);\r\n                            return (\r\n                                <div key={index} className=\"badge-item\">\r\n                                    <span className=\"badge-emoji\">{badge.emoji}</span>\r\n                                    <div className=\"badge-info\">\r\n                                        <div className=\"badge-name\">{badge.name}</div>\r\n                                        <div className=\"badge-description\">{badge.description}</div>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {moodAnalytics && (\r\n                <div className=\"mood-analytics\">\r\n                    <h3>📊 Your Mood Analytics (Last 30 Days)</h3>\r\n\r\n                    {moodAnalytics.mood_distribution && moodAnalytics.mood_distribution.length > 0 && (\r\n                        <div className=\"mood-distribution\">\r\n                            <h4>Most Common Moods</h4>\r\n                            <div className=\"mood-bars\">\r\n                                {moodAnalytics.mood_distribution.slice(0, 5).map(([mood, count, avgIntensity]) => (\r\n                                    <div key={mood} className=\"mood-bar\">\r\n                                        <div className=\"mood-info\">\r\n                                            <span className=\"mood-emoji\">{getMoodEmoji(mood)}</span>\r\n                                            <span className=\"mood-name\">{mood}</span>\r\n                                            <span className=\"mood-count\">{count} times</span>\r\n                                        </div>\r\n                                        <div className=\"bar-container\">\r\n                                            <div \r\n                                                className=\"bar-fill\" \r\n                                                style={{ \r\n                                                    width: `${(count / moodAnalytics.mood_distribution[0][1]) * 100}%` \r\n                                                }}\r\n                                            ></div>\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}\r\n\r\n            {userStats?.recent_activities && userStats.recent_activities.length > 0 && (\r\n                <div className=\"recent-activities\">\r\n                    <h3>📝 Recent Activity</h3>\r\n                    <div className=\"activity-list\">\r\n                        {userStats.recent_activities.slice(0, 5).map((activity, index) => (\r\n                            <div key={index} className=\"activity-item\">\r\n                                <div className=\"activity-mood\">\r\n                                    {getMoodEmoji(activity[1])} {activity[1]}\r\n                                </div>\r\n                                <div className=\"activity-message\">{activity[0].substring(0, 100)}...</div>\r\n                                <div className=\"activity-time\">{formatTimeAgo(activity[2])}</div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\n// ================================================================\r\n// MAIN APP COMPONENT\r\n// ================================================================\r\n\r\nconst App = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n    const [authMode, setAuthMode] = useState('login');\r\n    const [currentTab, setCurrentTab] = useState('chat');\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [theme, setTheme] = useLocalStorage('moodmate-theme', 'dark');\r\n    const { makeRequest } = useAPI();\r\n\r\n    // Initialize app and check authentication\r\n    useEffect(() => {\r\n        checkAuthStatus();\r\n    }, []);\r\n\r\n    // Apply theme to document\r\n    useEffect(() => {\r\n        document.documentElement.setAttribute('data-theme', theme);\r\n    }, [theme]);\r\n\r\n    const checkAuthStatus = async () => {\r\n        try {\r\n            const response = await makeRequest('/user/stats');\r\n            if (response.user) {\r\n                setUser(response.user);\r\n            }\r\n        } catch (error) {\r\n            console.log('Not authenticated');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const handleLogin = (userData) => {\r\n        setUser(userData);\r\n        showNotification({\r\n            type: 'success',\r\n            title: 'Welcome back!',\r\n            message: `Namaste ${userData.username}! 🙏`,\r\n            emoji: '👋'\r\n        });\r\n    };\r\n\r\n    const handleRegister = (userData) => {\r\n        setUser(userData);\r\n        showNotification({\r\n            type: 'success',\r\n            title: 'Welcome to MoodMate!',\r\n            message: 'Your mental wellness journey starts now',\r\n            emoji: '🎉'\r\n        });\r\n    };\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await makeRequest('/logout', { method: 'POST' });\r\n        } finally {\r\n            setUser(null);\r\n            setCurrentTab('chat');\r\n            showNotification({\r\n                type: 'info',\r\n                title: 'Logged out',\r\n                message: 'Take care, see you soon! 💜',\r\n                emoji: '👋'\r\n            });\r\n        }\r\n    };\r\n\r\n    const showNotification = (notification) => {\r\n        const id = Date.now();\r\n        setNotifications(prev => [...prev, { ...notification, id }]);\r\n    };\r\n\r\n    const removeNotification = (id) => {\r\n        setNotifications(prev => prev.filter(n => n.id !== id));\r\n    };\r\n\r\n    const updateUser = (updatedUser) => {\r\n        setUser(updatedUser);\r\n    };\r\n\r\n    const contextValue = {\r\n        user,\r\n        setUser,\r\n        currentTab,\r\n        setCurrentTab,\r\n        theme,\r\n        setTheme,\r\n        showNotification\r\n    };\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"app-loading\">\r\n                <div className=\"loading-content\">\r\n                    <div className=\"app-logo\">🧠</div>\r\n                    <h1>MoodMate</h1>\r\n                    <div className=\"spinner large\"></div>\r\n                    <p>Loading your AI mental health companion...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={contextValue}>\r\n            <div className={`app theme-${theme}`}>\r\n                {!user ? (\r\n                    <div className=\"auth-container\">\r\n                        <div className=\"auth-background\"></div>\r\n                        <div className=\"auth-content\">\r\n                            <div className=\"auth-logo\">\r\n                                <div className=\"logo-icon\">🧠</div>\r\n                                <h1>MoodMate</h1>\r\n                                <p>Your AI Mental Health Companion</p>\r\n                                <div className=\"tagline\">सच में, तुम्हारा दोस्त!</div>\r\n                            </div>\r\n\r\n                            {authMode === 'login' ? (\r\n                                <LoginForm\r\n                                    onLogin={handleLogin}\r\n                                    onSwitchToRegister={() => setAuthMode('register')}\r\n                                />\r\n                            ) : (\r\n                                <RegisterForm\r\n                                    onRegister={handleRegister}\r\n                                    onSwitchToLogin={() => setAuthMode('login')}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"app-main\">\r\n                        <div className=\"app-header\">\r\n                            <div className=\"header-left\">\r\n                                <div className=\"app-logo\">\r\n                                    <span className=\"logo-icon\">🧠</span>\r\n                                    <span className=\"logo-text\">MoodMate</span>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"header-center\">\r\n                                <nav className=\"main-nav\">\r\n                                    <button\r\n                                        className={`nav-tab ${currentTab === 'chat' ? 'active' : ''}`}\r\n                                        onClick={() => setCurrentTab('chat')}\r\n                                    >\r\n                                        💬 Chat\r\n                                    </button>\r\n                                    <button\r\n                                        className={`nav-tab ${currentTab === 'mood' ? 'active' : ''}`}\r\n                                        onClick={() => setCurrentTab('mood')}\r\n                                    >\r\n                                        😊 Mood\r\n                                    </button>\r\n                                    <button\r\n                                        className={`nav-tab ${currentTab === 'community' ? 'active' : ''}`}\r\n                                        onClick={() => setCurrentTab('community')}\r\n                                    >\r\n                                        🌍 Community\r\n                                    </button>\r\n                                    <button\r\n                                        className={`nav-tab ${currentTab === 'wellness' ? 'active' : ''}`}\r\n                                        onClick={() => setCurrentTab('wellness')}\r\n                                    >\r\n                                        🌿 Wellness\r\n                                    </button>\r\n                                    <button\r\n                                        className={`nav-tab ${currentTab === 'profile' ? 'active' : ''}`}\r\n                                        onClick={() => setCurrentTab('profile')}\r\n                                    >\r\n                                        👤 Profile\r\n                                    </button>\r\n                                </nav>\r\n                            </div>\r\n\r\n                            <div className=\"header-right\">\r\n                                <div className=\"user-menu\">\r\n                                    <div className=\"user-info\">\r\n                                        <span className=\"user-name\">{user.username}</span>\r\n                                        <div className=\"user-avatar\" style={{ backgroundColor: user.avatar_color }}>\r\n                                            {user.username?.[0]?.toUpperCase()}\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"user-actions\">\r\n                                        <button\r\n                                            className=\"theme-toggle\"\r\n                                            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\r\n                                            title=\"Toggle theme\"\r\n                                        >\r\n                                            {theme === 'dark' ? '☀️' : '🌙'}\r\n                                        </button>\r\n\r\n                                        <button\r\n                                            className=\"logout-button\"\r\n                                            onClick={handleLogout}\r\n                                            title=\"Logout\"\r\n                                        >\r\n                                            🚪\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"app-content\">\r\n                            <div className=\"main-content\">\r\n                                {currentTab === 'chat' && (\r\n                                    <ChatInterface \r\n                                        user={user} \r\n                                        onUpdateUser={updateUser}\r\n                                        onShowNotification={showNotification}\r\n                                    />\r\n                                )}\r\n\r\n                                {currentTab === 'mood' && (\r\n                                    <div className=\"mood-tab\">\r\n                                        <MoodLogger \r\n                                            user={user} \r\n                                            onShowNotification={showNotification}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n\r\n                                {currentTab === 'community' && (\r\n                                    <CommunityWall onShowNotification={showNotification} />\r\n                                )}\r\n\r\n                                {currentTab === 'wellness' && (\r\n                                    <WellnessFeatures onShowNotification={showNotification} />\r\n                                )}\r\n\r\n                                {currentTab === 'profile' && (\r\n                                    <UserProfile \r\n                                        user={user} \r\n                                        onShowNotification={showNotification}\r\n                                    />\r\n                                )}\r\n                            </div>\r\n\r\n                            <div className=\"sidebar\">\r\n                                <DailyChallenge \r\n                                    user={user} \r\n                                    onShowNotification={showNotification}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                <div className=\"notifications-container\">\r\n                    {notifications.map(notification => (\r\n                        <Notification\r\n                            key={notification.id}\r\n                            notification={notification}\r\n                            onClose={removeNotification}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\n// Render the app\r\nReactDOM.render(<App />, document.getElementById('root'));"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}