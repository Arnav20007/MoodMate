{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s1 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$();\n/**\r\n * MoodMate - Complete AI Mental Health Companion Frontend\r\n * =======================================================\r\n * \r\n * A comprehensive React frontend for MoodMate featuring:\r\n * - Gemini Ultra AI integration with natural conversations\r\n * - Advanced memory and chat history management\r\n * - Streak tracking with rewards and gamification\r\n * - Real-time typing animations for AI responses\r\n * - Glassmorphism modern UI with smooth animations\r\n * - Auto-scroll chat functionality\r\n * - Complete authentication system\r\n * - Anonymous community wall for peer support\r\n * - Music/YouTube/Spotify mood-based suggestions\r\n * - Dynamic theming based on user moods\r\n * - Mini healing games integration\r\n * - Full Hinglish conversation support\r\n * - Comprehensive mood tracking and analytics\r\n * - Crisis detection and intervention features\r\n * \r\n * This frontend provides a complete user interface for all\r\n * MoodMate features with advanced React patterns, hooks,\r\n * and state management for optimal user experience.\r\n * \r\n * Architecture:\r\n * - React 18+ with functional components and hooks\r\n * - Custom state management with useReducer and Context\r\n * - Real-time UI updates with WebSocket-style polling\r\n * - Responsive design optimized for desktop usage\r\n * - Advanced animation system with CSS transitions\r\n * - Comprehensive error handling and user feedback\r\n * - Accessibility features and keyboard navigation\r\n * \r\n * Author: MoodMate Development Team\r\n * Version: 2.0.0\r\n * Created: August 2025\r\n */\n\n// React core imports for component functionality\nimport React, { useState, useEffect, useReducer, useRef, useCallback, useMemo, createContext, useContext, Suspense, memo } from 'react';\n\n// Additional React utilities for advanced features\nimport { createPortal } from 'react-dom';\n\n/**\r\n * ========================================================================\r\n * GLOBAL STATE MANAGEMENT AND CONTEXT\r\n * ========================================================================\r\n */\n\n// Main application state context for global data management\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContext = /*#__PURE__*/createContext();\n\n// Authentication context for user session management\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Chat context for conversation state management\nconst ChatContext = /*#__PURE__*/createContext();\n\n// Theme context for dynamic theming and mood-based styling\nconst ThemeContext = /*#__PURE__*/createContext();\n\n/**\r\n * Initial application state structure\r\n * Comprehensive state management for all MoodMate features\r\n */\nconst initialAppState = {\n  // User authentication and profile data\n  user: null,\n  isAuthenticated: false,\n  isLoading: true,\n  // Chat and conversation management\n  currentSession: null,\n  messages: [],\n  isTyping: false,\n  typingText: '',\n  // UI state and navigation\n  activeTab: 'chat',\n  sidebarCollapsed: false,\n  modalOpen: null,\n  theme: 'mood_adaptive',\n  // Gamification and progress tracking\n  coins: 0,\n  streak: 0,\n  level: 1,\n  experience: 0,\n  // Community and social features\n  communityPosts: [],\n  notifications: [],\n  // Mini games and challenges\n  activeGame: null,\n  gameScores: [],\n  challenges: [],\n  // Mood tracking and analytics\n  moodHistory: [],\n  currentMood: 'neutral',\n  analytics: {},\n  // Music and media suggestions\n  musicSuggestions: [],\n  currentlyPlaying: null,\n  // Error handling and system status\n  errors: [],\n  systemStatus: 'healthy',\n  connectionStatus: 'connected'\n};\n\n/**\r\n * Main application state reducer\r\n * Handles all state updates with proper immutability\r\n */\nfunction appStateReducer(state, action) {\n  switch (action.type) {\n    // Authentication actions\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        isAuthenticated: true,\n        isLoading: false,\n        coins: action.payload.user.total_coins,\n        streak: action.payload.user.current_streak,\n        level: action.payload.user.level,\n        experience: action.payload.user.experience_points\n      };\n    case 'LOGOUT':\n      return {\n        ...initialAppState,\n        isLoading: false\n      };\n    case 'UPDATE_USER_STATS':\n      return {\n        ...state,\n        coins: action.payload.coins,\n        streak: action.payload.streak,\n        level: action.payload.level,\n        experience: action.payload.experience\n      };\n\n    // Chat and messaging actions\n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    case 'SET_MESSAGES':\n      return {\n        ...state,\n        messages: action.payload\n      };\n    case 'START_TYPING':\n      return {\n        ...state,\n        isTyping: true,\n        typingText: ''\n      };\n    case 'UPDATE_TYPING':\n      return {\n        ...state,\n        typingText: action.payload\n      };\n    case 'STOP_TYPING':\n      return {\n        ...state,\n        isTyping: false,\n        typingText: ''\n      };\n    case 'SET_CURRENT_SESSION':\n      return {\n        ...state,\n        currentSession: action.payload\n      };\n\n    // UI and navigation actions\n    case 'SET_ACTIVE_TAB':\n      return {\n        ...state,\n        activeTab: action.payload\n      };\n    case 'TOGGLE_SIDEBAR':\n      return {\n        ...state,\n        sidebarCollapsed: !state.sidebarCollapsed\n      };\n    case 'OPEN_MODAL':\n      return {\n        ...state,\n        modalOpen: action.payload\n      };\n    case 'CLOSE_MODAL':\n      return {\n        ...state,\n        modalOpen: null\n      };\n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.payload\n      };\n\n    // Community and social actions\n    case 'SET_COMMUNITY_POSTS':\n      return {\n        ...state,\n        communityPosts: action.payload\n      };\n    case 'ADD_COMMUNITY_POST':\n      return {\n        ...state,\n        communityPosts: [action.payload, ...state.communityPosts]\n      };\n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications.slice(0, 9)]\n      };\n    case 'REMOVE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification => notification.id !== action.payload)\n      };\n\n    // Mood and analytics actions\n    case 'SET_CURRENT_MOOD':\n      return {\n        ...state,\n        currentMood: action.payload\n      };\n    case 'SET_MOOD_HISTORY':\n      return {\n        ...state,\n        moodHistory: action.payload\n      };\n    case 'SET_ANALYTICS':\n      return {\n        ...state,\n        analytics: action.payload\n      };\n\n    // Music and media actions\n    case 'SET_MUSIC_SUGGESTIONS':\n      return {\n        ...state,\n        musicSuggestions: action.payload\n      };\n    case 'SET_CURRENTLY_PLAYING':\n      return {\n        ...state,\n        currentlyPlaying: action.payload\n      };\n\n    // Game and challenge actions\n    case 'SET_ACTIVE_GAME':\n      return {\n        ...state,\n        activeGame: action.payload\n      };\n    case 'ADD_GAME_SCORE':\n      return {\n        ...state,\n        gameScores: [action.payload, ...state.gameScores.slice(0, 49)]\n      };\n    case 'SET_CHALLENGES':\n      return {\n        ...state,\n        challenges: action.payload\n      };\n\n    // Error handling and system actions\n    case 'ADD_ERROR':\n      return {\n        ...state,\n        errors: [action.payload, ...state.errors.slice(0, 4)]\n      };\n    case 'REMOVE_ERROR':\n      return {\n        ...state,\n        errors: state.errors.filter(error => error.id !== action.payload)\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_CONNECTION_STATUS':\n      return {\n        ...state,\n        connectionStatus: action.payload\n      };\n    default:\n      console.warn('Unknown action type:', action.type);\n      return state;\n  }\n}\n\n/**\r\n * ========================================================================\r\n * CUSTOM HOOKS FOR ADVANCED FUNCTIONALITY\r\n * ========================================================================\r\n */\n\n/**\r\n * Main application context provider hook\r\n * Provides global state and dispatch functions to all components\r\n */\nfunction useAppState() {\n  _s();\n  const context = useContext(AppContext);\n  if (!context) {\n    throw new Error('useAppState must be used within AppStateProvider');\n  }\n  return context;\n}\n\n/**\r\n * API communication hook with error handling and retry logic\r\n * Centralized HTTP client with authentication and error management\r\n */\n_s(useAppState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction useAPI() {\n  _s2();\n  const {\n    dispatch\n  } = useAppState();\n  const apiCall = useCallback(async (endpoint, options = {}) => {\n    try {\n      // Set default options with authentication\n      const defaultOptions = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include',\n        // Include cookies for session auth\n        ...options\n      };\n\n      // Make API request\n      const response = await fetch(`http://127.0.0.1:5000/api${endpoint}`, defaultOptions);\n\n      // Handle HTTP errors\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({}));\n        throw new Error(errorData.message || `HTTP ${response.status} ${response.statusText}`);\n      }\n\n      // Parse response data\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      // Add error to global state for user feedback\n      dispatch({\n        type: 'ADD_ERROR',\n        payload: {\n          id: Date.now(),\n          message: error.message,\n          type: 'api_error',\n          timestamp: new Date().toISOString()\n        }\n      });\n\n      // Re-throw error for component handling\n      throw error;\n    }\n  }, [dispatch]);\n  return {\n    apiCall\n  };\n}\n\n/**\r\n * Real-time typing animation hook\r\n * Creates typewriter effect for AI responses with customizable speed\r\n */\n_s2(useAPI, \"3stFnc26Ze8Rllse42mWncSC4hU=\", false, function () {\n  return [useAppState];\n});\nfunction useTypingAnimation(text, speed = 50, startDelay = 200) {\n  _s3();\n  const [displayedText, setDisplayedText] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const timeoutRef = useRef(null);\n  const indexRef = useRef(0);\n  useEffect(() => {\n    if (!text) {\n      setDisplayedText('');\n      setIsTyping(false);\n      return;\n    }\n\n    // Reset animation state\n    setDisplayedText('');\n    setIsTyping(true);\n    indexRef.current = 0;\n\n    // Start typing after delay\n    const startTyping = () => {\n      const typeNextChar = () => {\n        if (indexRef.current < text.length) {\n          setDisplayedText(text.slice(0, indexRef.current + 1));\n          indexRef.current++;\n          timeoutRef.current = setTimeout(typeNextChar, speed);\n        } else {\n          setIsTyping(false);\n        }\n      };\n      timeoutRef.current = setTimeout(typeNextChar, startDelay);\n    };\n    startTyping();\n\n    // Cleanup timeout on unmount or text change\n    return () => {\n      if (timeoutRef.current) {\n        clearTimeout(timeoutRef.current);\n      }\n    };\n  }, [text, speed, startDelay]);\n  return {\n    displayedText,\n    isTyping\n  };\n}\n\n/**\r\n * Auto-scroll hook for chat messages\r\n * Automatically scrolls to bottom when new messages arrive\r\n */\n_s3(useTypingAnimation, \"aOF0cHMFb7lnwlRmlBR42rXPTvk=\");\nfunction useAutoScroll(dependency, behavior = 'smooth') {\n  _s4();\n  const scrollRef = useRef(null);\n  useEffect(() => {\n    if (scrollRef.current) {\n      scrollRef.current.scrollTo({\n        top: scrollRef.current.scrollHeight,\n        behavior: behavior\n      });\n    }\n  }, [dependency, behavior]);\n  return scrollRef;\n}\n\n/**\r\n * Local storage hook with JSON serialization\r\n * Persists state to localStorage with automatic serialization\r\n */\n_s4(useAutoScroll, \"P14GFulhWAl/Oec4Pk4QeBwKyr0=\");\nfunction useLocalStorage(key, defaultValue) {\n  _s5();\n  const [value, setValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : defaultValue;\n    } catch (error) {\n      console.warn(`Error reading localStorage key \"${key}\":`, error);\n      return defaultValue;\n    }\n  });\n  const setStoredValue = useCallback(newValue => {\n    try {\n      setValue(newValue);\n      window.localStorage.setItem(key, JSON.stringify(newValue));\n    } catch (error) {\n      console.warn(`Error setting localStorage key \"${key}\":`, error);\n    }\n  }, [key]);\n  return [value, setStoredValue];\n}\n\n/**\r\n * Mood detection hook with sentiment analysis\r\n * Analyzes text input to detect mood and emotional state\r\n */\n_s5(useLocalStorage, \"6ABfogmAHUWRoNMBr9pS5KsOiRE=\");\nfunction useMoodDetection() {\n  _s6();\n  const detectMood = useCallback(text => {\n    if (!text) return {\n      mood: 'neutral',\n      confidence: 0,\n      keywords: []\n    };\n    const moodPatterns = {\n      happy: ['happy', 'joy', 'excited', 'great', 'awesome', 'amazing', 'wonderful', 'fantastic', 'love', 'khushi', 'mazaa', 'badhiya'],\n      sad: ['sad', 'depressed', 'down', 'upset', 'crying', 'tears', 'lonely', 'dukhi', 'pareshaan', 'udaas'],\n      anxious: ['anxious', 'worried', 'nervous', 'scared', 'panic', 'stress', 'tension', 'fear', 'pareshani', 'dar'],\n      angry: ['angry', 'mad', 'furious', 'irritated', 'annoyed', 'rage', 'hate', 'gussa', 'naraz'],\n      excited: ['excited', 'thrilled', 'pumped', 'energetic', 'motivated', 'enthusiastic', 'josh'],\n      calm: ['calm', 'peaceful', 'relaxed', 'serene', 'tranquil', 'zen', 'shanti', 'sukoon']\n    };\n    const textLower = text.toLowerCase();\n    const words = textLower.split(/\\s+/);\n    const moodScores = {};\n    const foundKeywords = [];\n\n    // Calculate mood scores based on keyword matches\n    Object.entries(moodPatterns).forEach(([mood, keywords]) => {\n      let score = 0;\n      keywords.forEach(keyword => {\n        const count = (textLower.match(new RegExp(`\\\\b${keyword}\\\\b`, 'g')) || []).length;\n        if (count > 0) {\n          score += count;\n          foundKeywords.push(keyword);\n        }\n      });\n      moodScores[mood] = score;\n    });\n\n    // Find dominant mood\n    const totalMatches = Object.values(moodScores).reduce((sum, score) => sum + score, 0);\n    if (totalMatches === 0) {\n      return {\n        mood: 'neutral',\n        confidence: 0,\n        keywords: []\n      };\n    }\n    const dominantMood = Object.entries(moodScores).reduce((a, b) => moodScores[a[0]] > moodScores[b[0]] ? a : b)[0];\n    const confidence = Math.min(moodScores[dominantMood] / words.length * 10, 1);\n    return {\n      mood: dominantMood,\n      confidence: Math.round(confidence * 100) / 100,\n      keywords: foundKeywords.slice(0, 5),\n      allScores: moodScores\n    };\n  }, []);\n  return {\n    detectMood\n  };\n}\n\n/**\r\n * ========================================================================\r\n * AUTHENTICATION COMPONENTS\r\n * ========================================================================\r\n */\n\n/**\r\n * Login Form Component\r\n * Handles user authentication with validation and error handling\r\n */\n_s6(useMoodDetection, \"BaUgiA62f0cNlJmdPC+LxqtnErA=\");\nconst LoginForm = /*#__PURE__*/_s7(/*#__PURE__*/memo(_c = _s7(({\n  onSuccess,\n  onSwitchToRegister\n}) => {\n  _s7();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const {\n    apiCall\n  } = useAPI();\n\n  // Handle input changes with real-time validation\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n\n    // Clear field-specific errors on change\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  }, [errors]);\n\n  // Form validation logic\n  const validateForm = useCallback(() => {\n    const newErrors = {};\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.length < 3) {\n      newErrors.username = 'Username must be at least 3 characters';\n    }\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData]);\n\n  // Handle form submission with API call\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await apiCall('/auth/login', {\n        method: 'POST',\n        body: JSON.stringify(formData)\n      });\n      if (response.success) {\n        onSuccess(response.data);\n      } else {\n        setErrors({\n          submit: response.message || 'Login failed'\n        });\n      }\n    } catch (error) {\n      setErrors({\n        submit: error.message || 'Login failed. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [formData, validateForm, apiCall, onSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Welcome Back to MoodMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Sign in to continue your mental wellness journey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          className: \"form-label\",\n          children: \"Username or Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          name: \"username\",\n          value: formData.username,\n          onChange: handleInputChange,\n          className: `form-input ${errors.username ? 'error' : ''}`,\n          placeholder: \"Enter your username or email\",\n          disabled: isLoading,\n          autoComplete: \"username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 21\n        }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          className: `form-input ${errors.password ? 'error' : ''}`,\n          placeholder: \"Enter your password\",\n          disabled: isLoading,\n          autoComplete: \"current-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 21\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 17\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error-message\",\n        children: errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-auth\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 702,\n            columnNumber: 29\n          }, this), \"Signing in...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 25\n        }, this) : 'Sign In'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSwitchToRegister,\n            className: \"auth-switch-link\",\n            children: \"Create one here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 642,\n    columnNumber: 9\n  }, this);\n}, \"ZwvXAomztPTfwDQvutuad6GpWog=\", false, function () {\n  return [useAPI];\n})), \"ZwvXAomztPTfwDQvutuad6GpWog=\", false, function () {\n  return [useAPI];\n});\n\n/**\r\n * Registration Form Component\r\n * Handles new user account creation with comprehensive validation\r\n */\n_c2 = LoginForm;\nconst RegisterForm = /*#__PURE__*/_s8(/*#__PURE__*/memo(_c3 = _s8(({\n  onSuccess,\n  onSwitchToLogin\n}) => {\n  _s8();\n  const [formData, setFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n    confirmPassword: '',\n    displayName: '',\n    acceptTerms: false\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n  const [passwordStrength, setPasswordStrength] = useState(0);\n  const {\n    apiCall\n  } = useAPI();\n\n  // Password strength calculation\n  const calculatePasswordStrength = useCallback(password => {\n    let strength = 0;\n    if (password.length >= 8) strength += 1;\n    if (/[A-Z]/.test(password)) strength += 1;\n    if (/[a-z]/.test(password)) strength += 1;\n    if (/[0-9]/.test(password)) strength += 1;\n    if (/[^A-Za-z0-9]/.test(password)) strength += 1;\n    return strength;\n  }, []);\n\n  // Handle input changes with real-time validation\n  const handleInputChange = useCallback(e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setFormData(prev => ({\n      ...prev,\n      [name]: newValue\n    }));\n\n    // Real-time password strength calculation\n    if (name === 'password') {\n      setPasswordStrength(calculatePasswordStrength(value));\n    }\n\n    // Clear field-specific errors on change\n    if (errors[name]) {\n      setErrors(prev => ({\n        ...prev,\n        [name]: ''\n      }));\n    }\n  }, [errors, calculatePasswordStrength]);\n\n  // Comprehensive form validation\n  const validateForm = useCallback(() => {\n    const newErrors = {};\n\n    // Username validation\n    if (!formData.username.trim()) {\n      newErrors.username = 'Username is required';\n    } else if (formData.username.length < 3) {\n      newErrors.username = 'Username must be at least 3 characters';\n    } else if (!/^[a-zA-Z0-9_]+$/.test(formData.username)) {\n      newErrors.username = 'Username can only contain letters, numbers, and underscores';\n    }\n\n    // Email validation\n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email address';\n    }\n\n    // Display name validation\n    if (!formData.displayName.trim()) {\n      newErrors.displayName = 'Display name is required';\n    } else if (formData.displayName.length < 2) {\n      newErrors.displayName = 'Display name must be at least 2 characters';\n    }\n\n    // Password validation\n    if (!formData.password) {\n      newErrors.password = 'Password is required';\n    } else if (formData.password.length < 6) {\n      newErrors.password = 'Password must be at least 6 characters';\n    }\n\n    // Confirm password validation\n    if (!formData.confirmPassword) {\n      newErrors.confirmPassword = 'Please confirm your password';\n    } else if (formData.password !== formData.confirmPassword) {\n      newErrors.confirmPassword = 'Passwords do not match';\n    }\n\n    // Terms acceptance validation\n    if (!formData.acceptTerms) {\n      newErrors.acceptTerms = 'You must accept the terms and conditions';\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await apiCall('/auth/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          username: formData.username,\n          email: formData.email,\n          password: formData.password,\n          display_name: formData.displayName\n        })\n      });\n      if (response.success) {\n        onSuccess(response.data);\n      } else {\n        setErrors({\n          submit: response.message || 'Registration failed'\n        });\n      }\n    } catch (error) {\n      setErrors({\n        submit: error.message || 'Registration failed. Please try again.'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [formData, validateForm, apiCall, onSuccess]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form register-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"auth-title\",\n        children: \"Join MoodMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Start your journey to better mental wellness\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 861,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 859,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"auth-form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"displayName\",\n            className: \"form-label\",\n            children: \"Display Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"displayName\",\n            name: \"displayName\",\n            value: formData.displayName,\n            onChange: handleInputChange,\n            className: `form-input ${errors.displayName ? 'error' : ''}`,\n            placeholder: \"Your display name\",\n            disabled: isLoading,\n            autoComplete: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 25\n          }, this), errors.displayName && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-error\",\n            children: errors.displayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            className: \"form-label\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            value: formData.username,\n            onChange: handleInputChange,\n            className: `form-input ${errors.username ? 'error' : ''}`,\n            placeholder: \"Choose a username\",\n            disabled: isLoading,\n            autoComplete: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 25\n          }, this), errors.username && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"form-error\",\n            children: errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 865,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"Email Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleInputChange,\n          className: `form-input ${errors.email ? 'error' : ''}`,\n          placeholder: \"your.email@example.com\",\n          disabled: isLoading,\n          autoComplete: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 21\n        }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 928,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleInputChange,\n          className: `form-input ${errors.password ? 'error' : ''}`,\n          placeholder: \"Create a secure password\",\n          disabled: isLoading,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 931,\n          columnNumber: 21\n        }, this), formData.password && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-strength\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"password-strength-bar\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `password-strength-fill strength-${passwordStrength}`,\n              style: {\n                width: `${passwordStrength / 5 * 100}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 945,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"password-strength-text\",\n            children: passwordStrength <= 2 ? 'Weak' : passwordStrength <= 3 ? 'Medium' : 'Strong'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 950,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 25\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 956,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          className: \"form-label\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"confirmPassword\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleInputChange,\n          className: `form-input ${errors.confirmPassword ? 'error' : ''}`,\n          placeholder: \"Confirm your password\",\n          disabled: isLoading,\n          autoComplete: \"new-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 964,\n          columnNumber: 21\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group checkbox-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"checkbox-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"acceptTerms\",\n            checked: formData.acceptTerms,\n            onChange: handleInputChange,\n            className: \"checkbox-input\",\n            disabled: isLoading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkbox-custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 990,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"checkbox-text\",\n            children: [\"I agree to the\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#terms\",\n              className: \"link\",\n              children: \"Terms of Service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 993,\n              columnNumber: 29\n            }, this), ' ', \"and\", ' ', /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#privacy\",\n              className: \"link\",\n              children: \"Privacy Policy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 995,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 981,\n          columnNumber: 21\n        }, this), errors.acceptTerms && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"form-error\",\n          children: errors.acceptTerms\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 999,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 17\n      }, this), errors.submit && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-error-message\",\n        children: errors.submit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1004,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-auth\",\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"btn-loading\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1016,\n            columnNumber: 29\n          }, this), \"Creating Account...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1015,\n          columnNumber: 25\n        }, this) : 'Create Account'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-switch\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onSwitchToLogin,\n            className: \"auth-switch-link\",\n            children: \"Sign in here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1027,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1025,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 864,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 858,\n    columnNumber: 9\n  }, this);\n}, \"19A+Bc3WALnKOuIO5C8ZDgfkaqQ=\", false, function () {\n  return [useAPI];\n})), \"19A+Bc3WALnKOuIO5C8ZDgfkaqQ=\", false, function () {\n  return [useAPI];\n});\n\n/**\r\n * ========================================================================\r\n * CHAT AND MESSAGING COMPONENTS\r\n * ========================================================================\r\n */\n\n/**\r\n * Typing Animation Component\r\n * Displays animated typing indicator for AI responses\r\n */\n_c4 = RegisterForm;\nconst TypingIndicator = /*#__PURE__*/memo(_c5 = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing-indicator\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-dot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1054,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"typing-text\",\n      children: \"MoodMate is typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1059,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1053,\n    columnNumber: 9\n  }, this);\n});\n\n/**\r\n * Message Component\r\n * Displays individual chat messages with rich formatting and interactions\r\n */\n_c6 = TypingIndicator;\nconst ChatMessage = /*#__PURE__*/_s9(/*#__PURE__*/memo(_c7 = _s9(({\n  message,\n  isOwn,\n  showAvatar = true,\n  onReaction,\n  onMusicSuggestion\n}) => {\n  var _message$challenge_da;\n  _s9();\n  const [showActions, setShowActions] = useState(false);\n  const [reactionPicker, setReactionPicker] = useState(false);\n  const {\n    displayedText,\n    isTyping\n  } = useTypingAnimation(!isOwn ? message.content || '' : '', 50, 200);\n\n  // Available reaction emojis\n  const reactions = ['👍', '❤️', '😊', '🤗', '🙏', '✨'];\n\n  // Handle reaction selection\n  const handleReaction = useCallback(emoji => {\n    onReaction === null || onReaction === void 0 ? void 0 : onReaction(message.id, emoji);\n    setReactionPicker(false);\n  }, [message.id, onReaction]);\n\n  // Handle music suggestion click\n  const handleMusicClick = useCallback(suggestion => {\n    onMusicSuggestion === null || onMusicSuggestion === void 0 ? void 0 : onMusicSuggestion(suggestion);\n  }, [onMusicSuggestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-message ${isOwn ? 'own' : 'other'}`,\n    onMouseEnter: () => setShowActions(true),\n    onMouseLeave: () => setShowActions(false),\n    children: [showAvatar && !isOwn && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-avatar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar mood-avatar\",\n        children: \"\\uD83E\\uDD16\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1098,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-bubble ${isOwn ? 'own' : 'other'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-text\",\n          children: [isOwn ? message.content || '' : isTyping ? displayedText : message.content || '', !isOwn && isTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"typing-cursor\",\n            children: \"|\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 21\n        }, this), message.music_suggestions && message.music_suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-music-suggestions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"music-icon\",\n              children: \"\\uD83C\\uDFB5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"music-title\",\n              children: \"Music for your mood:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-list\",\n            children: message.music_suggestions.map((suggestion, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"music-suggestion\",\n              onClick: () => handleMusicClick(suggestion),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-platform\",\n                children: suggestion.platform === 'spotify' ? '🎵' : suggestion.platform === 'youtube' ? '📺' : '🎧'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"music-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"music-name\",\n                  children: suggestion.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1132,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"music-type\",\n                  children: suggestion.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1133,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1131,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1122,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1120,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1115,\n          columnNumber: 25\n        }, this), ((_message$challenge_da = message.challenge_data) === null || _message$challenge_da === void 0 ? void 0 : _message$challenge_da.challenges) && message.challenge_data.challenges.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-challenges\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenges-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"challenge-icon\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"challenge-title\",\n              children: \"Try these activities:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenges-list\",\n            children: message.challenge_data.challenges.map((challenge, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"challenge-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-name\",\n                children: challenge.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1151,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-description\",\n                children: challenge.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1152,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"challenge-reward\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"coin-icon\",\n                  children: \"\\uD83E\\uDE99\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1154,\n                  columnNumber: 45\n                }, this), challenge.coins_reward, \" coins\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 41\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1150,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1148,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1143,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-time\",\n          children: new Date(message.timestamp).toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1164,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 17\n      }, this), showActions && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"message-action\",\n          onClick: () => setReactionPicker(!reactionPicker),\n          title: \"Add reaction\",\n          children: \"\\uD83D\\uDE0A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1175,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"message-action\",\n          onClick: () => navigator.clipboard.writeText(message.content),\n          title: \"Copy message\",\n          children: \"\\uD83D\\uDCCB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1182,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 21\n      }, this), reactionPicker && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reaction-picker\",\n        children: reactions.map(emoji => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reaction-option\",\n          onClick: () => handleReaction(emoji),\n          children: emoji\n        }, emoji, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1194,\n        columnNumber: 21\n      }, this), message.user_reactions && message.user_reactions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-reactions\",\n        children: message.user_reactions.map((reaction, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"reaction-badge\",\n          children: reaction.reaction\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1211,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1209,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1092,\n    columnNumber: 9\n  }, this);\n}, \"NMTbNDuxLE/PaZ4MJzqQ+rAAeXU=\", false, function () {\n  return [useTypingAnimation];\n})), \"NMTbNDuxLE/PaZ4MJzqQ+rAAeXU=\", false, function () {\n  return [useTypingAnimation];\n});\n\n/**\r\n * Chat Input Component\r\n * Advanced message input with mood detection and suggestions\r\n */\n_c8 = ChatMessage;\nconst ChatInput = /*#__PURE__*/_s1(/*#__PURE__*/memo(_c9 = _s1(({\n  onSendMessage,\n  isLoading,\n  placeholder = \"Share what's on your mind...\"\n}) => {\n  _s1();\n  const [message, setMessage] = useState('');\n  const [detectedMood, setDetectedMood] = useState(null);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const {\n    detectMood\n  } = useMoodDetection();\n  const textareaRef = useRef(null);\n\n  // Mood-based message suggestions\n  const moodSuggestions = {\n    happy: [\"I'm feeling really good today!\", \"Something amazing happened!\", \"I'm grateful for...\"],\n    sad: [\"I'm having a tough day...\", \"I could use some encouragement\", \"I'm feeling down about...\"],\n    anxious: [\"I'm feeling worried about...\", \"My anxiety is acting up\", \"I need help calming down\"],\n    excited: [\"I'm so excited about...\", \"I can't wait to...\", \"This is amazing!\"]\n  };\n\n  // Handle message change with mood detection\n  const handleMessageChange = useCallback(e => {\n    const newMessage = e.target.value;\n    setMessage(newMessage);\n\n    // Auto-resize textarea\n    if (textareaRef.current) {\n      textareaRef.current.style.height = 'auto';\n      textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\n    }\n\n    // Detect mood if message is substantial\n    if (newMessage.trim().length > 10) {\n      const mood = detectMood(newMessage);\n      if (mood.confidence > 0.3) {\n        setDetectedMood(mood);\n        setShowSuggestions(false);\n      } else {\n        setDetectedMood(null);\n      }\n    } else {\n      setDetectedMood(null);\n    }\n  }, [detectMood]);\n\n  // Handle form submission\n  const handleSubmit = useCallback(e => {\n    e.preventDefault();\n    if (message.trim() && !isLoading) {\n      onSendMessage(message.trim(), detectedMood);\n      setMessage('');\n      setDetectedMood(null);\n      setShowSuggestions(false);\n\n      // Reset textarea height\n      if (textareaRef.current) {\n        textareaRef.current.style.height = 'auto';\n      }\n    }\n  }, [message, detectedMood, isLoading, onSendMessage]);\n\n  // Handle key press for shortcuts\n  const handleKeyPress = useCallback(e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    } else if (e.key === 'Tab' && showSuggestions) {\n      e.preventDefault();\n      // Could implement suggestion cycling here\n    }\n  }, [handleSubmit, showSuggestions]);\n\n  // Use suggested message\n  const useSuggestion = useCallback(suggestion => {\n    var _textareaRef$current;\n    setMessage(suggestion);\n    setShowSuggestions(false);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-input-container\",\n    children: [detectedMood && detectedMood.confidence > 0.3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mood-emoji\",\n        children: detectedMood.mood === 'happy' ? '😊' : detectedMood.mood === 'sad' ? '😢' : detectedMood.mood === 'anxious' ? '😰' : detectedMood.mood === 'excited' ? '🤩' : detectedMood.mood === 'angry' ? '😠' : '😊'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1322,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"mood-text\",\n        children: [\"Detected mood: \", detectedMood.mood]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1329,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"suggestions-toggle\",\n        onClick: () => setShowSuggestions(!showSuggestions),\n        children: \"\\uD83D\\uDCA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1321,\n      columnNumber: 17\n    }, this), showSuggestions && detectedMood && moodSuggestions[detectedMood.mood] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-suggestions\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"suggestions-header\",\n        children: \"Suggested messages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 21\n      }, this), moodSuggestions[detectedMood.mood].map((suggestion, index) => {\n        var _s0 = $RefreshSig$();\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"suggestion-item\",\n          onClick: _s0(() => {\n            _s0();\n            return useSuggestion(suggestion);\n          }, \"Tm3IhIaFQeTaErUPTEGljA7SgqU=\", false, function () {\n            return [useSuggestion];\n          }),\n          children: suggestion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1346,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1343,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"chat-input-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: message,\n          onChange: handleMessageChange,\n          onKeyPress: handleKeyPress,\n          placeholder: placeholder,\n          className: \"chat-textarea\",\n          disabled: isLoading,\n          rows: 1,\n          maxLength: 2000\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char-counter\",\n          children: [message.length, \"/2000\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1373,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: !message.trim() || isLoading,\n          title: \"Send message (Enter)\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loading-spinner small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1385,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"send-icon\",\n            children: \"\\u27A4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1387,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1378,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1359,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-hints\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Press Enter to send, Shift+Enter for new line\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1394,\n          columnNumber: 21\n        }, this), detectedMood && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-hint\",\n          children: \"\\uD83D\\uDCA1 Click the bulb for mood-based suggestions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1396,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1393,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1358,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1318,\n    columnNumber: 9\n  }, this);\n}, \"j9liDQR2MTkBGvC8eX7TPUJxk6A=\", false, function () {\n  return [useMoodDetection];\n})), \"j9liDQR2MTkBGvC8eX7TPUJxk6A=\", false, function () {\n  return [useMoodDetection];\n});\n\n/**\r\n * Main Chat Interface Component\r\n * Central chat component managing conversation flow and AI interactions\r\n */\n_c0 = ChatInput;\nconst ChatInterface = /*#__PURE__*/_s10(/*#__PURE__*/memo(_c1 = _s10(() => {\n  var _state$user;\n  _s10();\n  const {\n    state,\n    dispatch\n  } = useAppState();\n  const {\n    apiCall\n  } = useAPI();\n  const [isLoading, setIsLoading] = useState(false);\n  const [crisisDetected, setCrisisDetected] = useState(null);\n  const messagesEndRef = useAutoScroll(state.messages);\n\n  // Load chat history on component mount\n  useEffect(() => {\n    loadChatHistory();\n  }, []);\n\n  // Load chat history from API\n  const loadChatHistory = useCallback(async () => {\n    try {\n      const response = await apiCall('/chat/sessions');\n      if (response.success && response.data.sessions.length > 0) {\n        const latestSession = response.data.sessions[0];\n        dispatch({\n          type: 'SET_CURRENT_SESSION',\n          payload: latestSession\n        });\n\n        // Load messages for latest session\n        const messagesResponse = await apiCall(`/chat/sessions/${latestSession.id}/messages`);\n        if (messagesResponse.success) {\n          dispatch({\n            type: 'SET_MESSAGES',\n            payload: messagesResponse.data.messages\n          });\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load chat history:', error);\n    }\n  }, [apiCall, dispatch]);\n\n  // Send message to AI with comprehensive processing\n  const handleSendMessage = useCallback(async (messageContent, detectedMood = null) => {\n    var _state$currentSession;\n    if (!messageContent.trim()) return;\n\n    // Add user message to state immediately for responsive UI\n    const userMessage = {\n      id: Date.now(),\n      session_id: (_state$currentSession = state.currentSession) === null || _state$currentSession === void 0 ? void 0 : _state$currentSession.id,\n      message_type: 'user',\n      content: messageContent,\n      timestamp: new Date().toISOString(),\n      detected_mood: detectedMood\n    };\n    dispatch({\n      type: 'ADD_MESSAGE',\n      payload: userMessage\n    });\n    dispatch({\n      type: 'START_TYPING'\n    });\n    setIsLoading(true);\n    try {\n      var _state$currentSession2;\n      // Send message to backend\n      const response = await apiCall('/chat/send', {\n        method: 'POST',\n        body: JSON.stringify({\n          message: messageContent,\n          session_id: (_state$currentSession2 = state.currentSession) === null || _state$currentSession2 === void 0 ? void 0 : _state$currentSession2.id,\n          mood_context: detectedMood === null || detectedMood === void 0 ? void 0 : detectedMood.mood\n        })\n      });\n      if (response.success) {\n        var _response$data$mood_a, _response$data$music_;\n        // Update session if new\n        if (!state.currentSession) {\n          dispatch({\n            type: 'SET_CURRENT_SESSION',\n            payload: {\n              id: response.data.session_id\n            }\n          });\n        }\n\n        // Add AI response with typing animation\n        dispatch({\n          type: 'ADD_MESSAGE',\n          payload: response.data.ai_response\n        });\n\n        // Handle crisis detection\n        if (response.data.crisis_detected) {\n          setCrisisDetected({\n            message: response.data.ai_response.content,\n            resources: response.data.crisis_resources || []\n          });\n        }\n\n        // Update user stats if provided\n        if (response.data.engagement_reward) {\n          var _reward$level_up;\n          const reward = response.data.engagement_reward;\n          dispatch({\n            type: 'UPDATE_USER_STATS',\n            payload: {\n              coins: state.coins + (reward.coins_awarded || 0),\n              streak: state.streak,\n              level: ((_reward$level_up = reward.level_up) === null || _reward$level_up === void 0 ? void 0 : _reward$level_up.new_level) || state.level,\n              experience: state.experience + (reward.xp_awarded || 0)\n            }\n          });\n\n          // Show level up notification\n          if (reward.level_up) {\n            dispatch({\n              type: 'ADD_NOTIFICATION',\n              payload: {\n                id: Date.now(),\n                type: 'level_up',\n                title: 'Level Up!',\n                message: `Congratulations! You reached level ${reward.level_up.new_level}!`,\n                timestamp: new Date().toISOString()\n              }\n            });\n          }\n        }\n\n        // Update current mood if detected\n        if ((_response$data$mood_a = response.data.mood_analysis) !== null && _response$data$mood_a !== void 0 && _response$data$mood_a.mood) {\n          dispatch({\n            type: 'SET_CURRENT_MOOD',\n            payload: response.data.mood_analysis.mood\n          });\n        }\n\n        // Set music suggestions if provided\n        if (((_response$data$music_ = response.data.music_suggestions) === null || _response$data$music_ === void 0 ? void 0 : _response$data$music_.length) > 0) {\n          dispatch({\n            type: 'SET_MUSIC_SUGGESTIONS',\n            payload: response.data.music_suggestions\n          });\n        }\n      } else {\n        // Handle API error\n        dispatch({\n          type: 'ADD_MESSAGE',\n          payload: {\n            id: Date.now(),\n            message_type: 'system',\n            content: 'Sorry, I encountered an error processing your message. Please try again.',\n            timestamp: new Date().toISOString(),\n            isError: true\n          }\n        });\n      }\n    } catch (error) {\n      // Handle network or other errors\n      dispatch({\n        type: 'ADD_MESSAGE',\n        payload: {\n          id: Date.now(),\n          message_type: 'system',\n          timestamp: new Date().toISOString(),\n          isError: true\n        }\n      });\n    } finally {\n      dispatch({\n        type: 'STOP_TYPING'\n      });\n      setIsLoading(false);\n    }\n  }, [state.currentSession, state.coins, state.streak, state.level, state.experience, apiCall, dispatch]);\n\n  // Handle message reactions\n  const handleMessageReaction = useCallback((messageId, reaction) => {\n    // Update message in local state\n    dispatch({\n      type: 'SET_MESSAGES',\n      payload: state.messages.map(msg => msg.id === messageId ? {\n        ...msg,\n        user_reactions: [...(msg.user_reactions || []), {\n          reaction,\n          timestamp: new Date().toISOString()\n        }]\n      } : msg)\n    });\n\n    // Could send to backend for persistence\n    // apiCall(`/chat/messages/${messageId}/react`, { method: 'POST', body: JSON.stringify({ reaction }) });\n  }, [state.messages, dispatch]);\n\n  // Handle music suggestion clicks\n  const handleMusicSuggestion = useCallback(suggestion => {\n    // Open music platform based on suggestion\n    let url = '';\n    switch (suggestion.platform) {\n      case 'spotify':\n        url = `https://open.spotify.com/search/${encodeURIComponent(suggestion.title)}`;\n        break;\n      case 'youtube':\n        url = `https://www.youtube.com/results?search_query=${encodeURIComponent(suggestion.title)}`;\n        break;\n      default:\n        url = `https://www.google.com/search?q=${encodeURIComponent(suggestion.title + ' music')}`;\n    }\n    window.open(url, '_blank');\n\n    // Track music suggestion usage\n    dispatch({\n      type: 'SET_CURRENTLY_PLAYING',\n      payload: suggestion\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83D\\uDCAC Chat with MoodMate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1617,\n          columnNumber: 21\n        }, this), state.currentSession && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"session-info\",\n          children: [\"Session: \", state.currentSession.session_name || 'Current Chat']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1619,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1616,\n        columnNumber: 17\n      }, this), state.currentMood && state.currentMood !== 'neutral' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-mood-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mood-label\",\n          children: \"Current mood:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1628,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `mood-badge mood-${state.currentMood}`,\n          children: state.currentMood\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1629,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1627,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1615,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      ref: messagesEndRef,\n      children: [state.messages.length === 0 ?\n      /*#__PURE__*/\n      // Welcome message for new chats\n      _jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-avatar\",\n          children: \"\\uD83E\\uDD16\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1641,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-text\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Hi \", ((_state$user = state.user) === null || _state$user === void 0 ? void 0 : _state$user.display_name) || 'there', \"! \\uD83D\\uDC4B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I'm MoodMate, your AI mental health companion. I'm here to listen, support, and help you on your wellness journey.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1644,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"How are you feeling today? You can share in English, Hindi, or even mix both (Hinglish) - I understand all of them!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1648,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1642,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1640,\n        columnNumber: 21\n      }, this) :\n      // Render all messages\n      state.messages.map((message, index) => {\n        var _state$messages;\n        return /*#__PURE__*/_jsxDEV(ChatMessage, {\n          message: message,\n          isOwn: message.message_type === 'user',\n          showAvatar: index === 0 || ((_state$messages = state.messages[index - 1]) === null || _state$messages === void 0 ? void 0 : _state$messages.message_type) !== message.message_type,\n          onReaction: handleMessageReaction,\n          onMusicSuggestion: handleMusicSuggestion\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1657,\n          columnNumber: 25\n        }, this);\n      }), state.isTyping && /*#__PURE__*/_jsxDEV(TypingIndicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1669,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1637,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      onSendMessage: handleSendMessage,\n      isLoading: isLoading,\n      placeholder: \"Share what's on your mind... \\u092E\\u0928 \\u0915\\u0940 \\u092C\\u093E\\u0924 \\u0915\\u0939\\u0947\\u0902...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1673,\n      columnNumber: 13\n    }, this), crisisDetected && /*#__PURE__*/_jsxDEV(CrisisModal, {\n      isOpen: true,\n      onClose: () => setCrisisDetected(null),\n      message: crisisDetected.message,\n      resources: crisisDetected.resources\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1681,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1613,\n    columnNumber: 9\n  }, this);\n}, \"hBo6W2tAPTr1vqWiVNUOBtiuJjw=\", false, function () {\n  return [useAppState, useAPI, useAutoScroll];\n})), \"hBo6W2tAPTr1vqWiVNUOBtiuJjw=\", false, function () {\n  return [useAppState, useAPI, useAutoScroll];\n});\n\n/**\r\n * ========================================================================\r\n * ADDITIONAL COMPONENTS CONTINUED...\r\n * [Due to length constraints, I'll provide the key remaining components]\r\n * ========================================================================\r\n */\n\n/**\r\n * Crisis Intervention Modal\r\n * Critical safety feature for mental health crisis situations\r\n */\n_c10 = ChatInterface;\nconst CrisisModal = /*#__PURE__*/memo(_c11 = ({\n  isOpen,\n  onClose,\n  message,\n  resources = []\n}) => {\n  if (!isOpen) return null;\n  return /*#__PURE__*/createPortal(/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay crisis-modal-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-content crisis-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crisis-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crisis-icon\",\n          children: \"\\uD83C\\uDD98\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"crisis-title\",\n          children: \"Immediate Support Available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1711,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1709,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crisis-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"crisis-message\",\n          children: \"I'm concerned about what you're going through. You don't have to face this alone. Your life has value and there are people who want to help you right now.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1715,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crisis-resources\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Get Help Now:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1721,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resource-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resource-item urgent\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDDFA\\uD83C\\uDDF8 Crisis Lifeline: 988\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1724,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Free, confidential support 24/7\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1725,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1723,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resource-item urgent\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83D\\uDCF1 Text HOME to 741741\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1728,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Crisis Text Line - immediate help\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1729,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1727,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"resource-item urgent\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"\\uD83C\\uDDEE\\uD83C\\uDDF3 AASRA: +91-22-27546669\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1732,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"India suicide prevention helpline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1733,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1731,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1722,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1720,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"crisis-emergency\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\u26A0\\uFE0F \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"If you're in immediate danger, please call emergency services (911/112) or go to your nearest emergency room.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1739,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1739,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1738,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"crisis-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary crisis-btn\",\n          onClick: onClose,\n          children: \"I understand - Continue conversation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1744,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1743,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1708,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1707,\n    columnNumber: 9\n  }, this), document.body);\n});\n\n/**\r\n * Main Application Component\r\n * Root component that manages authentication and app routing\r\n */\n_c12 = CrisisModal;\nconst App = () => {\n  _s11();\n  const [state, dispatch] = useReducer(appStateReducer, initialAppState);\n  const [authMode, setAuthMode] = useState('login'); // 'login' or 'register'\n\n  // Initialize app and check authentication\n  useEffect(() => {\n    initializeApp();\n  }, []);\n\n  // Initialize application with authentication check\n  const initializeApp = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/api/auth/profile', {\n        credentials: 'include'\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.success) {\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: data.data.profile\n            }\n          });\n        }\n      }\n    } catch (error) {\n      console.log('Not authenticated:', error);\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  };\n\n  // Handle successful authentication\n  const handleAuthSuccess = useCallback(authData => {\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: authData\n    });\n\n    // Show welcome notification\n    dispatch({\n      type: 'ADD_NOTIFICATION',\n      payload: {\n        id: Date.now(),\n        type: 'welcome',\n        title: 'Welcome to MoodMate!',\n        message: `Hi ${authData.user.display_name}! Ready to start your wellness journey?`,\n        timestamp: new Date().toISOString()\n      }\n    });\n  }, []);\n\n  // Handle logout\n  const handleLogout = useCallback(async () => {\n    try {\n      await fetch('http://127.0.0.1:5000/api/auth/logout', {\n        method: 'POST',\n        credentials: 'include'\n      });\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      dispatch({\n        type: 'LOGOUT'\n      });\n    }\n  }, []);\n\n  // Provide context to all components\n  const contextValue = useMemo(() => ({\n    state,\n    dispatch,\n    handleLogout\n  }), [state, handleLogout]);\n\n  // Show loading screen during initialization\n  if (state.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-logo\",\n          children: \"\\uD83E\\uDDE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1836,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"MoodMate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1837,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1838,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading your mental wellness companion...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1839,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1835,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1834,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AppContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${state.theme}`,\n      children: [!state.isAuthenticated ?\n      /*#__PURE__*/\n      // Authentication screens\n      _jsxDEV(\"div\", {\n        className: \"auth-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-background\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1851,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-content\",\n          children: authMode === 'login' ? /*#__PURE__*/_jsxDEV(LoginForm, {\n            onSuccess: handleAuthSuccess,\n            onSwitchToRegister: () => setAuthMode('register')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1854,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(RegisterForm, {\n            onSuccess: handleAuthSuccess,\n            onSwitchToLogin: () => setAuthMode('login')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1859,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1852,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1850,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // Main application interface\n      _jsxDEV(\"div\", {\n        className: \"app-main\",\n        children: [state.notifications.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notifications-container\",\n          children: state.notifications.slice(0, 3).map(notification => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `notification ${notification.type}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"notification-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-title\",\n                children: notification.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1875,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"notification-message\",\n                children: notification.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1876,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1874,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"notification-close\",\n              onClick: () => dispatch({\n                type: 'REMOVE_NOTIFICATION',\n                payload: notification.id\n              }),\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1878,\n              columnNumber: 41\n            }, this)]\n          }, notification.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1873,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1871,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(ChatInterface, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1893,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1868,\n        columnNumber: 21\n      }, this), state.errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-container\",\n        children: state.errors.slice(0, 2).map(error => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-notification\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1904,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"error-close\",\n            onClick: () => dispatch({\n              type: 'REMOVE_ERROR',\n              payload: error.id\n            }),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1905,\n            columnNumber: 33\n          }, this)]\n        }, error.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1903,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1901,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1847,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1846,\n    columnNumber: 9\n  }, this);\n};\n_s11(App, \"/ROOJfkigzBC8i6k8+0b9CeoEKQ=\");\n_c13 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13;\n$RefreshReg$(_c, \"LoginForm$memo\");\n$RefreshReg$(_c2, \"LoginForm\");\n$RefreshReg$(_c3, \"RegisterForm$memo\");\n$RefreshReg$(_c4, \"RegisterForm\");\n$RefreshReg$(_c5, \"TypingIndicator$memo\");\n$RefreshReg$(_c6, \"TypingIndicator\");\n$RefreshReg$(_c7, \"ChatMessage$memo\");\n$RefreshReg$(_c8, \"ChatMessage\");\n$RefreshReg$(_c9, \"ChatInput$memo\");\n$RefreshReg$(_c0, \"ChatInput\");\n$RefreshReg$(_c1, \"ChatInterface$memo\");\n$RefreshReg$(_c10, \"ChatInterface\");\n$RefreshReg$(_c11, \"CrisisModal$memo\");\n$RefreshReg$(_c12, \"CrisisModal\");\n$RefreshReg$(_c13, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useRef","useCallback","useMemo","createContext","useContext","Suspense","memo","createPortal","jsxDEV","_jsxDEV","AppContext","AuthContext","ChatContext","ThemeContext","initialAppState","user","isAuthenticated","isLoading","currentSession","messages","isTyping","typingText","activeTab","sidebarCollapsed","modalOpen","theme","coins","streak","level","experience","communityPosts","notifications","activeGame","gameScores","challenges","moodHistory","currentMood","analytics","musicSuggestions","currentlyPlaying","errors","systemStatus","connectionStatus","appStateReducer","state","action","type","payload","total_coins","current_streak","experience_points","slice","filter","notification","id","error","console","warn","useAppState","_s","context","Error","useAPI","_s2","dispatch","apiCall","endpoint","options","defaultOptions","method","headers","credentials","response","fetch","ok","errorData","json","catch","message","status","statusText","data","Date","now","timestamp","toISOString","useTypingAnimation","text","speed","startDelay","_s3","displayedText","setDisplayedText","setIsTyping","timeoutRef","indexRef","current","startTyping","typeNextChar","length","setTimeout","clearTimeout","useAutoScroll","dependency","behavior","_s4","scrollRef","scrollTo","top","scrollHeight","useLocalStorage","key","defaultValue","_s5","value","setValue","item","window","localStorage","getItem","JSON","parse","setStoredValue","newValue","setItem","stringify","useMoodDetection","_s6","detectMood","mood","confidence","keywords","moodPatterns","happy","sad","anxious","angry","excited","calm","textLower","toLowerCase","words","split","moodScores","foundKeywords","Object","entries","forEach","score","keyword","count","match","RegExp","push","totalMatches","values","reduce","sum","dominantMood","a","b","Math","min","round","allScores","LoginForm","_s7","_c","onSuccess","onSwitchToRegister","formData","setFormData","username","password","setIsLoading","setErrors","handleInputChange","e","name","target","prev","validateForm","newErrors","trim","keys","handleSubmit","preventDefault","body","success","submit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","onChange","placeholder","disabled","autoComplete","onClick","_c2","RegisterForm","_s8","_c3","onSwitchToLogin","email","confirmPassword","displayName","acceptTerms","passwordStrength","setPasswordStrength","calculatePasswordStrength","strength","test","checked","display_name","style","width","href","_c4","TypingIndicator","_c5","_c6","ChatMessage","_s9","_c7","isOwn","showAvatar","onReaction","onMusicSuggestion","_message$challenge_da","showActions","setShowActions","reactionPicker","setReactionPicker","content","reactions","handleReaction","emoji","handleMusicClick","suggestion","onMouseEnter","onMouseLeave","music_suggestions","map","index","platform","title","challenge_data","challenge","description","coins_reward","toLocaleTimeString","hour","minute","navigator","clipboard","writeText","user_reactions","reaction","_c8","ChatInput","_s1","_c9","onSendMessage","setMessage","detectedMood","setDetectedMood","showSuggestions","setShowSuggestions","textareaRef","moodSuggestions","handleMessageChange","newMessage","height","handleKeyPress","shiftKey","useSuggestion","_textareaRef$current","focus","_s0","$RefreshSig$","ref","onKeyPress","rows","maxLength","_c0","ChatInterface","_s10","_c1","_state$user","crisisDetected","setCrisisDetected","messagesEndRef","loadChatHistory","sessions","latestSession","messagesResponse","handleSendMessage","messageContent","_state$currentSession","userMessage","session_id","message_type","detected_mood","_state$currentSession2","mood_context","_response$data$mood_a","_response$data$music_","ai_response","crisis_detected","resources","crisis_resources","engagement_reward","_reward$level_up","reward","coins_awarded","level_up","new_level","xp_awarded","mood_analysis","isError","handleMessageReaction","messageId","msg","handleMusicSuggestion","url","encodeURIComponent","open","session_name","_state$messages","CrisisModal","isOpen","onClose","_c10","_c11","document","_c12","App","_s11","authMode","setAuthMode","initializeApp","profile","log","handleAuthSuccess","authData","handleLogout","contextValue","Provider","_c13","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["/**\r\n * MoodMate - Complete AI Mental Health Companion Frontend\r\n * =======================================================\r\n * \r\n * A comprehensive React frontend for MoodMate featuring:\r\n * - Gemini Ultra AI integration with natural conversations\r\n * - Advanced memory and chat history management\r\n * - Streak tracking with rewards and gamification\r\n * - Real-time typing animations for AI responses\r\n * - Glassmorphism modern UI with smooth animations\r\n * - Auto-scroll chat functionality\r\n * - Complete authentication system\r\n * - Anonymous community wall for peer support\r\n * - Music/YouTube/Spotify mood-based suggestions\r\n * - Dynamic theming based on user moods\r\n * - Mini healing games integration\r\n * - Full Hinglish conversation support\r\n * - Comprehensive mood tracking and analytics\r\n * - Crisis detection and intervention features\r\n * \r\n * This frontend provides a complete user interface for all\r\n * MoodMate features with advanced React patterns, hooks,\r\n * and state management for optimal user experience.\r\n * \r\n * Architecture:\r\n * - React 18+ with functional components and hooks\r\n * - Custom state management with useReducer and Context\r\n * - Real-time UI updates with WebSocket-style polling\r\n * - Responsive design optimized for desktop usage\r\n * - Advanced animation system with CSS transitions\r\n * - Comprehensive error handling and user feedback\r\n * - Accessibility features and keyboard navigation\r\n * \r\n * Author: MoodMate Development Team\r\n * Version: 2.0.0\r\n * Created: August 2025\r\n */\r\n\r\n// React core imports for component functionality\r\nimport React, { \r\n    useState, \r\n    useEffect, \r\n    useReducer, \r\n    useRef, \r\n    useCallback, \r\n    useMemo,\r\n    createContext,\r\n    useContext,\r\n    Suspense,\r\n    memo\r\n} from 'react';\r\n\r\n// Additional React utilities for advanced features\r\nimport { \r\n    createPortal \r\n} from 'react-dom';\r\n\r\n/**\r\n * ========================================================================\r\n * GLOBAL STATE MANAGEMENT AND CONTEXT\r\n * ========================================================================\r\n */\r\n\r\n// Main application state context for global data management\r\nconst AppContext = createContext();\r\n\r\n// Authentication context for user session management\r\nconst AuthContext = createContext();\r\n\r\n// Chat context for conversation state management\r\nconst ChatContext = createContext();\r\n\r\n// Theme context for dynamic theming and mood-based styling\r\nconst ThemeContext = createContext();\r\n\r\n/**\r\n * Initial application state structure\r\n * Comprehensive state management for all MoodMate features\r\n */\r\nconst initialAppState = {\r\n    // User authentication and profile data\r\n    user: null,\r\n    isAuthenticated: false,\r\n    isLoading: true,\r\n\r\n    // Chat and conversation management\r\n    currentSession: null,\r\n    messages: [],\r\n    isTyping: false,\r\n    typingText: '',\r\n\r\n    // UI state and navigation\r\n    activeTab: 'chat',\r\n    sidebarCollapsed: false,\r\n    modalOpen: null,\r\n    theme: 'mood_adaptive',\r\n\r\n    // Gamification and progress tracking\r\n    coins: 0,\r\n    streak: 0,\r\n    level: 1,\r\n    experience: 0,\r\n\r\n    // Community and social features\r\n    communityPosts: [],\r\n    notifications: [],\r\n\r\n    // Mini games and challenges\r\n    activeGame: null,\r\n    gameScores: [],\r\n    challenges: [],\r\n\r\n    // Mood tracking and analytics\r\n    moodHistory: [],\r\n    currentMood: 'neutral',\r\n    analytics: {},\r\n\r\n    // Music and media suggestions\r\n    musicSuggestions: [],\r\n    currentlyPlaying: null,\r\n\r\n    // Error handling and system status\r\n    errors: [],\r\n    systemStatus: 'healthy',\r\n    connectionStatus: 'connected'\r\n};\r\n\r\n/**\r\n * Main application state reducer\r\n * Handles all state updates with proper immutability\r\n */\r\nfunction appStateReducer(state, action) {\r\n    switch (action.type) {\r\n        // Authentication actions\r\n        case 'LOGIN_SUCCESS':\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                coins: action.payload.user.total_coins,\r\n                streak: action.payload.user.current_streak,\r\n                level: action.payload.user.level,\r\n                experience: action.payload.user.experience_points\r\n            };\r\n\r\n        case 'LOGOUT':\r\n            return {\r\n                ...initialAppState,\r\n                isLoading: false\r\n            };\r\n\r\n        case 'UPDATE_USER_STATS':\r\n            return {\r\n                ...state,\r\n                coins: action.payload.coins,\r\n                streak: action.payload.streak,\r\n                level: action.payload.level,\r\n                experience: action.payload.experience\r\n            };\r\n\r\n        // Chat and messaging actions\r\n        case 'ADD_MESSAGE':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, action.payload]\r\n            };\r\n\r\n        case 'SET_MESSAGES':\r\n            return {\r\n                ...state,\r\n                messages: action.payload\r\n            };\r\n\r\n        case 'START_TYPING':\r\n            return {\r\n                ...state,\r\n                isTyping: true,\r\n                typingText: ''\r\n            };\r\n\r\n        case 'UPDATE_TYPING':\r\n            return {\r\n                ...state,\r\n                typingText: action.payload\r\n            };\r\n\r\n        case 'STOP_TYPING':\r\n            return {\r\n                ...state,\r\n                isTyping: false,\r\n                typingText: ''\r\n            };\r\n\r\n        case 'SET_CURRENT_SESSION':\r\n            return {\r\n                ...state,\r\n                currentSession: action.payload\r\n            };\r\n\r\n        // UI and navigation actions\r\n        case 'SET_ACTIVE_TAB':\r\n            return {\r\n                ...state,\r\n                activeTab: action.payload\r\n            };\r\n\r\n        case 'TOGGLE_SIDEBAR':\r\n            return {\r\n                ...state,\r\n                sidebarCollapsed: !state.sidebarCollapsed\r\n            };\r\n\r\n        case 'OPEN_MODAL':\r\n            return {\r\n                ...state,\r\n                modalOpen: action.payload\r\n            };\r\n\r\n        case 'CLOSE_MODAL':\r\n            return {\r\n                ...state,\r\n                modalOpen: null\r\n            };\r\n\r\n        case 'SET_THEME':\r\n            return {\r\n                ...state,\r\n                theme: action.payload\r\n            };\r\n\r\n        // Community and social actions\r\n        case 'SET_COMMUNITY_POSTS':\r\n            return {\r\n                ...state,\r\n                communityPosts: action.payload\r\n            };\r\n\r\n        case 'ADD_COMMUNITY_POST':\r\n            return {\r\n                ...state,\r\n                communityPosts: [action.payload, ...state.communityPosts]\r\n            };\r\n\r\n        case 'ADD_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                notifications: [action.payload, ...state.notifications.slice(0, 9)]\r\n            };\r\n        case 'REMOVE_NOTIFICATION':\r\n            return {\r\n                ...state,\r\n                notifications: state.notifications.filter(notification => notification.id !== action.payload)\r\n            };\r\n\r\n        // Mood and analytics actions\r\n        case 'SET_CURRENT_MOOD':\r\n            return {\r\n                ...state,\r\n                currentMood: action.payload\r\n            };\r\n\r\n        case 'SET_MOOD_HISTORY':\r\n            return {\r\n                ...state,\r\n                moodHistory: action.payload\r\n            };\r\n\r\n        case 'SET_ANALYTICS':\r\n            return {\r\n                ...state,\r\n                analytics: action.payload\r\n            };\r\n\r\n        // Music and media actions\r\n        case 'SET_MUSIC_SUGGESTIONS':\r\n            return {\r\n                ...state,\r\n                musicSuggestions: action.payload\r\n            };\r\n\r\n        case 'SET_CURRENTLY_PLAYING':\r\n            return {\r\n                ...state,\r\n                currentlyPlaying: action.payload\r\n            };\r\n\r\n        // Game and challenge actions\r\n        case 'SET_ACTIVE_GAME':\r\n            return {\r\n                ...state,\r\n                activeGame: action.payload\r\n            };\r\n\r\n        case 'ADD_GAME_SCORE':\r\n            return {\r\n                ...state,\r\n                gameScores: [action.payload, ...state.gameScores.slice(0, 49)]\r\n            };\r\n\r\n        case 'SET_CHALLENGES':\r\n            return {\r\n                ...state,\r\n                challenges: action.payload\r\n            };\r\n\r\n        // Error handling and system actions\r\n        case 'ADD_ERROR':\r\n            return {\r\n                ...state,\r\n                errors: [action.payload, ...state.errors.slice(0, 4)]\r\n            };\r\n\r\n        case 'REMOVE_ERROR':\r\n            return {\r\n                ...state,\r\n                errors: state.errors.filter(error => error.id !== action.payload)\r\n            };\r\n\r\n        case 'SET_LOADING':\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload\r\n            };\r\n\r\n        case 'SET_CONNECTION_STATUS':\r\n            return {\r\n                ...state,\r\n                connectionStatus: action.payload\r\n            };\r\n\r\n        default:\r\n            console.warn('Unknown action type:', action.type);\r\n            return state;\r\n    }\r\n}\r\n\r\n/**\r\n * ========================================================================\r\n * CUSTOM HOOKS FOR ADVANCED FUNCTIONALITY\r\n * ========================================================================\r\n */\r\n\r\n/**\r\n * Main application context provider hook\r\n * Provides global state and dispatch functions to all components\r\n */\r\nfunction useAppState() {\r\n    const context = useContext(AppContext);\r\n    if (!context) {\r\n        throw new Error('useAppState must be used within AppStateProvider');\r\n    }\r\n    return context;\r\n}\r\n\r\n/**\r\n * API communication hook with error handling and retry logic\r\n * Centralized HTTP client with authentication and error management\r\n */\r\nfunction useAPI() {\r\n    const { dispatch } = useAppState();\r\n\r\n    const apiCall = useCallback(async (endpoint, options = {}) => {\r\n        try {\r\n            // Set default options with authentication\r\n            const defaultOptions = {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                credentials: 'include', // Include cookies for session auth\r\n                ...options\r\n            };\r\n\r\n            // Make API request\r\n            const response = await fetch(`http://127.0.0.1:5000/api${endpoint}`, defaultOptions);\r\n\r\n            // Handle HTTP errors\r\n            if (!response.ok) {\r\n                const errorData = await response.json().catch(() => ({}));\r\n                throw new Error(errorData.message || `HTTP ${response.status} ${response.statusText}`);\r\n            }\r\n\r\n            // Parse response data\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        } catch (error) {\r\n            // Add error to global state for user feedback\r\n            dispatch({\r\n                type: 'ADD_ERROR',\r\n                payload: {\r\n                    id: Date.now(),\r\n                    message: error.message,\r\n                    type: 'api_error',\r\n                    timestamp: new Date().toISOString()\r\n                }\r\n            });\r\n\r\n            // Re-throw error for component handling\r\n            throw error;\r\n        }\r\n    }, [dispatch]);\r\n\r\n    return { apiCall };\r\n}\r\n\r\n/**\r\n * Real-time typing animation hook\r\n * Creates typewriter effect for AI responses with customizable speed\r\n */\r\nfunction useTypingAnimation(text, speed = 50, startDelay = 200) {\r\n    const [displayedText, setDisplayedText] = useState('');\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const timeoutRef = useRef(null);\r\n    const indexRef = useRef(0);\r\n\r\n    useEffect(() => {\r\n        if (!text) {\r\n            setDisplayedText('');\r\n            setIsTyping(false);\r\n            return;\r\n        }\r\n\r\n        // Reset animation state\r\n        setDisplayedText('');\r\n        setIsTyping(true);\r\n        indexRef.current = 0;\r\n\r\n        // Start typing after delay\r\n        const startTyping = () => {\r\n            const typeNextChar = () => {\r\n                if (indexRef.current < text.length) {\r\n                    setDisplayedText(text.slice(0, indexRef.current + 1));\r\n                    indexRef.current++;\r\n                    timeoutRef.current = setTimeout(typeNextChar, speed);\r\n                } else {\r\n                    setIsTyping(false);\r\n                }\r\n            };\r\n\r\n            timeoutRef.current = setTimeout(typeNextChar, startDelay);\r\n        };\r\n\r\n        startTyping();\r\n\r\n        // Cleanup timeout on unmount or text change\r\n        return () => {\r\n            if (timeoutRef.current) {\r\n                clearTimeout(timeoutRef.current);\r\n            }\r\n        };\r\n    }, [text, speed, startDelay]);\r\n\r\n    return { displayedText, isTyping };\r\n}\r\n\r\n/**\r\n * Auto-scroll hook for chat messages\r\n * Automatically scrolls to bottom when new messages arrive\r\n */\r\nfunction useAutoScroll(dependency, behavior = 'smooth') {\r\n    const scrollRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (scrollRef.current) {\r\n            scrollRef.current.scrollTo({\r\n                top: scrollRef.current.scrollHeight,\r\n                behavior: behavior\r\n            });\r\n        }\r\n    }, [dependency, behavior]);\r\n\r\n    return scrollRef;\r\n}\r\n\r\n/**\r\n * Local storage hook with JSON serialization\r\n * Persists state to localStorage with automatic serialization\r\n */\r\nfunction useLocalStorage(key, defaultValue) {\r\n    const [value, setValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : defaultValue;\r\n        } catch (error) {\r\n            console.warn(`Error reading localStorage key \"${key}\":`, error);\r\n            return defaultValue;\r\n        }\r\n    });\r\n\r\n    const setStoredValue = useCallback((newValue) => {\r\n        try {\r\n            setValue(newValue);\r\n            window.localStorage.setItem(key, JSON.stringify(newValue));\r\n        } catch (error) {\r\n            console.warn(`Error setting localStorage key \"${key}\":`, error);\r\n        }\r\n    }, [key]);\r\n\r\n    return [value, setStoredValue];\r\n}\r\n\r\n/**\r\n * Mood detection hook with sentiment analysis\r\n * Analyzes text input to detect mood and emotional state\r\n */\r\nfunction useMoodDetection() {\r\n    const detectMood = useCallback((text) => {\r\n        if (!text) return { mood: 'neutral', confidence: 0, keywords: [] };\r\n\r\n        const moodPatterns = {\r\n            happy: ['happy', 'joy', 'excited', 'great', 'awesome', 'amazing', 'wonderful', 'fantastic', 'love', 'khushi', 'mazaa', 'badhiya'],\r\n            sad: ['sad', 'depressed', 'down', 'upset', 'crying', 'tears', 'lonely', 'dukhi', 'pareshaan', 'udaas'],\r\n            anxious: ['anxious', 'worried', 'nervous', 'scared', 'panic', 'stress', 'tension', 'fear', 'pareshani', 'dar'],\r\n            angry: ['angry', 'mad', 'furious', 'irritated', 'annoyed', 'rage', 'hate', 'gussa', 'naraz'],\r\n            excited: ['excited', 'thrilled', 'pumped', 'energetic', 'motivated', 'enthusiastic', 'josh'],\r\n            calm: ['calm', 'peaceful', 'relaxed', 'serene', 'tranquil', 'zen', 'shanti', 'sukoon']\r\n        };\r\n\r\n        const textLower = text.toLowerCase();\r\n        const words = textLower.split(/\\s+/);\r\n        const moodScores = {};\r\n        const foundKeywords = [];\r\n\r\n        // Calculate mood scores based on keyword matches\r\n        Object.entries(moodPatterns).forEach(([mood, keywords]) => {\r\n            let score = 0;\r\n            keywords.forEach(keyword => {\r\n                const count = (textLower.match(new RegExp(`\\\\b${keyword}\\\\b`, 'g')) || []).length;\r\n                if (count > 0) {\r\n                    score += count;\r\n                    foundKeywords.push(keyword);\r\n                }\r\n            });\r\n            moodScores[mood] = score;\r\n        });\r\n\r\n        // Find dominant mood\r\n        const totalMatches = Object.values(moodScores).reduce((sum, score) => sum + score, 0);\r\n\r\n        if (totalMatches === 0) {\r\n            return { mood: 'neutral', confidence: 0, keywords: [] };\r\n        }\r\n\r\n        const dominantMood = Object.entries(moodScores).reduce((a, b) => \r\n            moodScores[a[0]] > moodScores[b[0]] ? a : b\r\n        )[0];\r\n\r\n        const confidence = Math.min(moodScores[dominantMood] / words.length * 10, 1);\r\n\r\n        return {\r\n            mood: dominantMood,\r\n            confidence: Math.round(confidence * 100) / 100,\r\n            keywords: foundKeywords.slice(0, 5),\r\n            allScores: moodScores\r\n        };\r\n    }, []);\r\n\r\n    return { detectMood };\r\n}\r\n\r\n/**\r\n * ========================================================================\r\n * AUTHENTICATION COMPONENTS\r\n * ========================================================================\r\n */\r\n\r\n/**\r\n * Login Form Component\r\n * Handles user authentication with validation and error handling\r\n */\r\nconst LoginForm = memo(({ onSuccess, onSwitchToRegister }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const { apiCall } = useAPI();\r\n\r\n    // Handle input changes with real-time validation\r\n    const handleInputChange = useCallback((e) => {\r\n        const { name, value } = e.target;\r\n        setFormData(prev => ({ ...prev, [name]: value }));\r\n\r\n        // Clear field-specific errors on change\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    }, [errors]);\r\n\r\n    // Form validation logic\r\n    const validateForm = useCallback(() => {\r\n        const newErrors = {};\r\n\r\n        if (!formData.username.trim()) {\r\n            newErrors.username = 'Username is required';\r\n        } else if (formData.username.length < 3) {\r\n            newErrors.username = 'Username must be at least 3 characters';\r\n        }\r\n\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        } else if (formData.password.length < 6) {\r\n            newErrors.password = 'Password must be at least 6 characters';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    }, [formData]);\r\n\r\n    // Handle form submission with API call\r\n    const handleSubmit = useCallback(async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await apiCall('/auth/login', {\r\n                method: 'POST',\r\n                body: JSON.stringify(formData)\r\n            });\r\n\r\n            if (response.success) {\r\n                onSuccess(response.data);\r\n            } else {\r\n                setErrors({ submit: response.message || 'Login failed' });\r\n            }\r\n        } catch (error) {\r\n            setErrors({ submit: error.message || 'Login failed. Please try again.' });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [formData, validateForm, apiCall, onSuccess]);\r\n\r\n    return (\r\n        <div className=\"auth-form login-form\">\r\n            <div className=\"auth-header\">\r\n                <h2 className=\"auth-title\">Welcome Back to MoodMate</h2>\r\n                <p className=\"auth-subtitle\">Sign in to continue your mental wellness journey</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"auth-form-content\">\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"username\" className=\"form-label\">\r\n                        Username or Email\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        id=\"username\"\r\n                        name=\"username\"\r\n                        value={formData.username}\r\n                        onChange={handleInputChange}\r\n                        className={`form-input ${errors.username ? 'error' : ''}`}\r\n                        placeholder=\"Enter your username or email\"\r\n                        disabled={isLoading}\r\n                        autoComplete=\"username\"\r\n                    />\r\n                    {errors.username && (\r\n                        <span className=\"form-error\">{errors.username}</span>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleInputChange}\r\n                        className={`form-input ${errors.password ? 'error' : ''}`}\r\n                        placeholder=\"Enter your password\"\r\n                        disabled={isLoading}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    {errors.password && (\r\n                        <span className=\"form-error\">{errors.password}</span>\r\n                    )}\r\n                </div>\r\n\r\n                {errors.submit && (\r\n                    <div className=\"form-error-message\">\r\n                        {errors.submit}\r\n                    </div>\r\n                )}\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-auth\"\r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? (\r\n                        <span className=\"btn-loading\">\r\n                            <span className=\"loading-spinner\"></span>\r\n                            Signing in...\r\n                        </span>\r\n                    ) : (\r\n                        'Sign In'\r\n                    )}\r\n                </button>\r\n\r\n                <div className=\"auth-switch\">\r\n                    <p>\r\n                        Don't have an account?{' '}\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={onSwitchToRegister}\r\n                            className=\"auth-switch-link\"\r\n                        >\r\n                            Create one here\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * Registration Form Component\r\n * Handles new user account creation with comprehensive validation\r\n */\r\nconst RegisterForm = memo(({ onSuccess, onSwitchToLogin }) => {\r\n    const [formData, setFormData] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        displayName: '',\r\n        acceptTerms: false\r\n    });\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [passwordStrength, setPasswordStrength] = useState(0);\r\n    const { apiCall } = useAPI();\r\n\r\n    // Password strength calculation\r\n    const calculatePasswordStrength = useCallback((password) => {\r\n        let strength = 0;\r\n        if (password.length >= 8) strength += 1;\r\n        if (/[A-Z]/.test(password)) strength += 1;\r\n        if (/[a-z]/.test(password)) strength += 1;\r\n        if (/[0-9]/.test(password)) strength += 1;\r\n        if (/[^A-Za-z0-9]/.test(password)) strength += 1;\r\n        return strength;\r\n    }, []);\r\n\r\n    // Handle input changes with real-time validation\r\n    const handleInputChange = useCallback((e) => {\r\n        const { name, value, type, checked } = e.target;\r\n        const newValue = type === 'checkbox' ? checked : value;\r\n\r\n        setFormData(prev => ({ ...prev, [name]: newValue }));\r\n\r\n        // Real-time password strength calculation\r\n        if (name === 'password') {\r\n            setPasswordStrength(calculatePasswordStrength(value));\r\n        }\r\n\r\n        // Clear field-specific errors on change\r\n        if (errors[name]) {\r\n            setErrors(prev => ({ ...prev, [name]: '' }));\r\n        }\r\n    }, [errors, calculatePasswordStrength]);\r\n\r\n    // Comprehensive form validation\r\n    const validateForm = useCallback(() => {\r\n        const newErrors = {};\r\n\r\n        // Username validation\r\n        if (!formData.username.trim()) {\r\n            newErrors.username = 'Username is required';\r\n        } else if (formData.username.length < 3) {\r\n            newErrors.username = 'Username must be at least 3 characters';\r\n        } else if (!/^[a-zA-Z0-9_]+$/.test(formData.username)) {\r\n            newErrors.username = 'Username can only contain letters, numbers, and underscores';\r\n        }\r\n\r\n        // Email validation\r\n        if (!formData.email.trim()) {\r\n            newErrors.email = 'Email is required';\r\n        } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\r\n            newErrors.email = 'Please enter a valid email address';\r\n        }\r\n\r\n        // Display name validation\r\n        if (!formData.displayName.trim()) {\r\n            newErrors.displayName = 'Display name is required';\r\n        } else if (formData.displayName.length < 2) {\r\n            newErrors.displayName = 'Display name must be at least 2 characters';\r\n        }\r\n\r\n        // Password validation\r\n        if (!formData.password) {\r\n            newErrors.password = 'Password is required';\r\n        } else if (formData.password.length < 6) {\r\n            newErrors.password = 'Password must be at least 6 characters';\r\n        }\r\n\r\n        // Confirm password validation\r\n        if (!formData.confirmPassword) {\r\n            newErrors.confirmPassword = 'Please confirm your password';\r\n        } else if (formData.password !== formData.confirmPassword) {\r\n            newErrors.confirmPassword = 'Passwords do not match';\r\n        }\r\n\r\n        // Terms acceptance validation\r\n        if (!formData.acceptTerms) {\r\n            newErrors.acceptTerms = 'You must accept the terms and conditions';\r\n        }\r\n\r\n        setErrors(newErrors);\r\n        return Object.keys(newErrors).length === 0;\r\n    }, [formData]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = useCallback(async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!validateForm()) {\r\n            return;\r\n        }\r\n\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            const response = await apiCall('/auth/register', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    username: formData.username,\r\n                    email: formData.email,\r\n                    password: formData.password,\r\n                    display_name: formData.displayName\r\n                })\r\n            });\r\n\r\n            if (response.success) {\r\n                onSuccess(response.data);\r\n            } else {\r\n                setErrors({ submit: response.message || 'Registration failed' });\r\n            }\r\n        } catch (error) {\r\n            setErrors({ submit: error.message || 'Registration failed. Please try again.' });\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, [formData, validateForm, apiCall, onSuccess]);\r\n\r\n    return (\r\n        <div className=\"auth-form register-form\">\r\n            <div className=\"auth-header\">\r\n                <h2 className=\"auth-title\">Join MoodMate</h2>\r\n                <p className=\"auth-subtitle\">Start your journey to better mental wellness</p>\r\n            </div>\r\n\r\n            <form onSubmit={handleSubmit} className=\"auth-form-content\">\r\n                <div className=\"form-row\">\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"displayName\" className=\"form-label\">\r\n                            Display Name\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"displayName\"\r\n                            name=\"displayName\"\r\n                            value={formData.displayName}\r\n                            onChange={handleInputChange}\r\n                            className={`form-input ${errors.displayName ? 'error' : ''}`}\r\n                            placeholder=\"Your display name\"\r\n                            disabled={isLoading}\r\n                            autoComplete=\"name\"\r\n                        />\r\n                        {errors.displayName && (\r\n                            <span className=\"form-error\">{errors.displayName}</span>\r\n                        )}\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\" className=\"form-label\">\r\n                            Username\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"username\"\r\n                            name=\"username\"\r\n                            value={formData.username}\r\n                            onChange={handleInputChange}\r\n                            className={`form-input ${errors.username ? 'error' : ''}`}\r\n                            placeholder=\"Choose a username\"\r\n                            disabled={isLoading}\r\n                            autoComplete=\"username\"\r\n                        />\r\n                        {errors.username && (\r\n                            <span className=\"form-error\">{errors.username}</span>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">\r\n                        Email Address\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        value={formData.email}\r\n                        onChange={handleInputChange}\r\n                        className={`form-input ${errors.email ? 'error' : ''}`}\r\n                        placeholder=\"your.email@example.com\"\r\n                        disabled={isLoading}\r\n                        autoComplete=\"email\"\r\n                    />\r\n                    {errors.email && (\r\n                        <span className=\"form-error\">{errors.email}</span>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        name=\"password\"\r\n                        value={formData.password}\r\n                        onChange={handleInputChange}\r\n                        className={`form-input ${errors.password ? 'error' : ''}`}\r\n                        placeholder=\"Create a secure password\"\r\n                        disabled={isLoading}\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                    {formData.password && (\r\n                        <div className=\"password-strength\">\r\n                            <div className=\"password-strength-bar\">\r\n                                <div \r\n                                    className={`password-strength-fill strength-${passwordStrength}`}\r\n                                    style={{ width: `${(passwordStrength / 5) * 100}%` }}\r\n                                ></div>\r\n                            </div>\r\n                            <span className=\"password-strength-text\">\r\n                                {passwordStrength <= 2 ? 'Weak' : passwordStrength <= 3 ? 'Medium' : 'Strong'}\r\n                            </span>\r\n                        </div>\r\n                    )}\r\n                    {errors.password && (\r\n                        <span className=\"form-error\">{errors.password}</span>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                        Confirm Password\r\n                    </label>\r\n                    <input\r\n                        type=\"password\"\r\n                        id=\"confirmPassword\"\r\n                        name=\"confirmPassword\"\r\n                        value={formData.confirmPassword}\r\n                        onChange={handleInputChange}\r\n                        className={`form-input ${errors.confirmPassword ? 'error' : ''}`}\r\n                        placeholder=\"Confirm your password\"\r\n                        disabled={isLoading}\r\n                        autoComplete=\"new-password\"\r\n                    />\r\n                    {errors.confirmPassword && (\r\n                        <span className=\"form-error\">{errors.confirmPassword}</span>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"form-group checkbox-group\">\r\n                    <label className=\"checkbox-label\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"acceptTerms\"\r\n                            checked={formData.acceptTerms}\r\n                            onChange={handleInputChange}\r\n                            className=\"checkbox-input\"\r\n                            disabled={isLoading}\r\n                        />\r\n                        <span className=\"checkbox-custom\"></span>\r\n                        <span className=\"checkbox-text\">\r\n                            I agree to the{' '}\r\n                            <a href=\"#terms\" className=\"link\">Terms of Service</a>{' '}\r\n                            and{' '}\r\n                            <a href=\"#privacy\" className=\"link\">Privacy Policy</a>\r\n                        </span>\r\n                    </label>\r\n                    {errors.acceptTerms && (\r\n                        <span className=\"form-error\">{errors.acceptTerms}</span>\r\n                    )}\r\n                </div>\r\n\r\n                {errors.submit && (\r\n                    <div className=\"form-error-message\">\r\n                        {errors.submit}\r\n                    </div>\r\n                )}\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-auth\"\r\n                    disabled={isLoading}\r\n                >\r\n                    {isLoading ? (\r\n                        <span className=\"btn-loading\">\r\n                            <span className=\"loading-spinner\"></span>\r\n                            Creating Account...\r\n                        </span>\r\n                    ) : (\r\n                        'Create Account'\r\n                    )}\r\n                </button>\r\n\r\n                <div className=\"auth-switch\">\r\n                    <p>\r\n                        Already have an account?{' '}\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={onSwitchToLogin}\r\n                            className=\"auth-switch-link\"\r\n                        >\r\n                            Sign in here\r\n                        </button>\r\n                    </p>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * ========================================================================\r\n * CHAT AND MESSAGING COMPONENTS\r\n * ========================================================================\r\n */\r\n\r\n/**\r\n * Typing Animation Component\r\n * Displays animated typing indicator for AI responses\r\n */\r\nconst TypingIndicator = memo(() => {\r\n    return (\r\n        <div className=\"typing-indicator\">\r\n            <div className=\"typing-dots\">\r\n                <div className=\"typing-dot\"></div>\r\n                <div className=\"typing-dot\"></div>\r\n                <div className=\"typing-dot\"></div>\r\n            </div>\r\n            <span className=\"typing-text\">MoodMate is typing...</span>\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * Message Component\r\n * Displays individual chat messages with rich formatting and interactions\r\n */\r\nconst ChatMessage = memo(({ message, isOwn, showAvatar = true, onReaction, onMusicSuggestion }) => {\r\n    const [showActions, setShowActions] = useState(false);\r\n    const [reactionPicker, setReactionPicker] = useState(false);\r\n    const { displayedText, isTyping } = useTypingAnimation(\r\n        !isOwn ? (message.content || '') : '',\r\n        50,\r\n        200\r\n    );\r\n\r\n    // Available reaction emojis\r\n    const reactions = ['👍', '❤️', '😊', '🤗', '🙏', '✨'];\r\n\r\n    // Handle reaction selection\r\n    const handleReaction = useCallback((emoji) => {\r\n        onReaction?.(message.id, emoji);\r\n        setReactionPicker(false);\r\n    }, [message.id, onReaction]);\r\n\r\n    // Handle music suggestion click\r\n    const handleMusicClick = useCallback((suggestion) => {\r\n        onMusicSuggestion?.(suggestion);\r\n    }, [onMusicSuggestion]);\r\n\r\n    return (\r\n        <div \r\n            className={`chat-message ${isOwn ? 'own' : 'other'}`}\r\n            onMouseEnter={() => setShowActions(true)}\r\n            onMouseLeave={() => setShowActions(false)}\r\n        >\r\n            {showAvatar && !isOwn && (\r\n                <div className=\"message-avatar\">\r\n                    <div className=\"avatar mood-avatar\">\r\n                        🤖\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            <div className=\"message-content\">\r\n                <div className={`message-bubble ${isOwn ? 'own' : 'other'}`}>\r\n                    {/* Message text with typing animation for AI responses */}\r\n                    <div className=\"message-text\">\r\n                        {isOwn ? (message.content || '') : (isTyping ? displayedText : (message.content || ''))}\r\n                        {!isOwn && isTyping && <span className=\"typing-cursor\">|</span>}\r\n                    </div>\r\n\r\n                    {/* Music suggestions if present */}\r\n                    {message.music_suggestions && message.music_suggestions.length > 0 && (\r\n                        <div className=\"message-music-suggestions\">\r\n                            <div className=\"music-header\">\r\n                                <span className=\"music-icon\">🎵</span>\r\n                                <span className=\"music-title\">Music for your mood:</span>\r\n                            </div>\r\n                            <div className=\"music-list\">\r\n                                {message.music_suggestions.map((suggestion, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        className=\"music-suggestion\"\r\n                                        onClick={() => handleMusicClick(suggestion)}\r\n                                    >\r\n                                        <span className=\"music-platform\">\r\n                                            {suggestion.platform === 'spotify' ? '🎵' : \r\n                                             suggestion.platform === 'youtube' ? '📺' : '🎧'}\r\n                                        </span>\r\n                                        <span className=\"music-info\">\r\n                                            <span className=\"music-name\">{suggestion.title}</span>\r\n                                            <span className=\"music-type\">{suggestion.type}</span>\r\n                                        </span>\r\n                                    </button>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Challenge suggestions if present */}\r\n                    {message.challenge_data?.challenges && message.challenge_data.challenges.length > 0 && (\r\n                        <div className=\"message-challenges\">\r\n                            <div className=\"challenges-header\">\r\n                                <span className=\"challenge-icon\">🎯</span>\r\n                                <span className=\"challenge-title\">Try these activities:</span>\r\n                            </div>\r\n                            <div className=\"challenges-list\">\r\n                                {message.challenge_data.challenges.map((challenge, index) => (\r\n                                    <div key={index} className=\"challenge-item\">\r\n                                        <div className=\"challenge-name\">{challenge.title}</div>\r\n                                        <div className=\"challenge-description\">{challenge.description}</div>\r\n                                        <div className=\"challenge-reward\">\r\n                                            <span className=\"coin-icon\">🪙</span>\r\n                                            {challenge.coins_reward} coins\r\n                                        </div>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* Message timestamp */}\r\n                    <div className=\"message-time\">\r\n                        {new Date(message.timestamp).toLocaleTimeString([], { \r\n                            hour: '2-digit', \r\n                            minute: '2-digit' \r\n                        })}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Message actions */}\r\n                {showActions && (\r\n                    <div className=\"message-actions\">\r\n                        <button\r\n                            className=\"message-action\"\r\n                            onClick={() => setReactionPicker(!reactionPicker)}\r\n                            title=\"Add reaction\"\r\n                        >\r\n                            😊\r\n                        </button>\r\n                        <button\r\n                            className=\"message-action\"\r\n                            onClick={() => navigator.clipboard.writeText(message.content)}\r\n                            title=\"Copy message\"\r\n                        >\r\n                            📋\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {/* Reaction picker */}\r\n                {reactionPicker && (\r\n                    <div className=\"reaction-picker\">\r\n                        {reactions.map((emoji) => (\r\n                            <button\r\n                                key={emoji}\r\n                                className=\"reaction-option\"\r\n                                onClick={() => handleReaction(emoji)}\r\n                            >\r\n                                {emoji}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Existing reactions */}\r\n                {message.user_reactions && message.user_reactions.length > 0 && (\r\n                    <div className=\"message-reactions\">\r\n                        {message.user_reactions.map((reaction, index) => (\r\n                            <span key={index} className=\"reaction-badge\">\r\n                                {reaction.reaction}\r\n                            </span>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * Chat Input Component\r\n * Advanced message input with mood detection and suggestions\r\n */\r\nconst ChatInput = memo(({ onSendMessage, isLoading, placeholder = \"Share what's on your mind...\" }) => {\r\n    const [message, setMessage] = useState('');\r\n    const [detectedMood, setDetectedMood] = useState(null);\r\n    const [showSuggestions, setShowSuggestions] = useState(false);\r\n    const { detectMood } = useMoodDetection();\r\n    const textareaRef = useRef(null);\r\n\r\n    // Mood-based message suggestions\r\n    const moodSuggestions = {\r\n        happy: [\r\n            \"I'm feeling really good today!\",\r\n            \"Something amazing happened!\",\r\n            \"I'm grateful for...\",\r\n        ],\r\n        sad: [\r\n            \"I'm having a tough day...\",\r\n            \"I could use some encouragement\",\r\n            \"I'm feeling down about...\",\r\n        ],\r\n        anxious: [\r\n            \"I'm feeling worried about...\",\r\n            \"My anxiety is acting up\",\r\n            \"I need help calming down\",\r\n        ],\r\n        excited: [\r\n            \"I'm so excited about...\",\r\n            \"I can't wait to...\",\r\n            \"This is amazing!\",\r\n        ]\r\n    };\r\n\r\n    // Handle message change with mood detection\r\n    const handleMessageChange = useCallback((e) => {\r\n        const newMessage = e.target.value;\r\n        setMessage(newMessage);\r\n\r\n        // Auto-resize textarea\r\n        if (textareaRef.current) {\r\n            textareaRef.current.style.height = 'auto';\r\n            textareaRef.current.style.height = textareaRef.current.scrollHeight + 'px';\r\n        }\r\n\r\n        // Detect mood if message is substantial\r\n        if (newMessage.trim().length > 10) {\r\n            const mood = detectMood(newMessage);\r\n            if (mood.confidence > 0.3) {\r\n                setDetectedMood(mood);\r\n                setShowSuggestions(false);\r\n            } else {\r\n                setDetectedMood(null);\r\n            }\r\n        } else {\r\n            setDetectedMood(null);\r\n        }\r\n    }, [detectMood]);\r\n\r\n    // Handle form submission\r\n    const handleSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n\r\n        if (message.trim() && !isLoading) {\r\n            onSendMessage(message.trim(), detectedMood);\r\n            setMessage('');\r\n            setDetectedMood(null);\r\n            setShowSuggestions(false);\r\n\r\n            // Reset textarea height\r\n            if (textareaRef.current) {\r\n                textareaRef.current.style.height = 'auto';\r\n            }\r\n        }\r\n    }, [message, detectedMood, isLoading, onSendMessage]);\r\n\r\n    // Handle key press for shortcuts\r\n    const handleKeyPress = useCallback((e) => {\r\n        if (e.key === 'Enter' && !e.shiftKey) {\r\n            e.preventDefault();\r\n            handleSubmit(e);\r\n        } else if (e.key === 'Tab' && showSuggestions) {\r\n            e.preventDefault();\r\n            // Could implement suggestion cycling here\r\n        }\r\n    }, [handleSubmit, showSuggestions]);\r\n\r\n    // Use suggested message\r\n    const useSuggestion = useCallback((suggestion) => {\r\n        setMessage(suggestion);\r\n        setShowSuggestions(false);\r\n        textareaRef.current?.focus();\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"chat-input-container\">\r\n            {/* Mood indicator */}\r\n            {detectedMood && detectedMood.confidence > 0.3 && (\r\n                <div className=\"mood-indicator\">\r\n                    <span className=\"mood-emoji\">\r\n                        {detectedMood.mood === 'happy' ? '😊' :\r\n                         detectedMood.mood === 'sad' ? '😢' :\r\n                         detectedMood.mood === 'anxious' ? '😰' :\r\n                         detectedMood.mood === 'excited' ? '🤩' :\r\n                         detectedMood.mood === 'angry' ? '😠' : '😊'}\r\n                    </span>\r\n                    <span className=\"mood-text\">\r\n                        Detected mood: {detectedMood.mood}\r\n                    </span>\r\n                    <button\r\n                        className=\"suggestions-toggle\"\r\n                        onClick={() => setShowSuggestions(!showSuggestions)}\r\n                    >\r\n                        💡\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* Message suggestions */}\r\n            {showSuggestions && detectedMood && moodSuggestions[detectedMood.mood] && (\r\n                <div className=\"message-suggestions\">\r\n                    <div className=\"suggestions-header\">Suggested messages:</div>\r\n                    {moodSuggestions[detectedMood.mood].map((suggestion, index) => (\r\n                        <button\r\n                            key={index}\r\n                            className=\"suggestion-item\"\r\n                            onClick={() => useSuggestion(suggestion)}\r\n                        >\r\n                            {suggestion}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {/* Input form */}\r\n            <form onSubmit={handleSubmit} className=\"chat-input-form\">\r\n                <div className=\"input-wrapper\">\r\n                    <textarea\r\n                        ref={textareaRef}\r\n                        value={message}\r\n                        onChange={handleMessageChange}\r\n                        onKeyPress={handleKeyPress}\r\n                        placeholder={placeholder}\r\n                        className=\"chat-textarea\"\r\n                        disabled={isLoading}\r\n                        rows={1}\r\n                        maxLength={2000}\r\n                    />\r\n\r\n                    {/* Character counter */}\r\n                    <div className=\"char-counter\">\r\n                        {message.length}/2000\r\n                    </div>\r\n\r\n                    {/* Send button */}\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"send-button\"\r\n                        disabled={!message.trim() || isLoading}\r\n                        title=\"Send message (Enter)\"\r\n                    >\r\n                        {isLoading ? (\r\n                            <span className=\"loading-spinner small\"></span>\r\n                        ) : (\r\n                            <span className=\"send-icon\">➤</span>\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Input hints */}\r\n                <div className=\"input-hints\">\r\n                    <span>Press Enter to send, Shift+Enter for new line</span>\r\n                    {detectedMood && (\r\n                        <span className=\"mood-hint\">\r\n                            💡 Click the bulb for mood-based suggestions\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * Main Chat Interface Component\r\n * Central chat component managing conversation flow and AI interactions\r\n */\r\nconst ChatInterface = memo(() => {\r\n    const { state, dispatch } = useAppState();\r\n    const { apiCall } = useAPI();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [crisisDetected, setCrisisDetected] = useState(null);\r\n    const messagesEndRef = useAutoScroll(state.messages);\r\n\r\n    // Load chat history on component mount\r\n    useEffect(() => {\r\n        loadChatHistory();\r\n    }, []);\r\n\r\n    // Load chat history from API\r\n    const loadChatHistory = useCallback(async () => {\r\n        try {\r\n            const response = await apiCall('/chat/sessions');\r\n            if (response.success && response.data.sessions.length > 0) {\r\n                const latestSession = response.data.sessions[0];\r\n                dispatch({ type: 'SET_CURRENT_SESSION', payload: latestSession });\r\n\r\n                // Load messages for latest session\r\n                const messagesResponse = await apiCall(`/chat/sessions/${latestSession.id}/messages`);\r\n                if (messagesResponse.success) {\r\n                    dispatch({ type: 'SET_MESSAGES', payload: messagesResponse.data.messages });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to load chat history:', error);\r\n        }\r\n    }, [apiCall, dispatch]);\r\n\r\n    // Send message to AI with comprehensive processing\r\n    const handleSendMessage = useCallback(async (messageContent, detectedMood = null) => {\r\n        if (!messageContent.trim()) return;\r\n\r\n        // Add user message to state immediately for responsive UI\r\n        const userMessage = {\r\n            id: Date.now(),\r\n            session_id: state.currentSession?.id,\r\n            message_type: 'user',\r\n            content: messageContent,\r\n            timestamp: new Date().toISOString(),\r\n            detected_mood: detectedMood\r\n        };\r\n\r\n        dispatch({ type: 'ADD_MESSAGE', payload: userMessage });\r\n        dispatch({ type: 'START_TYPING' });\r\n        setIsLoading(true);\r\n\r\n        try {\r\n            // Send message to backend\r\n            const response = await apiCall('/chat/send', {\r\n                method: 'POST',\r\n                body: JSON.stringify({\r\n                    message: messageContent,\r\n                    session_id: state.currentSession?.id,\r\n                    mood_context: detectedMood?.mood\r\n                })\r\n            });\r\n\r\n            if (response.success) {\r\n                // Update session if new\r\n                if (!state.currentSession) {\r\n                    dispatch({ \r\n                        type: 'SET_CURRENT_SESSION', \r\n                        payload: { id: response.data.session_id }\r\n                    });\r\n                }\r\n\r\n                // Add AI response with typing animation\r\n                dispatch({ type: 'ADD_MESSAGE', payload: response.data.ai_response });\r\n\r\n                // Handle crisis detection\r\n                if (response.data.crisis_detected) {\r\n                    setCrisisDetected({\r\n                        message: response.data.ai_response.content,\r\n                        resources: response.data.crisis_resources || []\r\n                    });\r\n                }\r\n\r\n                // Update user stats if provided\r\n                if (response.data.engagement_reward) {\r\n                    const reward = response.data.engagement_reward;\r\n                    dispatch({\r\n                        type: 'UPDATE_USER_STATS',\r\n                        payload: {\r\n                            coins: state.coins + (reward.coins_awarded || 0),\r\n                            streak: state.streak,\r\n                            level: reward.level_up?.new_level || state.level,\r\n                            experience: state.experience + (reward.xp_awarded || 0)\r\n                        }\r\n                    });\r\n\r\n                    // Show level up notification\r\n                    if (reward.level_up) {\r\n                        dispatch({\r\n                            type: 'ADD_NOTIFICATION',\r\n                            payload: {\r\n                                id: Date.now(),\r\n                                type: 'level_up',\r\n                                title: 'Level Up!',\r\n                                message: `Congratulations! You reached level ${reward.level_up.new_level}!`,\r\n                                timestamp: new Date().toISOString()\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n                // Update current mood if detected\r\n                if (response.data.mood_analysis?.mood) {\r\n                    dispatch({\r\n                        type: 'SET_CURRENT_MOOD',\r\n                        payload: response.data.mood_analysis.mood\r\n                    });\r\n                }\r\n\r\n                // Set music suggestions if provided\r\n                if (response.data.music_suggestions?.length > 0) {\r\n                    dispatch({\r\n                        type: 'SET_MUSIC_SUGGESTIONS',\r\n                        payload: response.data.music_suggestions\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                // Handle API error\r\n                dispatch({\r\n                    type: 'ADD_MESSAGE',\r\n                    payload: {\r\n                        id: Date.now(),\r\n                        message_type: 'system',\r\n                        content: 'Sorry, I encountered an error processing your message. Please try again.',\r\n                        timestamp: new Date().toISOString(),\r\n                        isError: true\r\n                    }\r\n                });\r\n            }\r\n\r\n        } catch (error) {\r\n            // Handle network or other errors\r\n            dispatch({\r\n                type: 'ADD_MESSAGE',\r\n                payload: {\r\n                    id: Date.now(),\r\n                    message_type: 'system',\r\n                    \r\n                    timestamp: new Date().toISOString(),\r\n                    isError: true\r\n                }\r\n            });\r\n        } finally {\r\n            dispatch({ type: 'STOP_TYPING' });\r\n            setIsLoading(false);\r\n        }\r\n    }, [state.currentSession, state.coins, state.streak, state.level, state.experience, apiCall, dispatch]);\r\n\r\n    // Handle message reactions\r\n    const handleMessageReaction = useCallback((messageId, reaction) => {\r\n        // Update message in local state\r\n        dispatch({\r\n            type: 'SET_MESSAGES',\r\n            payload: state.messages.map(msg => \r\n                msg.id === messageId\r\n                    ? {\r\n                        ...msg,\r\n                        user_reactions: [\r\n                            ...(msg.user_reactions || []),\r\n                            { reaction, timestamp: new Date().toISOString() }\r\n                        ]\r\n                    }\r\n                    : msg\r\n            )\r\n        });\r\n\r\n        // Could send to backend for persistence\r\n        // apiCall(`/chat/messages/${messageId}/react`, { method: 'POST', body: JSON.stringify({ reaction }) });\r\n    }, [state.messages, dispatch]);\r\n\r\n    // Handle music suggestion clicks\r\n    const handleMusicSuggestion = useCallback((suggestion) => {\r\n        // Open music platform based on suggestion\r\n        let url = '';\r\n        switch (suggestion.platform) {\r\n            case 'spotify':\r\n                url = `https://open.spotify.com/search/${encodeURIComponent(suggestion.title)}`;\r\n                break;\r\n            case 'youtube':\r\n                url = `https://www.youtube.com/results?search_query=${encodeURIComponent(suggestion.title)}`;\r\n                break;\r\n            default:\r\n                url = `https://www.google.com/search?q=${encodeURIComponent(suggestion.title + ' music')}`;\r\n        }\r\n\r\n        window.open(url, '_blank');\r\n\r\n        // Track music suggestion usage\r\n        dispatch({\r\n            type: 'SET_CURRENTLY_PLAYING',\r\n            payload: suggestion\r\n        });\r\n    }, [dispatch]);\r\n\r\n    return (\r\n        <div className=\"chat-interface\">\r\n            {/* Chat header with session info */}\r\n            <div className=\"chat-header\">\r\n                <div className=\"chat-title\">\r\n                    <h2>💬 Chat with MoodMate</h2>\r\n                    {state.currentSession && (\r\n                        <span className=\"session-info\">\r\n                            Session: {state.currentSession.session_name || 'Current Chat'}\r\n                        </span>\r\n                    )}\r\n                </div>\r\n\r\n                {/* Current mood indicator */}\r\n                {state.currentMood && state.currentMood !== 'neutral' && (\r\n                    <div className=\"current-mood-indicator\">\r\n                        <span className=\"mood-label\">Current mood:</span>\r\n                        <span className={`mood-badge mood-${state.currentMood}`}>\r\n                            {state.currentMood}\r\n                        </span>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* Messages container */}\r\n            <div className=\"chat-messages\" ref={messagesEndRef}>\r\n                {state.messages.length === 0 ? (\r\n                    // Welcome message for new chats\r\n                    <div className=\"welcome-message\">\r\n                        <div className=\"welcome-avatar\">🤖</div>\r\n                        <div className=\"welcome-text\">\r\n                            <h3>Hi {state.user?.display_name || 'there'}! 👋</h3>\r\n                            <p>\r\n                                I'm MoodMate, your AI mental health companion. I'm here to listen, \r\n                                support, and help you on your wellness journey.\r\n                            </p>\r\n                            <p>\r\n                                How are you feeling today? You can share in English, Hindi, or \r\n                                even mix both (Hinglish) - I understand all of them!\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    // Render all messages\r\n                    state.messages.map((message, index) => (\r\n                        <ChatMessage\r\n                            key={message.id}\r\n                            message={message}\r\n                            isOwn={message.message_type === 'user'}\r\n                            showAvatar={index === 0 || state.messages[index - 1]?.message_type !== message.message_type}\r\n                            onReaction={handleMessageReaction}\r\n                            onMusicSuggestion={handleMusicSuggestion}\r\n                        />\r\n                    ))\r\n                )}\r\n\r\n                {/* Typing indicator */}\r\n                {state.isTyping && <TypingIndicator />}\r\n            </div>\r\n\r\n            {/* Chat input */}\r\n            <ChatInput\r\n                onSendMessage={handleSendMessage}\r\n                isLoading={isLoading}\r\n                placeholder=\"Share what's on your mind... मन की बात कहें...\"\r\n            />\r\n\r\n            {/* Crisis Detection Modal */}\r\n            {crisisDetected && (\r\n                <CrisisModal\r\n                    isOpen={true}\r\n                    onClose={() => setCrisisDetected(null)}\r\n                    message={crisisDetected.message}\r\n                    resources={crisisDetected.resources}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n});\r\n\r\n/**\r\n * ========================================================================\r\n * ADDITIONAL COMPONENTS CONTINUED...\r\n * [Due to length constraints, I'll provide the key remaining components]\r\n * ========================================================================\r\n */\r\n\r\n/**\r\n * Crisis Intervention Modal\r\n * Critical safety feature for mental health crisis situations\r\n */\r\nconst CrisisModal = memo(({ isOpen, onClose, message, resources = [] }) => {\r\n    if (!isOpen) return null;\r\n\r\n    return createPortal(\r\n        <div className=\"modal-overlay crisis-modal-overlay\">\r\n            <div className=\"modal-content crisis-modal\">\r\n                <div className=\"crisis-header\">\r\n                    <div className=\"crisis-icon\">🆘</div>\r\n                    <h2 className=\"crisis-title\">Immediate Support Available</h2>\r\n                </div>\r\n\r\n                <div className=\"crisis-content\">\r\n                    <p className=\"crisis-message\">\r\n                        I'm concerned about what you're going through. You don't have to face this alone.\r\n                        Your life has value and there are people who want to help you right now.\r\n                    </p>\r\n\r\n                    <div className=\"crisis-resources\">\r\n                        <h3>Get Help Now:</h3>\r\n                        <div className=\"resource-list\">\r\n                            <div className=\"resource-item urgent\">\r\n                                <strong>🇺🇸 Crisis Lifeline: 988</strong>\r\n                                <span>Free, confidential support 24/7</span>\r\n                            </div>\r\n                            <div className=\"resource-item urgent\">\r\n                                <strong>📱 Text HOME to 741741</strong>\r\n                                <span>Crisis Text Line - immediate help</span>\r\n                            </div>\r\n                            <div className=\"resource-item urgent\">\r\n                                <strong>🇮🇳 AASRA: +91-22-27546669</strong>\r\n                                <span>India suicide prevention helpline</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"crisis-emergency\">\r\n                        <p>⚠️ <strong>If you're in immediate danger, please call emergency services (911/112) or go to your nearest emergency room.</strong></p>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"crisis-actions\">\r\n                    <button className=\"btn btn-primary crisis-btn\" onClick={onClose}>\r\n                        I understand - Continue conversation\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>,\r\n        document.body\r\n    );\r\n});\r\n\r\n/**\r\n * Main Application Component\r\n * Root component that manages authentication and app routing\r\n */\r\nconst App = () => {\r\n    const [state, dispatch] = useReducer(appStateReducer, initialAppState);\r\n    const [authMode, setAuthMode] = useState('login'); // 'login' or 'register'\r\n\r\n    // Initialize app and check authentication\r\n    useEffect(() => {\r\n        initializeApp();\r\n    }, []);\r\n\r\n    // Initialize application with authentication check\r\n    const initializeApp = async () => {\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/api/auth/profile', {\r\n                credentials: 'include'\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                if (data.success) {\r\n                    dispatch({\r\n                        type: 'LOGIN_SUCCESS',\r\n                        payload: { user: data.data.profile }\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log('Not authenticated:', error);\r\n        } finally {\r\n            dispatch({ type: 'SET_LOADING', payload: false });\r\n        }\r\n    };\r\n\r\n    // Handle successful authentication\r\n    const handleAuthSuccess = useCallback((authData) => {\r\n        dispatch({\r\n            type: 'LOGIN_SUCCESS',\r\n            payload: authData\r\n        });\r\n\r\n        // Show welcome notification\r\n        dispatch({\r\n            type: 'ADD_NOTIFICATION',\r\n            payload: {\r\n                id: Date.now(),\r\n                type: 'welcome',\r\n                title: 'Welcome to MoodMate!',\r\n                message: `Hi ${authData.user.display_name}! Ready to start your wellness journey?`,\r\n                timestamp: new Date().toISOString()\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    // Handle logout\r\n    const handleLogout = useCallback(async () => {\r\n        try {\r\n            await fetch('http://127.0.0.1:5000/api/auth/logout', {\r\n                method: 'POST',\r\n                credentials: 'include'\r\n            });\r\n        } catch (error) {\r\n            console.error('Logout error:', error);\r\n        } finally {\r\n            dispatch({ type: 'LOGOUT' });\r\n        }\r\n    }, []);\r\n\r\n    // Provide context to all components\r\n    const contextValue = useMemo(() => ({\r\n        state,\r\n        dispatch,\r\n        handleLogout\r\n    }), [state, handleLogout]);\r\n\r\n    // Show loading screen during initialization\r\n    if (state.isLoading) {\r\n        return (\r\n            <div className=\"app-loading\">\r\n                <div className=\"loading-content\">\r\n                    <div className=\"loading-logo\">🧠</div>\r\n                    <h2>MoodMate</h2>\r\n                    <div className=\"loading-spinner\"></div>\r\n                    <p>Loading your mental wellness companion...</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <AppContext.Provider value={contextValue}>\r\n            <div className={`app ${state.theme}`}>\r\n                {!state.isAuthenticated ? (\r\n                    // Authentication screens\r\n                    <div className=\"auth-container\">\r\n                        <div className=\"auth-background\"></div>\r\n                        <div className=\"auth-content\">\r\n                            {authMode === 'login' ? (\r\n                                <LoginForm\r\n                                    onSuccess={handleAuthSuccess}\r\n                                    onSwitchToRegister={() => setAuthMode('register')}\r\n                                />\r\n                            ) : (\r\n                                <RegisterForm\r\n                                    onSuccess={handleAuthSuccess}\r\n                                    onSwitchToLogin={() => setAuthMode('login')}\r\n                                />\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    // Main application interface\r\n                    <div className=\"app-main\">\r\n                        {/* Global notifications */}\r\n                        {state.notifications.length > 0 && (\r\n                            <div className=\"notifications-container\">\r\n                                {state.notifications.slice(0, 3).map(notification => (\r\n                                    <div key={notification.id} className={`notification ${notification.type}`}>\r\n                                        <div className=\"notification-content\">\r\n                                            <div className=\"notification-title\">{notification.title}</div>\r\n                                            <div className=\"notification-message\">{notification.message}</div>\r\n                                        </div>\r\n                                        <button\r\n                                            className=\"notification-close\"\r\n                                            onClick={() => dispatch({\r\n                                                type: 'REMOVE_NOTIFICATION',\r\n                                                payload: notification.id\r\n                                            })}\r\n                                        >\r\n                                            ×\r\n                                        </button>\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        )}\r\n\r\n                        {/* Main chat interface */}\r\n                        <ChatInterface />\r\n\r\n                        {/* Additional UI components would go here */}\r\n                    </div>\r\n                )}\r\n\r\n                {/* Error display */}\r\n                {state.errors.length > 0 && (\r\n                    <div className=\"error-container\">\r\n                        {state.errors.slice(0, 2).map(error => (\r\n                            <div key={error.id} className=\"error-notification\">\r\n                                <span className=\"error-message\">{error.message}</span>\r\n                                <button\r\n                                    className=\"error-close\"\r\n                                    onClick={() => dispatch({ type: 'REMOVE_ERROR', payload: error.id })}\r\n                                >\r\n                                    ×\r\n                                </button>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </AppContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n\r\n"],"mappings":";;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IACRC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,MAAM,EACNC,WAAW,EACXC,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,QAAQ,EACRC,IAAI,QACD,OAAO;;AAEd;AACA,SACIC,YAAY,QACT,WAAW;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,UAAU,gBAAGP,aAAa,CAAC,CAAC;;AAElC;AACA,MAAMQ,WAAW,gBAAGR,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMS,WAAW,gBAAGT,aAAa,CAAC,CAAC;;AAEnC;AACA,MAAMU,YAAY,gBAAGV,aAAa,CAAC,CAAC;;AAEpC;AACA;AACA;AACA;AACA,MAAMW,eAAe,GAAG;EACpB;EACAC,IAAI,EAAE,IAAI;EACVC,eAAe,EAAE,KAAK;EACtBC,SAAS,EAAE,IAAI;EAEf;EACAC,cAAc,EAAE,IAAI;EACpBC,QAAQ,EAAE,EAAE;EACZC,QAAQ,EAAE,KAAK;EACfC,UAAU,EAAE,EAAE;EAEd;EACAC,SAAS,EAAE,MAAM;EACjBC,gBAAgB,EAAE,KAAK;EACvBC,SAAS,EAAE,IAAI;EACfC,KAAK,EAAE,eAAe;EAEtB;EACAC,KAAK,EAAE,CAAC;EACRC,MAAM,EAAE,CAAC;EACTC,KAAK,EAAE,CAAC;EACRC,UAAU,EAAE,CAAC;EAEb;EACAC,cAAc,EAAE,EAAE;EAClBC,aAAa,EAAE,EAAE;EAEjB;EACAC,UAAU,EAAE,IAAI;EAChBC,UAAU,EAAE,EAAE;EACdC,UAAU,EAAE,EAAE;EAEd;EACAC,WAAW,EAAE,EAAE;EACfC,WAAW,EAAE,SAAS;EACtBC,SAAS,EAAE,CAAC,CAAC;EAEb;EACAC,gBAAgB,EAAE,EAAE;EACpBC,gBAAgB,EAAE,IAAI;EAEtB;EACAC,MAAM,EAAE,EAAE;EACVC,YAAY,EAAE,SAAS;EACvBC,gBAAgB,EAAE;AACtB,CAAC;;AAED;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,KAAK,EAAEC,MAAM,EAAE;EACpC,QAAQA,MAAM,CAACC,IAAI;IACf;IACA,KAAK,eAAe;MAChB,OAAO;QACH,GAAGF,KAAK;QACR7B,IAAI,EAAE8B,MAAM,CAACE,OAAO,CAAChC,IAAI;QACzBC,eAAe,EAAE,IAAI;QACrBC,SAAS,EAAE,KAAK;QAChBS,KAAK,EAAEmB,MAAM,CAACE,OAAO,CAAChC,IAAI,CAACiC,WAAW;QACtCrB,MAAM,EAAEkB,MAAM,CAACE,OAAO,CAAChC,IAAI,CAACkC,cAAc;QAC1CrB,KAAK,EAAEiB,MAAM,CAACE,OAAO,CAAChC,IAAI,CAACa,KAAK;QAChCC,UAAU,EAAEgB,MAAM,CAACE,OAAO,CAAChC,IAAI,CAACmC;MACpC,CAAC;IAEL,KAAK,QAAQ;MACT,OAAO;QACH,GAAGpC,eAAe;QAClBG,SAAS,EAAE;MACf,CAAC;IAEL,KAAK,mBAAmB;MACpB,OAAO;QACH,GAAG2B,KAAK;QACRlB,KAAK,EAAEmB,MAAM,CAACE,OAAO,CAACrB,KAAK;QAC3BC,MAAM,EAAEkB,MAAM,CAACE,OAAO,CAACpB,MAAM;QAC7BC,KAAK,EAAEiB,MAAM,CAACE,OAAO,CAACnB,KAAK;QAC3BC,UAAU,EAAEgB,MAAM,CAACE,OAAO,CAAClB;MAC/B,CAAC;;IAEL;IACA,KAAK,aAAa;MACd,OAAO;QACH,GAAGe,KAAK;QACRzB,QAAQ,EAAE,CAAC,GAAGyB,KAAK,CAACzB,QAAQ,EAAE0B,MAAM,CAACE,OAAO;MAChD,CAAC;IAEL,KAAK,cAAc;MACf,OAAO;QACH,GAAGH,KAAK;QACRzB,QAAQ,EAAE0B,MAAM,CAACE;MACrB,CAAC;IAEL,KAAK,cAAc;MACf,OAAO;QACH,GAAGH,KAAK;QACRxB,QAAQ,EAAE,IAAI;QACdC,UAAU,EAAE;MAChB,CAAC;IAEL,KAAK,eAAe;MAChB,OAAO;QACH,GAAGuB,KAAK;QACRvB,UAAU,EAAEwB,MAAM,CAACE;MACvB,CAAC;IAEL,KAAK,aAAa;MACd,OAAO;QACH,GAAGH,KAAK;QACRxB,QAAQ,EAAE,KAAK;QACfC,UAAU,EAAE;MAChB,CAAC;IAEL,KAAK,qBAAqB;MACtB,OAAO;QACH,GAAGuB,KAAK;QACR1B,cAAc,EAAE2B,MAAM,CAACE;MAC3B,CAAC;;IAEL;IACA,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRtB,SAAS,EAAEuB,MAAM,CAACE;MACtB,CAAC;IAEL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRrB,gBAAgB,EAAE,CAACqB,KAAK,CAACrB;MAC7B,CAAC;IAEL,KAAK,YAAY;MACb,OAAO;QACH,GAAGqB,KAAK;QACRpB,SAAS,EAAEqB,MAAM,CAACE;MACtB,CAAC;IAEL,KAAK,aAAa;MACd,OAAO;QACH,GAAGH,KAAK;QACRpB,SAAS,EAAE;MACf,CAAC;IAEL,KAAK,WAAW;MACZ,OAAO;QACH,GAAGoB,KAAK;QACRnB,KAAK,EAAEoB,MAAM,CAACE;MAClB,CAAC;;IAEL;IACA,KAAK,qBAAqB;MACtB,OAAO;QACH,GAAGH,KAAK;QACRd,cAAc,EAAEe,MAAM,CAACE;MAC3B,CAAC;IAEL,KAAK,oBAAoB;MACrB,OAAO;QACH,GAAGH,KAAK;QACRd,cAAc,EAAE,CAACe,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACd,cAAc;MAC5D,CAAC;IAEL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGc,KAAK;QACRb,aAAa,EAAE,CAACc,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACb,aAAa,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACtE,CAAC;IACL,KAAK,qBAAqB;MACtB,OAAO;QACH,GAAGP,KAAK;QACRb,aAAa,EAAEa,KAAK,CAACb,aAAa,CAACqB,MAAM,CAACC,YAAY,IAAIA,YAAY,CAACC,EAAE,KAAKT,MAAM,CAACE,OAAO;MAChG,CAAC;;IAEL;IACA,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGH,KAAK;QACRR,WAAW,EAAES,MAAM,CAACE;MACxB,CAAC;IAEL,KAAK,kBAAkB;MACnB,OAAO;QACH,GAAGH,KAAK;QACRT,WAAW,EAAEU,MAAM,CAACE;MACxB,CAAC;IAEL,KAAK,eAAe;MAChB,OAAO;QACH,GAAGH,KAAK;QACRP,SAAS,EAAEQ,MAAM,CAACE;MACtB,CAAC;;IAEL;IACA,KAAK,uBAAuB;MACxB,OAAO;QACH,GAAGH,KAAK;QACRN,gBAAgB,EAAEO,MAAM,CAACE;MAC7B,CAAC;IAEL,KAAK,uBAAuB;MACxB,OAAO;QACH,GAAGH,KAAK;QACRL,gBAAgB,EAAEM,MAAM,CAACE;MAC7B,CAAC;;IAEL;IACA,KAAK,iBAAiB;MAClB,OAAO;QACH,GAAGH,KAAK;QACRZ,UAAU,EAAEa,MAAM,CAACE;MACvB,CAAC;IAEL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRX,UAAU,EAAE,CAACY,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACX,UAAU,CAACkB,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACjE,CAAC;IAEL,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGP,KAAK;QACRV,UAAU,EAAEW,MAAM,CAACE;MACvB,CAAC;;IAEL;IACA,KAAK,WAAW;MACZ,OAAO;QACH,GAAGH,KAAK;QACRJ,MAAM,EAAE,CAACK,MAAM,CAACE,OAAO,EAAE,GAAGH,KAAK,CAACJ,MAAM,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACxD,CAAC;IAEL,KAAK,cAAc;MACf,OAAO;QACH,GAAGP,KAAK;QACRJ,MAAM,EAAEI,KAAK,CAACJ,MAAM,CAACY,MAAM,CAACG,KAAK,IAAIA,KAAK,CAACD,EAAE,KAAKT,MAAM,CAACE,OAAO;MACpE,CAAC;IAEL,KAAK,aAAa;MACd,OAAO;QACH,GAAGH,KAAK;QACR3B,SAAS,EAAE4B,MAAM,CAACE;MACtB,CAAC;IAEL,KAAK,uBAAuB;MACxB,OAAO;QACH,GAAGH,KAAK;QACRF,gBAAgB,EAAEG,MAAM,CAACE;MAC7B,CAAC;IAEL;MACIS,OAAO,CAACC,IAAI,CAAC,sBAAsB,EAAEZ,MAAM,CAACC,IAAI,CAAC;MACjD,OAAOF,KAAK;EACpB;AACJ;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAASc,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,OAAO,GAAGxD,UAAU,CAACM,UAAU,CAAC;EACtC,IAAI,CAACkD,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACvE;EACA,OAAOD,OAAO;AAClB;;AAEA;AACA;AACA;AACA;AAHAD,EAAA,CARSD,WAAW;AAYpB,SAASI,MAAMA,CAAA,EAAG;EAAAC,GAAA;EACd,MAAM;IAAEC;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EAElC,MAAMO,OAAO,GAAGhE,WAAW,CAAC,OAAOiE,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;IAC1D,IAAI;MACA;MACA,MAAMC,cAAc,GAAG;QACnBC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,WAAW,EAAE,SAAS;QAAE;QACxB,GAAGJ;MACP,CAAC;;MAED;MACA,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4BP,QAAQ,EAAE,EAAEE,cAAc,CAAC;;MAEpF;MACA,IAAI,CAACI,QAAQ,CAACE,EAAE,EAAE;QACd,MAAMC,SAAS,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACzD,MAAM,IAAIhB,KAAK,CAACc,SAAS,CAACG,OAAO,IAAI,QAAQN,QAAQ,CAACO,MAAM,IAAIP,QAAQ,CAACQ,UAAU,EAAE,CAAC;MAC1F;;MAEA;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClC,OAAOK,IAAI;IAEf,CAAC,CAAC,OAAO1B,KAAK,EAAE;MACZ;MACAS,QAAQ,CAAC;QACLlB,IAAI,EAAE,WAAW;QACjBC,OAAO,EAAE;UACLO,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;UACdL,OAAO,EAAEvB,KAAK,CAACuB,OAAO;UACtBhC,IAAI,EAAE,WAAW;UACjBsC,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;QACtC;MACJ,CAAC,CAAC;;MAEF;MACA,MAAM9B,KAAK;IACf;EACJ,CAAC,EAAE,CAACS,QAAQ,CAAC,CAAC;EAEd,OAAO;IAAEC;EAAQ,CAAC;AACtB;;AAEA;AACA;AACA;AACA;AAHAF,GAAA,CAhDSD,MAAM;EAAA,QACUJ,WAAW;AAAA;AAmDpC,SAAS4B,kBAAkBA,CAACC,IAAI,EAAEC,KAAK,GAAG,EAAE,EAAEC,UAAU,GAAG,GAAG,EAAE;EAAAC,GAAA;EAC5D,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAG/F,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACuB,QAAQ,EAAEyE,WAAW,CAAC,GAAGhG,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMiG,UAAU,GAAG9F,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAM+F,QAAQ,GAAG/F,MAAM,CAAC,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACZ,IAAI,CAACyF,IAAI,EAAE;MACPK,gBAAgB,CAAC,EAAE,CAAC;MACpBC,WAAW,CAAC,KAAK,CAAC;MAClB;IACJ;;IAEA;IACAD,gBAAgB,CAAC,EAAE,CAAC;IACpBC,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAACC,OAAO,GAAG,CAAC;;IAEpB;IACA,MAAMC,WAAW,GAAGA,CAAA,KAAM;MACtB,MAAMC,YAAY,GAAGA,CAAA,KAAM;QACvB,IAAIH,QAAQ,CAACC,OAAO,GAAGT,IAAI,CAACY,MAAM,EAAE;UAChCP,gBAAgB,CAACL,IAAI,CAACpC,KAAK,CAAC,CAAC,EAAE4C,QAAQ,CAACC,OAAO,GAAG,CAAC,CAAC,CAAC;UACrDD,QAAQ,CAACC,OAAO,EAAE;UAClBF,UAAU,CAACE,OAAO,GAAGI,UAAU,CAACF,YAAY,EAAEV,KAAK,CAAC;QACxD,CAAC,MAAM;UACHK,WAAW,CAAC,KAAK,CAAC;QACtB;MACJ,CAAC;MAEDC,UAAU,CAACE,OAAO,GAAGI,UAAU,CAACF,YAAY,EAAET,UAAU,CAAC;IAC7D,CAAC;IAEDQ,WAAW,CAAC,CAAC;;IAEb;IACA,OAAO,MAAM;MACT,IAAIH,UAAU,CAACE,OAAO,EAAE;QACpBK,YAAY,CAACP,UAAU,CAACE,OAAO,CAAC;MACpC;IACJ,CAAC;EACL,CAAC,EAAE,CAACT,IAAI,EAAEC,KAAK,EAAEC,UAAU,CAAC,CAAC;EAE7B,OAAO;IAAEE,aAAa;IAAEvE;EAAS,CAAC;AACtC;;AAEA;AACA;AACA;AACA;AAHAsE,GAAA,CA9CSJ,kBAAkB;AAkD3B,SAASgB,aAAaA,CAACC,UAAU,EAAEC,QAAQ,GAAG,QAAQ,EAAE;EAAAC,GAAA;EACpD,MAAMC,SAAS,GAAG1G,MAAM,CAAC,IAAI,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACZ,IAAI4G,SAAS,CAACV,OAAO,EAAE;MACnBU,SAAS,CAACV,OAAO,CAACW,QAAQ,CAAC;QACvBC,GAAG,EAAEF,SAAS,CAACV,OAAO,CAACa,YAAY;QACnCL,QAAQ,EAAEA;MACd,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAACD,UAAU,EAAEC,QAAQ,CAAC,CAAC;EAE1B,OAAOE,SAAS;AACpB;;AAEA;AACA;AACA;AACA;AAHAD,GAAA,CAfSH,aAAa;AAmBtB,SAASQ,eAAeA,CAACC,GAAG,EAAEC,YAAY,EAAE;EAAAC,GAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtH,QAAQ,CAAC,MAAM;IACrC,IAAI;MACA,MAAMuH,IAAI,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAACR,GAAG,CAAC;MAC7C,OAAOK,IAAI,GAAGI,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,GAAGJ,YAAY;IACjD,CAAC,CAAC,OAAOzD,KAAK,EAAE;MACZC,OAAO,CAACC,IAAI,CAAC,mCAAmCsD,GAAG,IAAI,EAAExD,KAAK,CAAC;MAC/D,OAAOyD,YAAY;IACvB;EACJ,CAAC,CAAC;EAEF,MAAMU,cAAc,GAAGzH,WAAW,CAAE0H,QAAQ,IAAK;IAC7C,IAAI;MACAR,QAAQ,CAACQ,QAAQ,CAAC;MAClBN,MAAM,CAACC,YAAY,CAACM,OAAO,CAACb,GAAG,EAAES,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC;IAC9D,CAAC,CAAC,OAAOpE,KAAK,EAAE;MACZC,OAAO,CAACC,IAAI,CAAC,mCAAmCsD,GAAG,IAAI,EAAExD,KAAK,CAAC;IACnE;EACJ,CAAC,EAAE,CAACwD,GAAG,CAAC,CAAC;EAET,OAAO,CAACG,KAAK,EAAEQ,cAAc,CAAC;AAClC;;AAEA;AACA;AACA;AACA;AAHAT,GAAA,CAvBSH,eAAe;AA2BxB,SAASgB,gBAAgBA,CAAA,EAAG;EAAAC,GAAA;EACxB,MAAMC,UAAU,GAAG/H,WAAW,CAAEsF,IAAI,IAAK;IACrC,IAAI,CAACA,IAAI,EAAE,OAAO;MAAE0C,IAAI,EAAE,SAAS;MAAEC,UAAU,EAAE,CAAC;MAAEC,QAAQ,EAAE;IAAG,CAAC;IAElE,MAAMC,YAAY,GAAG;MACjBC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;MACjIC,GAAG,EAAE,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,WAAW,EAAE,OAAO,CAAC;MACtGC,OAAO,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAE,WAAW,EAAE,KAAK,CAAC;MAC9GC,KAAK,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC;MAC5FC,OAAO,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,cAAc,EAAE,MAAM,CAAC;MAC5FC,IAAI,EAAE,CAAC,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ;IACzF,CAAC;IAED,MAAMC,SAAS,GAAGpD,IAAI,CAACqD,WAAW,CAAC,CAAC;IACpC,MAAMC,KAAK,GAAGF,SAAS,CAACG,KAAK,CAAC,KAAK,CAAC;IACpC,MAAMC,UAAU,GAAG,CAAC,CAAC;IACrB,MAAMC,aAAa,GAAG,EAAE;;IAExB;IACAC,MAAM,CAACC,OAAO,CAACd,YAAY,CAAC,CAACe,OAAO,CAAC,CAAC,CAAClB,IAAI,EAAEE,QAAQ,CAAC,KAAK;MACvD,IAAIiB,KAAK,GAAG,CAAC;MACbjB,QAAQ,CAACgB,OAAO,CAACE,OAAO,IAAI;QACxB,MAAMC,KAAK,GAAG,CAACX,SAAS,CAACY,KAAK,CAAC,IAAIC,MAAM,CAAC,MAAMH,OAAO,KAAK,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,EAAElD,MAAM;QACjF,IAAImD,KAAK,GAAG,CAAC,EAAE;UACXF,KAAK,IAAIE,KAAK;UACdN,aAAa,CAACS,IAAI,CAACJ,OAAO,CAAC;QAC/B;MACJ,CAAC,CAAC;MACFN,UAAU,CAACd,IAAI,CAAC,GAAGmB,KAAK;IAC5B,CAAC,CAAC;;IAEF;IACA,MAAMM,YAAY,GAAGT,MAAM,CAACU,MAAM,CAACZ,UAAU,CAAC,CAACa,MAAM,CAAC,CAACC,GAAG,EAAET,KAAK,KAAKS,GAAG,GAAGT,KAAK,EAAE,CAAC,CAAC;IAErF,IAAIM,YAAY,KAAK,CAAC,EAAE;MACpB,OAAO;QAAEzB,IAAI,EAAE,SAAS;QAAEC,UAAU,EAAE,CAAC;QAAEC,QAAQ,EAAE;MAAG,CAAC;IAC3D;IAEA,MAAM2B,YAAY,GAAGb,MAAM,CAACC,OAAO,CAACH,UAAU,CAAC,CAACa,MAAM,CAAC,CAACG,CAAC,EAAEC,CAAC,KACxDjB,UAAU,CAACgB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGhB,UAAU,CAACiB,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGD,CAAC,GAAGC,CAC9C,CAAC,CAAC,CAAC,CAAC;IAEJ,MAAM9B,UAAU,GAAG+B,IAAI,CAACC,GAAG,CAACnB,UAAU,CAACe,YAAY,CAAC,GAAGjB,KAAK,CAAC1C,MAAM,GAAG,EAAE,EAAE,CAAC,CAAC;IAE5E,OAAO;MACH8B,IAAI,EAAE6B,YAAY;MAClB5B,UAAU,EAAE+B,IAAI,CAACE,KAAK,CAACjC,UAAU,GAAG,GAAG,CAAC,GAAG,GAAG;MAC9CC,QAAQ,EAAEa,aAAa,CAAC7F,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;MACnCiH,SAAS,EAAErB;IACf,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEf;EAAW,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHAD,GAAA,CA7DSD,gBAAgB;AAiEzB,MAAMuC,SAAS,gBAAAC,GAAA,cAAGhK,IAAI,CAAAiK,EAAA,GAAAD,GAAA,CAAC,CAAC;EAAEE,SAAS;EAAEC;AAAmB,CAAC,KAAK;EAAAH,GAAA;EAC1D,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAG9K,QAAQ,CAAC;IACrC+K,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE;EACd,CAAC,CAAC;EACF,MAAM,CAAC5J,SAAS,EAAE6J,YAAY,CAAC,GAAGjL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2C,MAAM,EAAEuI,SAAS,CAAC,GAAGlL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM;IAAEoE;EAAQ,CAAC,GAAGH,MAAM,CAAC,CAAC;;EAE5B;EACA,MAAMkH,iBAAiB,GAAG/K,WAAW,CAAEgL,CAAC,IAAK;IACzC,MAAM;MAAEC,IAAI;MAAEhE;IAAM,CAAC,GAAG+D,CAAC,CAACE,MAAM;IAChCR,WAAW,CAACS,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACF,IAAI,GAAGhE;IAAM,CAAC,CAAC,CAAC;;IAEjD;IACA,IAAI1E,MAAM,CAAC0I,IAAI,CAAC,EAAE;MACdH,SAAS,CAACK,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,IAAI,GAAG;MAAG,CAAC,CAAC,CAAC;IAChD;EACJ,CAAC,EAAE,CAAC1I,MAAM,CAAC,CAAC;;EAEZ;EACA,MAAM6I,YAAY,GAAGpL,WAAW,CAAC,MAAM;IACnC,MAAMqL,SAAS,GAAG,CAAC,CAAC;IAEpB,IAAI,CAACZ,QAAQ,CAACE,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;MAC3BD,SAAS,CAACV,QAAQ,GAAG,sBAAsB;IAC/C,CAAC,MAAM,IAAIF,QAAQ,CAACE,QAAQ,CAACzE,MAAM,GAAG,CAAC,EAAE;MACrCmF,SAAS,CAACV,QAAQ,GAAG,wCAAwC;IACjE;IAEA,IAAI,CAACF,QAAQ,CAACG,QAAQ,EAAE;MACpBS,SAAS,CAACT,QAAQ,GAAG,sBAAsB;IAC/C,CAAC,MAAM,IAAIH,QAAQ,CAACG,QAAQ,CAAC1E,MAAM,GAAG,CAAC,EAAE;MACrCmF,SAAS,CAACT,QAAQ,GAAG,wCAAwC;IACjE;IAEAE,SAAS,CAACO,SAAS,CAAC;IACpB,OAAOrC,MAAM,CAACuC,IAAI,CAACF,SAAS,CAAC,CAACnF,MAAM,KAAK,CAAC;EAC9C,CAAC,EAAE,CAACuE,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMe,YAAY,GAAGxL,WAAW,CAAC,MAAOgL,CAAC,IAAK;IAC1CA,CAAC,CAACS,cAAc,CAAC,CAAC;IAElB,IAAI,CAACL,YAAY,CAAC,CAAC,EAAE;MACjB;IACJ;IAEAP,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACA,MAAMtG,QAAQ,GAAG,MAAMP,OAAO,CAAC,aAAa,EAAE;QAC1CI,MAAM,EAAE,MAAM;QACdsH,IAAI,EAAEnE,IAAI,CAACK,SAAS,CAAC6C,QAAQ;MACjC,CAAC,CAAC;MAEF,IAAIlG,QAAQ,CAACoH,OAAO,EAAE;QAClBpB,SAAS,CAAChG,QAAQ,CAACS,IAAI,CAAC;MAC5B,CAAC,MAAM;QACH8F,SAAS,CAAC;UAAEc,MAAM,EAAErH,QAAQ,CAACM,OAAO,IAAI;QAAe,CAAC,CAAC;MAC7D;IACJ,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACZwH,SAAS,CAAC;QAAEc,MAAM,EAAEtI,KAAK,CAACuB,OAAO,IAAI;MAAkC,CAAC,CAAC;IAC7E,CAAC,SAAS;MACNgG,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACJ,QAAQ,EAAEW,YAAY,EAAEpH,OAAO,EAAEuG,SAAS,CAAC,CAAC;EAEhD,oBACI/J,OAAA;IAAKqL,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACjCtL,OAAA;MAAKqL,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtL,OAAA;QAAIqL,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxD1L,OAAA;QAAGqL,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAgD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,eAEN1L,OAAA;MAAM2L,QAAQ,EAAEX,YAAa;MAACK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACvDtL,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAO4L,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1L,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXQ,EAAE,EAAC,UAAU;UACb4H,IAAI,EAAC,UAAU;UACfhE,KAAK,EAAEwD,QAAQ,CAACE,QAAS;UACzB0B,QAAQ,EAAEtB,iBAAkB;UAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACoI,QAAQ,GAAG,OAAO,GAAG,EAAE,EAAG;UAC1D2B,WAAW,EAAC,8BAA8B;UAC1CC,QAAQ,EAAEvL,SAAU;UACpBwL,YAAY,EAAC;QAAU;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B,CAAC,EACD3J,MAAM,CAACoI,QAAQ,iBACZnK,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAACoI;QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACvD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAO4L,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1L,OAAA;UACIqC,IAAI,EAAC,UAAU;UACfQ,EAAE,EAAC,UAAU;UACb4H,IAAI,EAAC,UAAU;UACfhE,KAAK,EAAEwD,QAAQ,CAACG,QAAS;UACzByB,QAAQ,EAAEtB,iBAAkB;UAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACqI,QAAQ,GAAG,OAAO,GAAG,EAAE,EAAG;UAC1D0B,WAAW,EAAC,qBAAqB;UACjCC,QAAQ,EAAEvL,SAAU;UACpBwL,YAAY,EAAC;QAAkB;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,EACD3J,MAAM,CAACqI,QAAQ,iBACZpK,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAACqI;QAAQ;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACvD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAEL3J,MAAM,CAACqJ,MAAM,iBACVpL,OAAA;QAAKqL,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAC9BvJ,MAAM,CAACqJ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACR,eAED1L,OAAA;QACIqC,IAAI,EAAC,QAAQ;QACbgJ,SAAS,EAAC,0BAA0B;QACpCU,QAAQ,EAAEvL,SAAU;QAAA8K,QAAA,EAEnB9K,SAAS,gBACNR,OAAA;UAAMqL,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACzBtL,OAAA;YAAMqL,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,iBAE7C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAEP;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAET1L,OAAA;QAAKqL,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxBtL,OAAA;UAAAsL,QAAA,GAAG,wBACuB,EAAC,GAAG,eAC1BtL,OAAA;YACIqC,IAAI,EAAC,QAAQ;YACb4J,OAAO,EAAEjC,kBAAmB;YAC5BqB,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC/B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;EAAA,QAjJuBrI,MAAM;AAAA,EAiJ7B,CAAC;EAAA,QAjJsBA,MAAM;AAAA,EAiJ5B;;AAEF;AACA;AACA;AACA;AAHA6I,GAAA,GA1JMtC,SAAS;AA8Jf,MAAMuC,YAAY,gBAAAC,GAAA,cAAGvM,IAAI,CAAAwM,GAAA,GAAAD,GAAA,CAAC,CAAC;EAAErC,SAAS;EAAEuC;AAAgB,CAAC,KAAK;EAAAF,GAAA;EAC1D,MAAM,CAACnC,QAAQ,EAAEC,WAAW,CAAC,GAAG9K,QAAQ,CAAC;IACrC+K,QAAQ,EAAE,EAAE;IACZoC,KAAK,EAAE,EAAE;IACTnC,QAAQ,EAAE,EAAE;IACZoC,eAAe,EAAE,EAAE;IACnBC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;EACjB,CAAC,CAAC;EACF,MAAM,CAAClM,SAAS,EAAE6J,YAAY,CAAC,GAAGjL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2C,MAAM,EAAEuI,SAAS,CAAC,GAAGlL,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACuN,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGxN,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM;IAAEoE;EAAQ,CAAC,GAAGH,MAAM,CAAC,CAAC;;EAE5B;EACA,MAAMwJ,yBAAyB,GAAGrN,WAAW,CAAE4K,QAAQ,IAAK;IACxD,IAAI0C,QAAQ,GAAG,CAAC;IAChB,IAAI1C,QAAQ,CAAC1E,MAAM,IAAI,CAAC,EAAEoH,QAAQ,IAAI,CAAC;IACvC,IAAI,OAAO,CAACC,IAAI,CAAC3C,QAAQ,CAAC,EAAE0C,QAAQ,IAAI,CAAC;IACzC,IAAI,OAAO,CAACC,IAAI,CAAC3C,QAAQ,CAAC,EAAE0C,QAAQ,IAAI,CAAC;IACzC,IAAI,OAAO,CAACC,IAAI,CAAC3C,QAAQ,CAAC,EAAE0C,QAAQ,IAAI,CAAC;IACzC,IAAI,cAAc,CAACC,IAAI,CAAC3C,QAAQ,CAAC,EAAE0C,QAAQ,IAAI,CAAC;IAChD,OAAOA,QAAQ;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMvC,iBAAiB,GAAG/K,WAAW,CAAEgL,CAAC,IAAK;IACzC,MAAM;MAAEC,IAAI;MAAEhE,KAAK;MAAEpE,IAAI;MAAE2K;IAAQ,CAAC,GAAGxC,CAAC,CAACE,MAAM;IAC/C,MAAMxD,QAAQ,GAAG7E,IAAI,KAAK,UAAU,GAAG2K,OAAO,GAAGvG,KAAK;IAEtDyD,WAAW,CAACS,IAAI,KAAK;MAAE,GAAGA,IAAI;MAAE,CAACF,IAAI,GAAGvD;IAAS,CAAC,CAAC,CAAC;;IAEpD;IACA,IAAIuD,IAAI,KAAK,UAAU,EAAE;MACrBmC,mBAAmB,CAACC,yBAAyB,CAACpG,KAAK,CAAC,CAAC;IACzD;;IAEA;IACA,IAAI1E,MAAM,CAAC0I,IAAI,CAAC,EAAE;MACdH,SAAS,CAACK,IAAI,KAAK;QAAE,GAAGA,IAAI;QAAE,CAACF,IAAI,GAAG;MAAG,CAAC,CAAC,CAAC;IAChD;EACJ,CAAC,EAAE,CAAC1I,MAAM,EAAE8K,yBAAyB,CAAC,CAAC;;EAEvC;EACA,MAAMjC,YAAY,GAAGpL,WAAW,CAAC,MAAM;IACnC,MAAMqL,SAAS,GAAG,CAAC,CAAC;;IAEpB;IACA,IAAI,CAACZ,QAAQ,CAACE,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;MAC3BD,SAAS,CAACV,QAAQ,GAAG,sBAAsB;IAC/C,CAAC,MAAM,IAAIF,QAAQ,CAACE,QAAQ,CAACzE,MAAM,GAAG,CAAC,EAAE;MACrCmF,SAAS,CAACV,QAAQ,GAAG,wCAAwC;IACjE,CAAC,MAAM,IAAI,CAAC,iBAAiB,CAAC4C,IAAI,CAAC9C,QAAQ,CAACE,QAAQ,CAAC,EAAE;MACnDU,SAAS,CAACV,QAAQ,GAAG,6DAA6D;IACtF;;IAEA;IACA,IAAI,CAACF,QAAQ,CAACsC,KAAK,CAACzB,IAAI,CAAC,CAAC,EAAE;MACxBD,SAAS,CAAC0B,KAAK,GAAG,mBAAmB;IACzC,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAACQ,IAAI,CAAC9C,QAAQ,CAACsC,KAAK,CAAC,EAAE;MAC3D1B,SAAS,CAAC0B,KAAK,GAAG,oCAAoC;IAC1D;;IAEA;IACA,IAAI,CAACtC,QAAQ,CAACwC,WAAW,CAAC3B,IAAI,CAAC,CAAC,EAAE;MAC9BD,SAAS,CAAC4B,WAAW,GAAG,0BAA0B;IACtD,CAAC,MAAM,IAAIxC,QAAQ,CAACwC,WAAW,CAAC/G,MAAM,GAAG,CAAC,EAAE;MACxCmF,SAAS,CAAC4B,WAAW,GAAG,4CAA4C;IACxE;;IAEA;IACA,IAAI,CAACxC,QAAQ,CAACG,QAAQ,EAAE;MACpBS,SAAS,CAACT,QAAQ,GAAG,sBAAsB;IAC/C,CAAC,MAAM,IAAIH,QAAQ,CAACG,QAAQ,CAAC1E,MAAM,GAAG,CAAC,EAAE;MACrCmF,SAAS,CAACT,QAAQ,GAAG,wCAAwC;IACjE;;IAEA;IACA,IAAI,CAACH,QAAQ,CAACuC,eAAe,EAAE;MAC3B3B,SAAS,CAAC2B,eAAe,GAAG,8BAA8B;IAC9D,CAAC,MAAM,IAAIvC,QAAQ,CAACG,QAAQ,KAAKH,QAAQ,CAACuC,eAAe,EAAE;MACvD3B,SAAS,CAAC2B,eAAe,GAAG,wBAAwB;IACxD;;IAEA;IACA,IAAI,CAACvC,QAAQ,CAACyC,WAAW,EAAE;MACvB7B,SAAS,CAAC6B,WAAW,GAAG,0CAA0C;IACtE;IAEApC,SAAS,CAACO,SAAS,CAAC;IACpB,OAAOrC,MAAM,CAACuC,IAAI,CAACF,SAAS,CAAC,CAACnF,MAAM,KAAK,CAAC;EAC9C,CAAC,EAAE,CAACuE,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMe,YAAY,GAAGxL,WAAW,CAAC,MAAOgL,CAAC,IAAK;IAC1CA,CAAC,CAACS,cAAc,CAAC,CAAC;IAElB,IAAI,CAACL,YAAY,CAAC,CAAC,EAAE;MACjB;IACJ;IAEAP,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MACA,MAAMtG,QAAQ,GAAG,MAAMP,OAAO,CAAC,gBAAgB,EAAE;QAC7CI,MAAM,EAAE,MAAM;QACdsH,IAAI,EAAEnE,IAAI,CAACK,SAAS,CAAC;UACjB+C,QAAQ,EAAEF,QAAQ,CAACE,QAAQ;UAC3BoC,KAAK,EAAEtC,QAAQ,CAACsC,KAAK;UACrBnC,QAAQ,EAAEH,QAAQ,CAACG,QAAQ;UAC3B6C,YAAY,EAAEhD,QAAQ,CAACwC;QAC3B,CAAC;MACL,CAAC,CAAC;MAEF,IAAI1I,QAAQ,CAACoH,OAAO,EAAE;QAClBpB,SAAS,CAAChG,QAAQ,CAACS,IAAI,CAAC;MAC5B,CAAC,MAAM;QACH8F,SAAS,CAAC;UAAEc,MAAM,EAAErH,QAAQ,CAACM,OAAO,IAAI;QAAsB,CAAC,CAAC;MACpE;IACJ,CAAC,CAAC,OAAOvB,KAAK,EAAE;MACZwH,SAAS,CAAC;QAAEc,MAAM,EAAEtI,KAAK,CAACuB,OAAO,IAAI;MAAyC,CAAC,CAAC;IACpF,CAAC,SAAS;MACNgG,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAACJ,QAAQ,EAAEW,YAAY,EAAEpH,OAAO,EAAEuG,SAAS,CAAC,CAAC;EAEhD,oBACI/J,OAAA;IAAKqL,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACpCtL,OAAA;MAAKqL,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtL,OAAA;QAAIqL,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C1L,OAAA;QAAGqL,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eAEN1L,OAAA;MAAM2L,QAAQ,EAAEX,YAAa;MAACK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBACvDtL,OAAA;QAAKqL,SAAS,EAAC,UAAU;QAAAC,QAAA,gBACrBtL,OAAA;UAAKqL,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBtL,OAAA;YAAO4L,OAAO,EAAC,aAAa;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEpD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR1L,OAAA;YACIqC,IAAI,EAAC,MAAM;YACXQ,EAAE,EAAC,aAAa;YAChB4H,IAAI,EAAC,aAAa;YAClBhE,KAAK,EAAEwD,QAAQ,CAACwC,WAAY;YAC5BZ,QAAQ,EAAEtB,iBAAkB;YAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAAC0K,WAAW,GAAG,OAAO,GAAG,EAAE,EAAG;YAC7DX,WAAW,EAAC,mBAAmB;YAC/BC,QAAQ,EAAEvL,SAAU;YACpBwL,YAAY,EAAC;UAAM;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,EACD3J,MAAM,CAAC0K,WAAW,iBACfzM,OAAA;YAAMqL,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEvJ,MAAM,CAAC0K;UAAW;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAC1D;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eAEN1L,OAAA;UAAKqL,SAAS,EAAC,YAAY;UAAAC,QAAA,gBACvBtL,OAAA;YAAO4L,OAAO,EAAC,UAAU;YAACP,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAEjD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACR1L,OAAA;YACIqC,IAAI,EAAC,MAAM;YACXQ,EAAE,EAAC,UAAU;YACb4H,IAAI,EAAC,UAAU;YACfhE,KAAK,EAAEwD,QAAQ,CAACE,QAAS;YACzB0B,QAAQ,EAAEtB,iBAAkB;YAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACoI,QAAQ,GAAG,OAAO,GAAG,EAAE,EAAG;YAC1D2B,WAAW,EAAC,mBAAmB;YAC/BC,QAAQ,EAAEvL,SAAU;YACpBwL,YAAY,EAAC;UAAU;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1B,CAAC,EACD3J,MAAM,CAACoI,QAAQ,iBACZnK,OAAA;YAAMqL,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAEvJ,MAAM,CAACoI;UAAQ;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CACvD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAO4L,OAAO,EAAC,OAAO;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAE9C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1L,OAAA;UACIqC,IAAI,EAAC,OAAO;UACZQ,EAAE,EAAC,OAAO;UACV4H,IAAI,EAAC,OAAO;UACZhE,KAAK,EAAEwD,QAAQ,CAACsC,KAAM;UACtBV,QAAQ,EAAEtB,iBAAkB;UAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACwK,KAAK,GAAG,OAAO,GAAG,EAAE,EAAG;UACvDT,WAAW,EAAC,wBAAwB;UACpCC,QAAQ,EAAEvL,SAAU;UACpBwL,YAAY,EAAC;QAAO;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,EACD3J,MAAM,CAACwK,KAAK,iBACTvM,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAACwK;QAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACpD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAO4L,OAAO,EAAC,UAAU;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAEjD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1L,OAAA;UACIqC,IAAI,EAAC,UAAU;UACfQ,EAAE,EAAC,UAAU;UACb4H,IAAI,EAAC,UAAU;UACfhE,KAAK,EAAEwD,QAAQ,CAACG,QAAS;UACzByB,QAAQ,EAAEtB,iBAAkB;UAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACqI,QAAQ,GAAG,OAAO,GAAG,EAAE,EAAG;UAC1D0B,WAAW,EAAC,0BAA0B;UACtCC,QAAQ,EAAEvL,SAAU;UACpBwL,YAAY,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,EACDzB,QAAQ,CAACG,QAAQ,iBACdpK,OAAA;UAAKqL,SAAS,EAAC,mBAAmB;UAAAC,QAAA,gBAC9BtL,OAAA;YAAKqL,SAAS,EAAC,uBAAuB;YAAAC,QAAA,eAClCtL,OAAA;cACIqL,SAAS,EAAE,mCAAmCsB,gBAAgB,EAAG;cACjEO,KAAK,EAAE;gBAAEC,KAAK,EAAE,GAAIR,gBAAgB,GAAG,CAAC,GAAI,GAAG;cAAI;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eACN1L,OAAA;YAAMqL,SAAS,EAAC,wBAAwB;YAAAC,QAAA,EACnCqB,gBAAgB,IAAI,CAAC,GAAG,MAAM,GAAGA,gBAAgB,IAAI,CAAC,GAAG,QAAQ,GAAG;UAAQ;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACR,EACA3J,MAAM,CAACqI,QAAQ,iBACZpK,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAACqI;QAAQ;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CACvD;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAO4L,OAAO,EAAC,iBAAiB;UAACP,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAExD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACR1L,OAAA;UACIqC,IAAI,EAAC,UAAU;UACfQ,EAAE,EAAC,iBAAiB;UACpB4H,IAAI,EAAC,iBAAiB;UACtBhE,KAAK,EAAEwD,QAAQ,CAACuC,eAAgB;UAChCX,QAAQ,EAAEtB,iBAAkB;UAC5Bc,SAAS,EAAE,cAActJ,MAAM,CAACyK,eAAe,GAAG,OAAO,GAAG,EAAE,EAAG;UACjEV,WAAW,EAAC,uBAAuB;UACnCC,QAAQ,EAAEvL,SAAU;UACpBwL,YAAY,EAAC;QAAc;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,EACD3J,MAAM,CAACyK,eAAe,iBACnBxM,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAACyK;QAAe;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAC9D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,2BAA2B;QAAAC,QAAA,gBACtCtL,OAAA;UAAOqL,SAAS,EAAC,gBAAgB;UAAAC,QAAA,gBAC7BtL,OAAA;YACIqC,IAAI,EAAC,UAAU;YACfoI,IAAI,EAAC,aAAa;YAClBuC,OAAO,EAAE/C,QAAQ,CAACyC,WAAY;YAC9Bb,QAAQ,EAAEtB,iBAAkB;YAC5Bc,SAAS,EAAC,gBAAgB;YAC1BU,QAAQ,EAAEvL;UAAU;YAAA+K,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACvB,CAAC,eACF1L,OAAA;YAAMqL,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACzC1L,OAAA;YAAMqL,SAAS,EAAC,eAAe;YAAAC,QAAA,GAAC,gBACd,EAAC,GAAG,eAClBtL,OAAA;cAAGoN,IAAI,EAAC,QAAQ;cAAC/B,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAgB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,EAAC,GAAG,EAAC,KACxD,EAAC,GAAG,eACP1L,OAAA;cAAGoN,IAAI,EAAC,UAAU;cAAC/B,SAAS,EAAC,MAAM;cAAAC,QAAA,EAAC;YAAc;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,EACP3J,MAAM,CAAC2K,WAAW,iBACf1M,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAEvJ,MAAM,CAAC2K;QAAW;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAC1D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAEL3J,MAAM,CAACqJ,MAAM,iBACVpL,OAAA;QAAKqL,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAC9BvJ,MAAM,CAACqJ;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb,CACR,eAED1L,OAAA;QACIqC,IAAI,EAAC,QAAQ;QACbgJ,SAAS,EAAC,0BAA0B;QACpCU,QAAQ,EAAEvL,SAAU;QAAA8K,QAAA,EAEnB9K,SAAS,gBACNR,OAAA;UAAMqL,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACzBtL,OAAA;YAAMqL,SAAS,EAAC;UAAiB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,uBAE7C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,GAEP;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eAET1L,OAAA;QAAKqL,SAAS,EAAC,aAAa;QAAAC,QAAA,eACxBtL,OAAA;UAAAsL,QAAA,GAAG,0BACyB,EAAC,GAAG,eAC5BtL,OAAA;YACIqC,IAAI,EAAC,QAAQ;YACb4J,OAAO,EAAEK,eAAgB;YACzBjB,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC/B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;EAAA,QAxSuBrI,MAAM;AAAA,EAwS7B,CAAC;EAAA,QAxSsBA,MAAM;AAAA,EAwS5B;;AAEF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHAgK,GAAA,GA5TMlB,YAAY;AAgUlB,MAAMmB,eAAe,gBAAGzN,IAAI,CAAA0N,GAAA,GAACA,CAAA,KAAM;EAC/B,oBACIvN,OAAA;IAAKqL,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC7BtL,OAAA;MAAKqL,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtL,OAAA;QAAKqL,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClC1L,OAAA;QAAKqL,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAClC1L,OAAA;QAAKqL,SAAS,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACN1L,OAAA;MAAMqL,SAAS,EAAC,aAAa;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzD,CAAC;AAEd,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AAHA8B,GAAA,GAbMF,eAAe;AAiBrB,MAAMG,WAAW,gBAAAC,GAAA,cAAG7N,IAAI,CAAA8N,GAAA,GAAAD,GAAA,CAAC,CAAC;EAAErJ,OAAO;EAAEuJ,KAAK;EAAEC,UAAU,GAAG,IAAI;EAAEC,UAAU;EAAEC;AAAkB,CAAC,KAAK;EAAA,IAAAC,qBAAA;EAAAN,GAAA;EAC/F,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAG9O,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC+O,cAAc,EAAEC,iBAAiB,CAAC,GAAGhP,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM;IAAE8F,aAAa;IAAEvE;EAAS,CAAC,GAAGkE,kBAAkB,CAClD,CAAC+I,KAAK,GAAIvJ,OAAO,CAACgK,OAAO,IAAI,EAAE,GAAI,EAAE,EACrC,EAAE,EACF,GACJ,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,CAAC;;EAErD;EACA,MAAMC,cAAc,GAAG/O,WAAW,CAAEgP,KAAK,IAAK;IAC1CV,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAGzJ,OAAO,CAACxB,EAAE,EAAE2L,KAAK,CAAC;IAC/BJ,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC,EAAE,CAAC/J,OAAO,CAACxB,EAAE,EAAEiL,UAAU,CAAC,CAAC;;EAE5B;EACA,MAAMW,gBAAgB,GAAGjP,WAAW,CAAEkP,UAAU,IAAK;IACjDX,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAGW,UAAU,CAAC;EACnC,CAAC,EAAE,CAACX,iBAAiB,CAAC,CAAC;EAEvB,oBACI/N,OAAA;IACIqL,SAAS,EAAE,gBAAgBuC,KAAK,GAAG,KAAK,GAAG,OAAO,EAAG;IACrDe,YAAY,EAAEA,CAAA,KAAMT,cAAc,CAAC,IAAI,CAAE;IACzCU,YAAY,EAAEA,CAAA,KAAMV,cAAc,CAAC,KAAK,CAAE;IAAA5C,QAAA,GAEzCuC,UAAU,IAAI,CAACD,KAAK,iBACjB5N,OAAA;MAAKqL,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC3BtL,OAAA;QAAKqL,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAEpC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACR,eAED1L,OAAA;MAAKqL,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5BtL,OAAA;QAAKqL,SAAS,EAAE,kBAAkBuC,KAAK,GAAG,KAAK,GAAG,OAAO,EAAG;QAAAtC,QAAA,gBAExDtL,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,GACxBsC,KAAK,GAAIvJ,OAAO,CAACgK,OAAO,IAAI,EAAE,GAAK1N,QAAQ,GAAGuE,aAAa,GAAIb,OAAO,CAACgK,OAAO,IAAI,EAAI,EACtF,CAACT,KAAK,IAAIjN,QAAQ,iBAAIX,OAAA;YAAMqL,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D,CAAC,EAGLrH,OAAO,CAACwK,iBAAiB,IAAIxK,OAAO,CAACwK,iBAAiB,CAACnJ,MAAM,GAAG,CAAC,iBAC9D1F,OAAA;UAAKqL,SAAS,EAAC,2BAA2B;UAAAC,QAAA,gBACtCtL,OAAA;YAAKqL,SAAS,EAAC,cAAc;YAAAC,QAAA,gBACzBtL,OAAA;cAAMqL,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACtC1L,OAAA;cAAMqL,SAAS,EAAC,aAAa;cAAAC,QAAA,EAAC;YAAoB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD,CAAC,eACN1L,OAAA;YAAKqL,SAAS,EAAC,YAAY;YAAAC,QAAA,EACtBjH,OAAO,CAACwK,iBAAiB,CAACC,GAAG,CAAC,CAACJ,UAAU,EAAEK,KAAK,kBAC7C/O,OAAA;cAEIqL,SAAS,EAAC,kBAAkB;cAC5BY,OAAO,EAAEA,CAAA,KAAMwC,gBAAgB,CAACC,UAAU,CAAE;cAAApD,QAAA,gBAE5CtL,OAAA;gBAAMqL,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAC3BoD,UAAU,CAACM,QAAQ,KAAK,SAAS,GAAG,IAAI,GACxCN,UAAU,CAACM,QAAQ,KAAK,SAAS,GAAG,IAAI,GAAG;cAAI;gBAAAzD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9C,CAAC,eACP1L,OAAA;gBAAMqL,SAAS,EAAC,YAAY;gBAAAC,QAAA,gBACxBtL,OAAA;kBAAMqL,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAEoD,UAAU,CAACO;gBAAK;kBAAA1D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC,eACtD1L,OAAA;kBAAMqL,SAAS,EAAC,YAAY;kBAAAC,QAAA,EAAEoD,UAAU,CAACrM;gBAAI;kBAAAkJ,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnD,CAAC;YAAA,GAXFqD,KAAK;cAAAxD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAYN,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,EAGA,EAAAsC,qBAAA,GAAA3J,OAAO,CAAC6K,cAAc,cAAAlB,qBAAA,uBAAtBA,qBAAA,CAAwBvM,UAAU,KAAI4C,OAAO,CAAC6K,cAAc,CAACzN,UAAU,CAACiE,MAAM,GAAG,CAAC,iBAC/E1F,OAAA;UAAKqL,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAC/BtL,OAAA;YAAKqL,SAAS,EAAC,mBAAmB;YAAAC,QAAA,gBAC9BtL,OAAA;cAAMqL,SAAS,EAAC,gBAAgB;cAAAC,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eAC1C1L,OAAA;cAAMqL,SAAS,EAAC,iBAAiB;cAAAC,QAAA,EAAC;YAAqB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eACN1L,OAAA;YAAKqL,SAAS,EAAC,iBAAiB;YAAAC,QAAA,EAC3BjH,OAAO,CAAC6K,cAAc,CAACzN,UAAU,CAACqN,GAAG,CAAC,CAACK,SAAS,EAAEJ,KAAK,kBACpD/O,OAAA;cAAiBqL,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBACvCtL,OAAA;gBAAKqL,SAAS,EAAC,gBAAgB;gBAAAC,QAAA,EAAE6D,SAAS,CAACF;cAAK;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACvD1L,OAAA;gBAAKqL,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAE6D,SAAS,CAACC;cAAW;gBAAA7D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpE1L,OAAA;gBAAKqL,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBAC7BtL,OAAA;kBAAMqL,SAAS,EAAC,WAAW;kBAAAC,QAAA,EAAC;gBAAE;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,EACpCyD,SAAS,CAACE,YAAY,EAAC,QAC5B;cAAA;gBAAA9D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GANAqD,KAAK;cAAAxD,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOV,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACR,eAGD1L,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,EACxB,IAAI7G,IAAI,CAACJ,OAAO,CAACM,SAAS,CAAC,CAAC2K,kBAAkB,CAAC,EAAE,EAAE;YAChDC,IAAI,EAAE,SAAS;YACfC,MAAM,EAAE;UACZ,CAAC;QAAC;UAAAjE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAGLuC,WAAW,iBACRjO,OAAA;QAAKqL,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BtL,OAAA;UACIqL,SAAS,EAAC,gBAAgB;UAC1BY,OAAO,EAAEA,CAAA,KAAMmC,iBAAiB,CAAC,CAACD,cAAc,CAAE;UAClDc,KAAK,EAAC,cAAc;UAAA3D,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT1L,OAAA;UACIqL,SAAS,EAAC,gBAAgB;UAC1BY,OAAO,EAAEA,CAAA,KAAMwD,SAAS,CAACC,SAAS,CAACC,SAAS,CAACtL,OAAO,CAACgK,OAAO,CAAE;UAC9DY,KAAK,EAAC,cAAc;UAAA3D,QAAA,EACvB;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CACR,EAGAyC,cAAc,iBACXnO,OAAA;QAAKqL,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BgD,SAAS,CAACQ,GAAG,CAAEN,KAAK,iBACjBxO,OAAA;UAEIqL,SAAS,EAAC,iBAAiB;UAC3BY,OAAO,EAAEA,CAAA,KAAMsC,cAAc,CAACC,KAAK,CAAE;UAAAlD,QAAA,EAEpCkD;QAAK,GAJDA,KAAK;UAAAjD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKN,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR,EAGArH,OAAO,CAACuL,cAAc,IAAIvL,OAAO,CAACuL,cAAc,CAAClK,MAAM,GAAG,CAAC,iBACxD1F,OAAA;QAAKqL,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAC7BjH,OAAO,CAACuL,cAAc,CAACd,GAAG,CAAC,CAACe,QAAQ,EAAEd,KAAK,kBACxC/O,OAAA;UAAkBqL,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EACvCuE,QAAQ,CAACA;QAAQ,GADXd,KAAK;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;EAAA,QArJuC7G,kBAAkB;AAAA,EAqJzD,CAAC;EAAA,QArJsCA,kBAAkB;AAAA,EAqJxD;;AAEF;AACA;AACA;AACA;AAHAiL,GAAA,GA1JMrC,WAAW;AA8JjB,MAAMsC,SAAS,gBAAAC,GAAA,cAAGnQ,IAAI,CAAAoQ,GAAA,GAAAD,GAAA,CAAC,CAAC;EAAEE,aAAa;EAAE1P,SAAS;EAAEsL,WAAW,GAAG;AAA+B,CAAC,KAAK;EAAAkE,GAAA;EACnG,MAAM,CAAC3L,OAAO,EAAE8L,UAAU,CAAC,GAAG/Q,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgR,YAAY,EAAEC,eAAe,CAAC,GAAGjR,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACkR,eAAe,EAAEC,kBAAkB,CAAC,GAAGnR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM;IAAEmI;EAAW,CAAC,GAAGF,gBAAgB,CAAC,CAAC;EACzC,MAAMmJ,WAAW,GAAGjR,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMkR,eAAe,GAAG;IACpB7I,KAAK,EAAE,CACH,gCAAgC,EAChC,6BAA6B,EAC7B,qBAAqB,CACxB;IACDC,GAAG,EAAE,CACD,2BAA2B,EAC3B,gCAAgC,EAChC,2BAA2B,CAC9B;IACDC,OAAO,EAAE,CACL,8BAA8B,EAC9B,yBAAyB,EACzB,0BAA0B,CAC7B;IACDE,OAAO,EAAE,CACL,yBAAyB,EACzB,oBAAoB,EACpB,kBAAkB;EAE1B,CAAC;;EAED;EACA,MAAM0I,mBAAmB,GAAGlR,WAAW,CAAEgL,CAAC,IAAK;IAC3C,MAAMmG,UAAU,GAAGnG,CAAC,CAACE,MAAM,CAACjE,KAAK;IACjC0J,UAAU,CAACQ,UAAU,CAAC;;IAEtB;IACA,IAAIH,WAAW,CAACjL,OAAO,EAAE;MACrBiL,WAAW,CAACjL,OAAO,CAAC2H,KAAK,CAAC0D,MAAM,GAAG,MAAM;MACzCJ,WAAW,CAACjL,OAAO,CAAC2H,KAAK,CAAC0D,MAAM,GAAGJ,WAAW,CAACjL,OAAO,CAACa,YAAY,GAAG,IAAI;IAC9E;;IAEA;IACA,IAAIuK,UAAU,CAAC7F,IAAI,CAAC,CAAC,CAACpF,MAAM,GAAG,EAAE,EAAE;MAC/B,MAAM8B,IAAI,GAAGD,UAAU,CAACoJ,UAAU,CAAC;MACnC,IAAInJ,IAAI,CAACC,UAAU,GAAG,GAAG,EAAE;QACvB4I,eAAe,CAAC7I,IAAI,CAAC;QACrB+I,kBAAkB,CAAC,KAAK,CAAC;MAC7B,CAAC,MAAM;QACHF,eAAe,CAAC,IAAI,CAAC;MACzB;IACJ,CAAC,MAAM;MACHA,eAAe,CAAC,IAAI,CAAC;IACzB;EACJ,CAAC,EAAE,CAAC9I,UAAU,CAAC,CAAC;;EAEhB;EACA,MAAMyD,YAAY,GAAGxL,WAAW,CAAEgL,CAAC,IAAK;IACpCA,CAAC,CAACS,cAAc,CAAC,CAAC;IAElB,IAAI5G,OAAO,CAACyG,IAAI,CAAC,CAAC,IAAI,CAACtK,SAAS,EAAE;MAC9B0P,aAAa,CAAC7L,OAAO,CAACyG,IAAI,CAAC,CAAC,EAAEsF,YAAY,CAAC;MAC3CD,UAAU,CAAC,EAAE,CAAC;MACdE,eAAe,CAAC,IAAI,CAAC;MACrBE,kBAAkB,CAAC,KAAK,CAAC;;MAEzB;MACA,IAAIC,WAAW,CAACjL,OAAO,EAAE;QACrBiL,WAAW,CAACjL,OAAO,CAAC2H,KAAK,CAAC0D,MAAM,GAAG,MAAM;MAC7C;IACJ;EACJ,CAAC,EAAE,CAACvM,OAAO,EAAE+L,YAAY,EAAE5P,SAAS,EAAE0P,aAAa,CAAC,CAAC;;EAErD;EACA,MAAMW,cAAc,GAAGrR,WAAW,CAAEgL,CAAC,IAAK;IACtC,IAAIA,CAAC,CAAClE,GAAG,KAAK,OAAO,IAAI,CAACkE,CAAC,CAACsG,QAAQ,EAAE;MAClCtG,CAAC,CAACS,cAAc,CAAC,CAAC;MAClBD,YAAY,CAACR,CAAC,CAAC;IACnB,CAAC,MAAM,IAAIA,CAAC,CAAClE,GAAG,KAAK,KAAK,IAAIgK,eAAe,EAAE;MAC3C9F,CAAC,CAACS,cAAc,CAAC,CAAC;MAClB;IACJ;EACJ,CAAC,EAAE,CAACD,YAAY,EAAEsF,eAAe,CAAC,CAAC;;EAEnC;EACA,MAAMS,aAAa,GAAGvR,WAAW,CAAEkP,UAAU,IAAK;IAAA,IAAAsC,oBAAA;IAC9Cb,UAAU,CAACzB,UAAU,CAAC;IACtB6B,kBAAkB,CAAC,KAAK,CAAC;IACzB,CAAAS,oBAAA,GAAAR,WAAW,CAACjL,OAAO,cAAAyL,oBAAA,uBAAnBA,oBAAA,CAAqBC,KAAK,CAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIjR,OAAA;IAAKqL,SAAS,EAAC,sBAAsB;IAAAC,QAAA,GAEhC8E,YAAY,IAAIA,YAAY,CAAC3I,UAAU,GAAG,GAAG,iBAC1CzH,OAAA;MAAKqL,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BtL,OAAA;QAAMqL,SAAS,EAAC,YAAY;QAAAC,QAAA,EACvB8E,YAAY,CAAC5I,IAAI,KAAK,OAAO,GAAG,IAAI,GACpC4I,YAAY,CAAC5I,IAAI,KAAK,KAAK,GAAG,IAAI,GAClC4I,YAAY,CAAC5I,IAAI,KAAK,SAAS,GAAG,IAAI,GACtC4I,YAAY,CAAC5I,IAAI,KAAK,SAAS,GAAG,IAAI,GACtC4I,YAAY,CAAC5I,IAAI,KAAK,OAAO,GAAG,IAAI,GAAG;MAAI;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACP1L,OAAA;QAAMqL,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,iBACT,EAAC8E,YAAY,CAAC5I,IAAI;MAAA;QAAA+D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACP1L,OAAA;QACIqL,SAAS,EAAC,oBAAoB;QAC9BY,OAAO,EAAEA,CAAA,KAAMsE,kBAAkB,CAAC,CAACD,eAAe,CAAE;QAAAhF,QAAA,EACvD;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CACR,EAGA4E,eAAe,IAAIF,YAAY,IAAIK,eAAe,CAACL,YAAY,CAAC5I,IAAI,CAAC,iBAClExH,OAAA;MAAKqL,SAAS,EAAC,qBAAqB;MAAAC,QAAA,gBAChCtL,OAAA;QAAKqL,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAC5D+E,eAAe,CAACL,YAAY,CAAC5I,IAAI,CAAC,CAACsH,GAAG,CAAC,CAACJ,UAAU,EAAEK,KAAK;QAAA,IAAAmC,GAAA,GAAAC,YAAA;QAAA,oBACtDnR,OAAA;UAEIqL,SAAS,EAAC,iBAAiB;UAC3BY,OAAO,EAAAiF,GAAA,CAAE;YAAAA,GAAA;YAAA,OAAMH,aAAa,CAACrC,UAAU,CAAC;UAAA;YAAA,QAAzBqC,aAAa;UAAA,EAAa;UAAAzF,QAAA,EAExCoD;QAAU,GAJNK,KAAK;UAAAxD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKN,CAAC;MAAA,CACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CACR,eAGD1L,OAAA;MAAM2L,QAAQ,EAAEX,YAAa;MAACK,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBACrDtL,OAAA;QAAKqL,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BtL,OAAA;UACIoR,GAAG,EAAEZ,WAAY;UACjB/J,KAAK,EAAEpC,OAAQ;UACfwH,QAAQ,EAAE6E,mBAAoB;UAC9BW,UAAU,EAAER,cAAe;UAC3B/E,WAAW,EAAEA,WAAY;UACzBT,SAAS,EAAC,eAAe;UACzBU,QAAQ,EAAEvL,SAAU;UACpB8Q,IAAI,EAAE,CAAE;UACRC,SAAS,EAAE;QAAK;UAAAhG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eAGF1L,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,GACxBjH,OAAO,CAACqB,MAAM,EAAC,OACpB;QAAA;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAGN1L,OAAA;UACIqC,IAAI,EAAC,QAAQ;UACbgJ,SAAS,EAAC,aAAa;UACvBU,QAAQ,EAAE,CAAC1H,OAAO,CAACyG,IAAI,CAAC,CAAC,IAAItK,SAAU;UACvCyO,KAAK,EAAC,sBAAsB;UAAA3D,QAAA,EAE3B9K,SAAS,gBACNR,OAAA;YAAMqL,SAAS,EAAC;UAAuB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,gBAE/C1L,OAAA;YAAMqL,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QACtC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,eAGN1L,OAAA;QAAKqL,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACxBtL,OAAA;UAAAsL,QAAA,EAAM;QAA6C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,EACzD0E,YAAY,iBACTpQ,OAAA;UAAMqL,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAE5B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;EAAA,QA9K0BrE,gBAAgB;AAAA,EA8K1C,CAAC;EAAA,QA9KyBA,gBAAgB;AAAA,EA8KzC;;AAEF;AACA;AACA;AACA;AAHAmK,GAAA,GApLMzB,SAAS;AAwLf,MAAM0B,aAAa,gBAAAC,IAAA,cAAG7R,IAAI,CAAA8R,GAAA,GAAAD,IAAA,CAAC,MAAM;EAAA,IAAAE,WAAA;EAAAF,IAAA;EAC7B,MAAM;IAAEvP,KAAK;IAAEoB;EAAS,CAAC,GAAGN,WAAW,CAAC,CAAC;EACzC,MAAM;IAAEO;EAAQ,CAAC,GAAGH,MAAM,CAAC,CAAC;EAC5B,MAAM,CAAC7C,SAAS,EAAE6J,YAAY,CAAC,GAAGjL,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACyS,cAAc,EAAEC,iBAAiB,CAAC,GAAG1S,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM2S,cAAc,GAAGlM,aAAa,CAAC1D,KAAK,CAACzB,QAAQ,CAAC;;EAEpD;EACArB,SAAS,CAAC,MAAM;IACZ2S,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,eAAe,GAAGxS,WAAW,CAAC,YAAY;IAC5C,IAAI;MACA,MAAMuE,QAAQ,GAAG,MAAMP,OAAO,CAAC,gBAAgB,CAAC;MAChD,IAAIO,QAAQ,CAACoH,OAAO,IAAIpH,QAAQ,CAACS,IAAI,CAACyN,QAAQ,CAACvM,MAAM,GAAG,CAAC,EAAE;QACvD,MAAMwM,aAAa,GAAGnO,QAAQ,CAACS,IAAI,CAACyN,QAAQ,CAAC,CAAC,CAAC;QAC/C1O,QAAQ,CAAC;UAAElB,IAAI,EAAE,qBAAqB;UAAEC,OAAO,EAAE4P;QAAc,CAAC,CAAC;;QAEjE;QACA,MAAMC,gBAAgB,GAAG,MAAM3O,OAAO,CAAC,kBAAkB0O,aAAa,CAACrP,EAAE,WAAW,CAAC;QACrF,IAAIsP,gBAAgB,CAAChH,OAAO,EAAE;UAC1B5H,QAAQ,CAAC;YAAElB,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAE6P,gBAAgB,CAAC3N,IAAI,CAAC9D;UAAS,CAAC,CAAC;QAC/E;MACJ;IACJ,CAAC,CAAC,OAAOoC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACxD;EACJ,CAAC,EAAE,CAACU,OAAO,EAAED,QAAQ,CAAC,CAAC;;EAEvB;EACA,MAAM6O,iBAAiB,GAAG5S,WAAW,CAAC,OAAO6S,cAAc,EAAEjC,YAAY,GAAG,IAAI,KAAK;IAAA,IAAAkC,qBAAA;IACjF,IAAI,CAACD,cAAc,CAACvH,IAAI,CAAC,CAAC,EAAE;;IAE5B;IACA,MAAMyH,WAAW,GAAG;MAChB1P,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;MACd8N,UAAU,GAAAF,qBAAA,GAAEnQ,KAAK,CAAC1B,cAAc,cAAA6R,qBAAA,uBAApBA,qBAAA,CAAsBzP,EAAE;MACpC4P,YAAY,EAAE,MAAM;MACpBpE,OAAO,EAAEgE,cAAc;MACvB1N,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;MACnC8N,aAAa,EAAEtC;IACnB,CAAC;IAED7M,QAAQ,CAAC;MAAElB,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEiQ;IAAY,CAAC,CAAC;IACvDhP,QAAQ,CAAC;MAAElB,IAAI,EAAE;IAAe,CAAC,CAAC;IAClCgI,YAAY,CAAC,IAAI,CAAC;IAElB,IAAI;MAAA,IAAAsI,sBAAA;MACA;MACA,MAAM5O,QAAQ,GAAG,MAAMP,OAAO,CAAC,YAAY,EAAE;QACzCI,MAAM,EAAE,MAAM;QACdsH,IAAI,EAAEnE,IAAI,CAACK,SAAS,CAAC;UACjB/C,OAAO,EAAEgO,cAAc;UACvBG,UAAU,GAAAG,sBAAA,GAAExQ,KAAK,CAAC1B,cAAc,cAAAkS,sBAAA,uBAApBA,sBAAA,CAAsB9P,EAAE;UACpC+P,YAAY,EAAExC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE5I;QAChC,CAAC;MACL,CAAC,CAAC;MAEF,IAAIzD,QAAQ,CAACoH,OAAO,EAAE;QAAA,IAAA0H,qBAAA,EAAAC,qBAAA;QAClB;QACA,IAAI,CAAC3Q,KAAK,CAAC1B,cAAc,EAAE;UACvB8C,QAAQ,CAAC;YACLlB,IAAI,EAAE,qBAAqB;YAC3BC,OAAO,EAAE;cAAEO,EAAE,EAAEkB,QAAQ,CAACS,IAAI,CAACgO;YAAW;UAC5C,CAAC,CAAC;QACN;;QAEA;QACAjP,QAAQ,CAAC;UAAElB,IAAI,EAAE,aAAa;UAAEC,OAAO,EAAEyB,QAAQ,CAACS,IAAI,CAACuO;QAAY,CAAC,CAAC;;QAErE;QACA,IAAIhP,QAAQ,CAACS,IAAI,CAACwO,eAAe,EAAE;UAC/BlB,iBAAiB,CAAC;YACdzN,OAAO,EAAEN,QAAQ,CAACS,IAAI,CAACuO,WAAW,CAAC1E,OAAO;YAC1C4E,SAAS,EAAElP,QAAQ,CAACS,IAAI,CAAC0O,gBAAgB,IAAI;UACjD,CAAC,CAAC;QACN;;QAEA;QACA,IAAInP,QAAQ,CAACS,IAAI,CAAC2O,iBAAiB,EAAE;UAAA,IAAAC,gBAAA;UACjC,MAAMC,MAAM,GAAGtP,QAAQ,CAACS,IAAI,CAAC2O,iBAAiB;UAC9C5P,QAAQ,CAAC;YACLlB,IAAI,EAAE,mBAAmB;YACzBC,OAAO,EAAE;cACLrB,KAAK,EAAEkB,KAAK,CAAClB,KAAK,IAAIoS,MAAM,CAACC,aAAa,IAAI,CAAC,CAAC;cAChDpS,MAAM,EAAEiB,KAAK,CAACjB,MAAM;cACpBC,KAAK,EAAE,EAAAiS,gBAAA,GAAAC,MAAM,CAACE,QAAQ,cAAAH,gBAAA,uBAAfA,gBAAA,CAAiBI,SAAS,KAAIrR,KAAK,CAAChB,KAAK;cAChDC,UAAU,EAAEe,KAAK,CAACf,UAAU,IAAIiS,MAAM,CAACI,UAAU,IAAI,CAAC;YAC1D;UACJ,CAAC,CAAC;;UAEF;UACA,IAAIJ,MAAM,CAACE,QAAQ,EAAE;YACjBhQ,QAAQ,CAAC;cACLlB,IAAI,EAAE,kBAAkB;cACxBC,OAAO,EAAE;gBACLO,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;gBACdrC,IAAI,EAAE,UAAU;gBAChB4M,KAAK,EAAE,WAAW;gBAClB5K,OAAO,EAAE,sCAAsCgP,MAAM,CAACE,QAAQ,CAACC,SAAS,GAAG;gBAC3E7O,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;cACtC;YACJ,CAAC,CAAC;UACN;QACJ;;QAEA;QACA,KAAAiO,qBAAA,GAAI9O,QAAQ,CAACS,IAAI,CAACkP,aAAa,cAAAb,qBAAA,eAA3BA,qBAAA,CAA6BrL,IAAI,EAAE;UACnCjE,QAAQ,CAAC;YACLlB,IAAI,EAAE,kBAAkB;YACxBC,OAAO,EAAEyB,QAAQ,CAACS,IAAI,CAACkP,aAAa,CAAClM;UACzC,CAAC,CAAC;QACN;;QAEA;QACA,IAAI,EAAAsL,qBAAA,GAAA/O,QAAQ,CAACS,IAAI,CAACqK,iBAAiB,cAAAiE,qBAAA,uBAA/BA,qBAAA,CAAiCpN,MAAM,IAAG,CAAC,EAAE;UAC7CnC,QAAQ,CAAC;YACLlB,IAAI,EAAE,uBAAuB;YAC7BC,OAAO,EAAEyB,QAAQ,CAACS,IAAI,CAACqK;UAC3B,CAAC,CAAC;QACN;MAEJ,CAAC,MAAM;QACH;QACAtL,QAAQ,CAAC;UACLlB,IAAI,EAAE,aAAa;UACnBC,OAAO,EAAE;YACLO,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;YACd+N,YAAY,EAAE,QAAQ;YACtBpE,OAAO,EAAE,0EAA0E;YACnF1J,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;YACnC+O,OAAO,EAAE;UACb;QACJ,CAAC,CAAC;MACN;IAEJ,CAAC,CAAC,OAAO7Q,KAAK,EAAE;MACZ;MACAS,QAAQ,CAAC;QACLlB,IAAI,EAAE,aAAa;QACnBC,OAAO,EAAE;UACLO,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;UACd+N,YAAY,EAAE,QAAQ;UAEtB9N,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;UACnC+O,OAAO,EAAE;QACb;MACJ,CAAC,CAAC;IACN,CAAC,SAAS;MACNpQ,QAAQ,CAAC;QAAElB,IAAI,EAAE;MAAc,CAAC,CAAC;MACjCgI,YAAY,CAAC,KAAK,CAAC;IACvB;EACJ,CAAC,EAAE,CAAClI,KAAK,CAAC1B,cAAc,EAAE0B,KAAK,CAAClB,KAAK,EAAEkB,KAAK,CAACjB,MAAM,EAAEiB,KAAK,CAAChB,KAAK,EAAEgB,KAAK,CAACf,UAAU,EAAEoC,OAAO,EAAED,QAAQ,CAAC,CAAC;;EAEvG;EACA,MAAMqQ,qBAAqB,GAAGpU,WAAW,CAAC,CAACqU,SAAS,EAAEhE,QAAQ,KAAK;IAC/D;IACAtM,QAAQ,CAAC;MACLlB,IAAI,EAAE,cAAc;MACpBC,OAAO,EAAEH,KAAK,CAACzB,QAAQ,CAACoO,GAAG,CAACgF,GAAG,IAC3BA,GAAG,CAACjR,EAAE,KAAKgR,SAAS,GACd;QACE,GAAGC,GAAG;QACNlE,cAAc,EAAE,CACZ,IAAIkE,GAAG,CAAClE,cAAc,IAAI,EAAE,CAAC,EAC7B;UAAEC,QAAQ;UAAElL,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;QAAE,CAAC;MAEzD,CAAC,GACCkP,GACV;IACJ,CAAC,CAAC;;IAEF;IACA;EACJ,CAAC,EAAE,CAAC3R,KAAK,CAACzB,QAAQ,EAAE6C,QAAQ,CAAC,CAAC;;EAE9B;EACA,MAAMwQ,qBAAqB,GAAGvU,WAAW,CAAEkP,UAAU,IAAK;IACtD;IACA,IAAIsF,GAAG,GAAG,EAAE;IACZ,QAAQtF,UAAU,CAACM,QAAQ;MACvB,KAAK,SAAS;QACVgF,GAAG,GAAG,mCAAmCC,kBAAkB,CAACvF,UAAU,CAACO,KAAK,CAAC,EAAE;QAC/E;MACJ,KAAK,SAAS;QACV+E,GAAG,GAAG,gDAAgDC,kBAAkB,CAACvF,UAAU,CAACO,KAAK,CAAC,EAAE;QAC5F;MACJ;QACI+E,GAAG,GAAG,mCAAmCC,kBAAkB,CAACvF,UAAU,CAACO,KAAK,GAAG,QAAQ,CAAC,EAAE;IAClG;IAEArI,MAAM,CAACsN,IAAI,CAACF,GAAG,EAAE,QAAQ,CAAC;;IAE1B;IACAzQ,QAAQ,CAAC;MACLlB,IAAI,EAAE,uBAAuB;MAC7BC,OAAO,EAAEoM;IACb,CAAC,CAAC;EACN,CAAC,EAAE,CAACnL,QAAQ,CAAC,CAAC;EAEd,oBACIvD,OAAA;IAAKqL,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE3BtL,OAAA;MAAKqL,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACxBtL,OAAA;QAAKqL,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACvBtL,OAAA;UAAAsL,QAAA,EAAI;QAAqB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC7BvJ,KAAK,CAAC1B,cAAc,iBACjBT,OAAA;UAAMqL,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,WAClB,EAACnJ,KAAK,CAAC1B,cAAc,CAAC0T,YAAY,IAAI,cAAc;QAAA;UAAA5I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,EAGLvJ,KAAK,CAACR,WAAW,IAAIQ,KAAK,CAACR,WAAW,KAAK,SAAS,iBACjD3B,OAAA;QAAKqL,SAAS,EAAC,wBAAwB;QAAAC,QAAA,gBACnCtL,OAAA;UAAMqL,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjD1L,OAAA;UAAMqL,SAAS,EAAE,mBAAmBlJ,KAAK,CAACR,WAAW,EAAG;UAAA2J,QAAA,EACnDnJ,KAAK,CAACR;QAAW;UAAA4J,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eAGN1L,OAAA;MAAKqL,SAAS,EAAC,eAAe;MAAC+F,GAAG,EAAEW,cAAe;MAAAzG,QAAA,GAC9CnJ,KAAK,CAACzB,QAAQ,CAACgF,MAAM,KAAK,CAAC;MAAA;MACxB;MACA1F,OAAA;QAAKqL,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BtL,OAAA;UAAKqL,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxC1L,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,gBACzBtL,OAAA;YAAAsL,QAAA,GAAI,KAAG,EAAC,EAAAsG,WAAA,GAAAzP,KAAK,CAAC7B,IAAI,cAAAsR,WAAA,uBAAVA,WAAA,CAAY3E,YAAY,KAAI,OAAO,EAAC,gBAAI;UAAA;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrD1L,OAAA;YAAAsL,QAAA,EAAG;UAGH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACJ1L,OAAA;YAAAsL,QAAA,EAAG;UAGH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;MAEN;MACAvJ,KAAK,CAACzB,QAAQ,CAACoO,GAAG,CAAC,CAACzK,OAAO,EAAE0K,KAAK;QAAA,IAAAqF,eAAA;QAAA,oBAC9BpU,OAAA,CAACyN,WAAW;UAERpJ,OAAO,EAAEA,OAAQ;UACjBuJ,KAAK,EAAEvJ,OAAO,CAACoO,YAAY,KAAK,MAAO;UACvC5E,UAAU,EAAEkB,KAAK,KAAK,CAAC,IAAI,EAAAqF,eAAA,GAAAjS,KAAK,CAACzB,QAAQ,CAACqO,KAAK,GAAG,CAAC,CAAC,cAAAqF,eAAA,uBAAzBA,eAAA,CAA2B3B,YAAY,MAAKpO,OAAO,CAACoO,YAAa;UAC5F3E,UAAU,EAAE8F,qBAAsB;UAClC7F,iBAAiB,EAAEgG;QAAsB,GALpC1P,OAAO,CAACxB,EAAE;UAAA0I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAMlB,CAAC;MAAA,CACL,CACJ,EAGAvJ,KAAK,CAACxB,QAAQ,iBAAIX,OAAA,CAACsN,eAAe;QAAA/B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC,eAGN1L,OAAA,CAAC+P,SAAS;MACNG,aAAa,EAAEkC,iBAAkB;MACjC5R,SAAS,EAAEA,SAAU;MACrBsL,WAAW,EAAC;IAAgD;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,EAGDmG,cAAc,iBACX7R,OAAA,CAACqU,WAAW;MACRC,MAAM,EAAE,IAAK;MACbC,OAAO,EAAEA,CAAA,KAAMzC,iBAAiB,CAAC,IAAI,CAAE;MACvCzN,OAAO,EAAEwN,cAAc,CAACxN,OAAQ;MAChC4O,SAAS,EAAEpB,cAAc,CAACoB;IAAU;MAAA1H,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;EAAA,QAvR+BzI,WAAW,EACnBI,MAAM,EAGHwC,aAAa;AAAA,EAmRvC,CAAC;EAAA,QAvR8B5C,WAAW,EACnBI,MAAM,EAGHwC,aAAa;AAAA,EAmRtC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAHA2O,IAAA,GAjSM/C,aAAa;AAqSnB,MAAM4C,WAAW,gBAAGxU,IAAI,CAAA4U,IAAA,GAACA,CAAC;EAAEH,MAAM;EAAEC,OAAO;EAAElQ,OAAO;EAAE4O,SAAS,GAAG;AAAG,CAAC,KAAK;EACvE,IAAI,CAACqB,MAAM,EAAE,OAAO,IAAI;EAExB,oBAAOxU,YAAY,cACfE,OAAA;IAAKqL,SAAS,EAAC,oCAAoC;IAAAC,QAAA,eAC/CtL,OAAA;MAAKqL,SAAS,EAAC,4BAA4B;MAAAC,QAAA,gBACvCtL,OAAA;QAAKqL,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1BtL,OAAA;UAAKqL,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrC1L,OAAA;UAAIqL,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAA2B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BtL,OAAA;UAAGqL,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAG9B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAEJ1L,OAAA;UAAKqL,SAAS,EAAC,kBAAkB;UAAAC,QAAA,gBAC7BtL,OAAA;YAAAsL,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtB1L,OAAA;YAAKqL,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAC1BtL,OAAA;cAAKqL,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACjCtL,OAAA;gBAAAsL,QAAA,EAAQ;cAAyB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC1C1L,OAAA;gBAAAsL,QAAA,EAAM;cAA+B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3C,CAAC,eACN1L,OAAA;cAAKqL,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACjCtL,OAAA;gBAAAsL,QAAA,EAAQ;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACvC1L,OAAA;gBAAAsL,QAAA,EAAM;cAAiC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,eACN1L,OAAA;cAAKqL,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACjCtL,OAAA;gBAAAsL,QAAA,EAAQ;cAA2B;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eAC5C1L,OAAA;gBAAAsL,QAAA,EAAM;cAAiC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,eAEN1L,OAAA;UAAKqL,SAAS,EAAC,kBAAkB;UAAAC,QAAA,eAC7BtL,OAAA;YAAAsL,QAAA,GAAG,eAAG,eAAAtL,OAAA;cAAAsL,QAAA,EAAQ;YAA6G;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEN1L,OAAA;QAAKqL,SAAS,EAAC,gBAAgB;QAAAC,QAAA,eAC3BtL,OAAA;UAAQqL,SAAS,EAAC,4BAA4B;UAACY,OAAO,EAAEsI,OAAQ;UAAAjJ,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC,EACNgJ,QAAQ,CAACxJ,IACb,CAAC;AACL,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AAHAyJ,IAAA,GAnDMN,WAAW;AAuDjB,MAAMO,GAAG,GAAGA,CAAA,KAAM;EAAAC,IAAA;EACd,MAAM,CAAC1S,KAAK,EAAEoB,QAAQ,CAAC,GAAGjE,UAAU,CAAC4C,eAAe,EAAE7B,eAAe,CAAC;EACtE,MAAM,CAACyU,QAAQ,EAAEC,WAAW,CAAC,GAAG3V,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;;EAEnD;EACAC,SAAS,CAAC,MAAM;IACZ2V,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMjR,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACnEF,WAAW,EAAE;MACjB,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACE,EAAE,EAAE;QACb,MAAMO,IAAI,GAAG,MAAMT,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClC,IAAIK,IAAI,CAAC2G,OAAO,EAAE;UACd5H,QAAQ,CAAC;YACLlB,IAAI,EAAE,eAAe;YACrBC,OAAO,EAAE;cAAEhC,IAAI,EAAEkE,IAAI,CAACA,IAAI,CAACyQ;YAAQ;UACvC,CAAC,CAAC;QACN;MACJ;IACJ,CAAC,CAAC,OAAOnS,KAAK,EAAE;MACZC,OAAO,CAACmS,GAAG,CAAC,oBAAoB,EAAEpS,KAAK,CAAC;IAC5C,CAAC,SAAS;MACNS,QAAQ,CAAC;QAAElB,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAE;MAAM,CAAC,CAAC;IACrD;EACJ,CAAC;;EAED;EACA,MAAM6S,iBAAiB,GAAG3V,WAAW,CAAE4V,QAAQ,IAAK;IAChD7R,QAAQ,CAAC;MACLlB,IAAI,EAAE,eAAe;MACrBC,OAAO,EAAE8S;IACb,CAAC,CAAC;;IAEF;IACA7R,QAAQ,CAAC;MACLlB,IAAI,EAAE,kBAAkB;MACxBC,OAAO,EAAE;QACLO,EAAE,EAAE4B,IAAI,CAACC,GAAG,CAAC,CAAC;QACdrC,IAAI,EAAE,SAAS;QACf4M,KAAK,EAAE,sBAAsB;QAC7B5K,OAAO,EAAE,MAAM+Q,QAAQ,CAAC9U,IAAI,CAAC2M,YAAY,yCAAyC;QAClFtI,SAAS,EAAE,IAAIF,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC;MACtC;IACJ,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMyQ,YAAY,GAAG7V,WAAW,CAAC,YAAY;IACzC,IAAI;MACA,MAAMwE,KAAK,CAAC,uCAAuC,EAAE;QACjDJ,MAAM,EAAE,MAAM;QACdE,WAAW,EAAE;MACjB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOhB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACzC,CAAC,SAAS;MACNS,QAAQ,CAAC;QAAElB,IAAI,EAAE;MAAS,CAAC,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMiT,YAAY,GAAG7V,OAAO,CAAC,OAAO;IAChC0C,KAAK;IACLoB,QAAQ;IACR8R;EACJ,CAAC,CAAC,EAAE,CAAClT,KAAK,EAAEkT,YAAY,CAAC,CAAC;;EAE1B;EACA,IAAIlT,KAAK,CAAC3B,SAAS,EAAE;IACjB,oBACIR,OAAA;MAAKqL,SAAS,EAAC,aAAa;MAAAC,QAAA,eACxBtL,OAAA;QAAKqL,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC5BtL,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtC1L,OAAA;UAAAsL,QAAA,EAAI;QAAQ;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjB1L,OAAA;UAAKqL,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC1L,OAAA;UAAAsL,QAAA,EAAG;QAAyC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAEd;EAEA,oBACI1L,OAAA,CAACC,UAAU,CAACsV,QAAQ;IAAC9O,KAAK,EAAE6O,YAAa;IAAAhK,QAAA,eACrCtL,OAAA;MAAKqL,SAAS,EAAE,OAAOlJ,KAAK,CAACnB,KAAK,EAAG;MAAAsK,QAAA,GAChC,CAACnJ,KAAK,CAAC5B,eAAe;MAAA;MACnB;MACAP,OAAA;QAAKqL,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC3BtL,OAAA;UAAKqL,SAAS,EAAC;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACvC1L,OAAA;UAAKqL,SAAS,EAAC,cAAc;UAAAC,QAAA,EACxBwJ,QAAQ,KAAK,OAAO,gBACjB9U,OAAA,CAAC4J,SAAS;YACNG,SAAS,EAAEoL,iBAAkB;YAC7BnL,kBAAkB,EAAEA,CAAA,KAAM+K,WAAW,CAAC,UAAU;UAAE;YAAAxJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,gBAEF1L,OAAA,CAACmM,YAAY;YACTpC,SAAS,EAAEoL,iBAAkB;YAC7B7I,eAAe,EAAEA,CAAA,KAAMyI,WAAW,CAAC,OAAO;UAAE;YAAAxJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/C;QACJ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;MAAA;MAEN;MACA1L,OAAA;QAAKqL,SAAS,EAAC,UAAU;QAAAC,QAAA,GAEpBnJ,KAAK,CAACb,aAAa,CAACoE,MAAM,GAAG,CAAC,iBAC3B1F,OAAA;UAAKqL,SAAS,EAAC,yBAAyB;UAAAC,QAAA,EACnCnJ,KAAK,CAACb,aAAa,CAACoB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACoM,GAAG,CAAClM,YAAY,iBAC7C5C,OAAA;YAA2BqL,SAAS,EAAE,gBAAgBzI,YAAY,CAACP,IAAI,EAAG;YAAAiJ,QAAA,gBACtEtL,OAAA;cAAKqL,SAAS,EAAC,sBAAsB;cAAAC,QAAA,gBACjCtL,OAAA;gBAAKqL,SAAS,EAAC,oBAAoB;gBAAAC,QAAA,EAAE1I,YAAY,CAACqM;cAAK;gBAAA1D,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC9D1L,OAAA;gBAAKqL,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAAE1I,YAAY,CAACyB;cAAO;gBAAAkH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjE,CAAC,eACN1L,OAAA;cACIqL,SAAS,EAAC,oBAAoB;cAC9BY,OAAO,EAAEA,CAAA,KAAM1I,QAAQ,CAAC;gBACpBlB,IAAI,EAAE,qBAAqB;gBAC3BC,OAAO,EAAEM,YAAY,CAACC;cAC1B,CAAC,CAAE;cAAAyI,QAAA,EACN;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAbH9I,YAAY,CAACC,EAAE;YAAA0I,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcpB,CACR;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CACR,eAGD1L,OAAA,CAACyR,aAAa;UAAAlG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGhB,CACR,EAGAvJ,KAAK,CAACJ,MAAM,CAAC2D,MAAM,GAAG,CAAC,iBACpB1F,OAAA;QAAKqL,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAC3BnJ,KAAK,CAACJ,MAAM,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACoM,GAAG,CAAChM,KAAK,iBAC/B9C,OAAA;UAAoBqL,SAAS,EAAC,oBAAoB;UAAAC,QAAA,gBAC9CtL,OAAA;YAAMqL,SAAS,EAAC,eAAe;YAAAC,QAAA,EAAExI,KAAK,CAACuB;UAAO;YAAAkH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtD1L,OAAA;YACIqL,SAAS,EAAC,aAAa;YACvBY,OAAO,EAAEA,CAAA,KAAM1I,QAAQ,CAAC;cAAElB,IAAI,EAAE,cAAc;cAAEC,OAAO,EAAEQ,KAAK,CAACD;YAAG,CAAC,CAAE;YAAAyI,QAAA,EACxE;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAPH5I,KAAK,CAACD,EAAE;UAAA0I,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQb,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE9B,CAAC;AAACmJ,IAAA,CAhKID,GAAG;AAAAY,IAAA,GAAHZ,GAAG;AAkKT,eAAeA,GAAG;AAAC,IAAA9K,EAAA,EAAAoC,GAAA,EAAAG,GAAA,EAAAgB,GAAA,EAAAE,GAAA,EAAAC,GAAA,EAAAG,GAAA,EAAAmC,GAAA,EAAAG,GAAA,EAAAuB,GAAA,EAAAG,GAAA,EAAA6C,IAAA,EAAAC,IAAA,EAAAE,IAAA,EAAAa,IAAA;AAAAC,YAAA,CAAA3L,EAAA;AAAA2L,YAAA,CAAAvJ,GAAA;AAAAuJ,YAAA,CAAApJ,GAAA;AAAAoJ,YAAA,CAAApI,GAAA;AAAAoI,YAAA,CAAAlI,GAAA;AAAAkI,YAAA,CAAAjI,GAAA;AAAAiI,YAAA,CAAA9H,GAAA;AAAA8H,YAAA,CAAA3F,GAAA;AAAA2F,YAAA,CAAAxF,GAAA;AAAAwF,YAAA,CAAAjE,GAAA;AAAAiE,YAAA,CAAA9D,GAAA;AAAA8D,YAAA,CAAAjB,IAAA;AAAAiB,YAAA,CAAAhB,IAAA;AAAAgB,YAAA,CAAAd,IAAA;AAAAc,YAAA,CAAAD,IAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}