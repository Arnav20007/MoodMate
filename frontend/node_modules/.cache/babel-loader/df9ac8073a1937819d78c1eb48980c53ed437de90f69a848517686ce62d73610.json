{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"You\",\n      text: input\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        sender: \"MoodMate\",\n        text: data.reply || data.error || \"⚠️ No reply\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"MoodMate\",\n        text: \"⚠️ Error connecting to server\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MoodMate Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"400px\",\n        overflowY: \"auto\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n      style: {\n        width: \"80%\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","sender","text","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","error","prev","err","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","msg","i","value","onChange","e","target","onKeyDown","key","width","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"You\", text: input };\r\n    setMessages([...messages, userMessage]);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = {\r\n        sender: \"MoodMate\",\r\n        text: data.reply || data.error || \"⚠️ No reply\",\r\n      };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"MoodMate\", text: \"⚠️ Error connecting to server\" },\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"auto\", padding: \"20px\" }}>\r\n      <h2>MoodMate Chat</h2>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: \"10px\",\r\n          height: \"400px\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {messages.map((msg, i) => (\r\n          <p key={i}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        style={{ width: \"80%\", padding: \"10px\", marginTop: \"10px\" }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"10px\" }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}