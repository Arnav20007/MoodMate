{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css'; // We'll create this CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n  useEffect(() => {\n    if (user && user.username) {\n      setMessages([{\n        id: Date.now(),\n        text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\n        sender: 'bot'\n      }]);\n    }\n  }, [user]);\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'user'\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const response = await fetch(`/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      if (!response.ok) {\n        const errData = await response.json().catch(() => ({}));\n        throw new Error(errData.error || `HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const botMessage = {\n        id: Date.now() + 1,\n        text: data.reply,\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      console.error(\"Chat error:\", error);\n      const errorMsg = {\n        id: Date.now() + 1,\n        text: \"Sorry, I couldn't connect. Please ensure the backend is running and try again.\",\n        sender: 'bot'\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot typing\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-bubble\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"typing-indicator\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef,\n        className: \"scroll-anchor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          onKeyDown: e => e.key === 'Enter' && sendMessage(),\n          placeholder: \"Type your message...\",\n          className: \"message-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          disabled: isTyping || !input.trim(),\n          className: \"send-button\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            width: \"20\",\n            height: \"20\",\n            viewBox: \"0 0 24 24\",\n            fill: \"none\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              d: \"M2 21L23 12L2 3V10L17 12L2 14V21Z\",\n              fill: \"currentColor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"nOTu7TZx1TtBTwsvkZRLf++FuY4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","user","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","chatEndRef","username","id","Date","now","text","sender","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","response","fetch","method","headers","body","JSON","stringify","message","ok","errData","json","catch","Error","error","status","data","botMessage","reply","console","errorMsg","className","children","map","msg","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","disabled","width","height","viewBox","fill","d","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css'; // We'll create this CSS file\r\n\r\nfunction Chat({ user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if (user && user.username) {\r\n            setMessages([{\r\n                id: Date.now(),\r\n                text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\r\n                sender: 'bot'\r\n            }]);\r\n        }\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n\r\n        const userMessage = { id: Date.now(), text: input, sender: 'user' };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInput(\"\");\r\n        setIsTyping(true);\r\n\r\n        try {\r\n            const response = await fetch(`/api/chat`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const errData = await response.json().catch(() => ({}));\r\n                throw new Error(errData.error || `HTTP error! status: ${response.status}`);\r\n            }\r\n            \r\n            const data = await response.json();\r\n            const botMessage = { id: Date.now() + 1, text: data.reply, sender: 'bot' };\r\n            setMessages(prev => [...prev, botMessage]);\r\n\r\n        } catch (error) {\r\n            console.error(\"Chat error:\", error);\r\n            const errorMsg = { \r\n                id: Date.now() + 1, \r\n                text: \"Sorry, I couldn't connect. Please ensure the backend is running and try again.\", \r\n                sender: 'bot' \r\n            };\r\n            setMessages(prev => [...prev, errorMsg]);\r\n        } finally {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-messages\">\r\n                {messages.map((msg) => (\r\n                    <div key={msg.id} className={`message ${msg.sender}`}>\r\n                        <div className=\"message-content\">\r\n                            <div className=\"message-bubble\">\r\n                                <p>{msg.text}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {isTyping && (\r\n                    <div className=\"message bot typing\">\r\n                        <div className=\"message-content\">\r\n                            <div className=\"message-bubble\">\r\n                                <div className=\"typing-indicator\">\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                    <span></span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n                <div ref={chatEndRef} className=\"scroll-anchor\" />\r\n            </div>\r\n            \r\n            <div className=\"chat-input-container\">\r\n                <div className=\"input-wrapper\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={input}\r\n                        onChange={(e) => setInput(e.target.value)}\r\n                        onKeyDown={(e) => e.key === 'Enter' && sendMessage()}\r\n                        placeholder=\"Type your message...\"\r\n                        className=\"message-input\"\r\n                    />\r\n                    <button \r\n                        onClick={sendMessage} \r\n                        disabled={isTyping || !input.trim()}\r\n                        className=\"send-button\"\r\n                    >\r\n                        <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                            <path d=\"M2 21L23 12L2 3V10L17 12L2 14V21Z\" fill=\"currentColor\"/>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,YAAY,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,SAASC,IAAIA,CAAC;EAAEC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMc,UAAU,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE/BD,SAAS,CAAC,MAAM;IACZ,IAAIK,IAAI,IAAIA,IAAI,CAACS,QAAQ,EAAE;MACvBN,WAAW,CAAC,CAAC;QACTO,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QACdC,IAAI,EAAE,SAASb,IAAI,CAACS,QAAQ,2CAA2C;QACvEK,MAAM,EAAE;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEVL,SAAS,CAAC,MAAM;IAAA,IAAAoB,mBAAA;IACZ,CAAAA,mBAAA,GAAAP,UAAU,CAACQ,OAAO,cAAAD,mBAAA,uBAAlBA,mBAAA,CAAoBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAAChB,QAAQ,CAAC,CAAC;EAEd,MAAMiB,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACf,KAAK,CAACgB,IAAI,CAAC,CAAC,EAAE;IAEnB,MAAMC,WAAW,GAAG;MAAEX,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;MAAEC,IAAI,EAAET,KAAK;MAAEU,MAAM,EAAE;IAAO,CAAC;IACnEX,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAC3ChB,QAAQ,CAAC,EAAE,CAAC;IACZE,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAI;MACA,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,WAAW,EAAE;QACtCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,OAAO,EAAE1B;QAAM,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAI,CAACmB,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAMC,OAAO,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACvD,MAAM,IAAIC,KAAK,CAACH,OAAO,CAACI,KAAK,IAAI,uBAAuBb,QAAQ,CAACc,MAAM,EAAE,CAAC;MAC9E;MAEA,MAAMC,IAAI,GAAG,MAAMf,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,MAAMM,UAAU,GAAG;QAAE7B,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAAEC,IAAI,EAAEyB,IAAI,CAACE,KAAK;QAAE1B,MAAM,EAAE;MAAM,CAAC;MAC1EX,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEiB,UAAU,CAAC,CAAC;IAE9C,CAAC,CAAC,OAAOH,KAAK,EAAE;MACZK,OAAO,CAACL,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,MAAMM,QAAQ,GAAG;QACbhC,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,CAAC;QAClBC,IAAI,EAAE,gFAAgF;QACtFC,MAAM,EAAE;MACZ,CAAC;MACDX,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEoB,QAAQ,CAAC,CAAC;IAC5C,CAAC,SAAS;MACNnC,WAAW,CAAC,KAAK,CAAC;IACtB;EACJ,CAAC;EAED,oBACIT,OAAA;IAAK6C,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3B9C,OAAA;MAAK6C,SAAS,EAAC,eAAe;MAAAC,QAAA,GACzB1C,QAAQ,CAAC2C,GAAG,CAAEC,GAAG,iBACdhD,OAAA;QAAkB6C,SAAS,EAAE,WAAWG,GAAG,CAAChC,MAAM,EAAG;QAAA8B,QAAA,eACjD9C,OAAA;UAAK6C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC5B9C,OAAA;YAAK6C,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC3B9C,OAAA;cAAA8C,QAAA,EAAIE,GAAG,CAACjC;YAAI;cAAAkC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC,GALAJ,GAAG,CAACpC,EAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMX,CACR,CAAC,EACD5C,QAAQ,iBACLR,OAAA;QAAK6C,SAAS,EAAC,oBAAoB;QAAAC,QAAA,eAC/B9C,OAAA;UAAK6C,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC5B9C,OAAA;YAAK6C,SAAS,EAAC,gBAAgB;YAAAC,QAAA,eAC3B9C,OAAA;cAAK6C,SAAS,EAAC,kBAAkB;cAAAC,QAAA,gBAC7B9C,OAAA;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbpD,OAAA;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbpD,OAAA;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CACR,eACDpD,OAAA;QAAKqD,GAAG,EAAE3C,UAAW;QAACmC,SAAS,EAAC;MAAe;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eAENpD,OAAA;MAAK6C,SAAS,EAAC,sBAAsB;MAAAC,QAAA,eACjC9C,OAAA;QAAK6C,SAAS,EAAC,eAAe;QAAAC,QAAA,gBAC1B9C,OAAA;UACIsD,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjD,KAAM;UACbkD,QAAQ,EAAGC,CAAC,IAAKlD,QAAQ,CAACkD,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC1CI,SAAS,EAAGF,CAAC,IAAKA,CAAC,CAACG,GAAG,KAAK,OAAO,IAAIvC,WAAW,CAAC,CAAE;UACrDwC,WAAW,EAAC,sBAAsB;UAClChB,SAAS,EAAC;QAAe;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC,eACFpD,OAAA;UACI8D,OAAO,EAAEzC,WAAY;UACrB0C,QAAQ,EAAEvD,QAAQ,IAAI,CAACF,KAAK,CAACgB,IAAI,CAAC,CAAE;UACpCuB,SAAS,EAAC,aAAa;UAAAC,QAAA,eAEvB9C,OAAA;YAAKgE,KAAK,EAAC,IAAI;YAACC,MAAM,EAAC,IAAI;YAACC,OAAO,EAAC,WAAW;YAACC,IAAI,EAAC,MAAM;YAAArB,QAAA,eACvD9C,OAAA;cAAMoE,CAAC,EAAC,mCAAmC;cAACD,IAAI,EAAC;YAAc;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjD,EAAA,CA5GQF,IAAI;AAAAoE,EAAA,GAAJpE,IAAI;AA8Gb,eAAeA,IAAI;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}