{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\components\\\\Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  user\n}) {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const chatEndRef = useRef(null);\n\n  // Welcome message\n  useEffect(() => {\n    if (user && user.username) {\n      setMessages([{\n        id: Date.now(),\n        text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\n        sender: 'bot',\n        timestamp: new Date()\n      }]);\n    }\n  }, [user]);\n\n  // Scroll to bottom\n  useEffect(() => {\n    var _chatEndRef$current;\n    (_chatEndRef$current = chatEndRef.current) === null || _chatEndRef$current === void 0 ? void 0 : _chatEndRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      id: Date.now(),\n      text: input,\n      sender: 'user',\n      timestamp: new Date()\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInput(\"\");\n    setIsTyping(true);\n    try {\n      const res = await fetch(`/api/chat`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        id: Date.now() + 1,\n        text: data.reply,\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch {\n      const errorMsg = {\n        id: Date.now() + 1,\n        text: \"Connection error. Try again.\",\n        sender: 'bot',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n  const formatTime = timestamp => {\n    if (!timestamp) return '';\n    const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n    return date.toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header-fixed\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-title\",\n        children: \"\\uD83C\\uDF19 MoodMate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header-status\",\n        children: \"Online - Ready to listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: [messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-message ${msg.sender}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble\",\n          children: [msg.text, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-time\",\n            children: formatTime(msg.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, msg.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message bot typing\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bubble\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 95\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 109\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 123\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: chatEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === 'Enter' && sendMessage(),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isTyping,\n        children: isTyping ? '...' : 'âž¤'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"nOTu7TZx1TtBTwsvkZRLf++FuY4=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Chat","user","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","chatEndRef","username","id","Date","now","text","sender","timestamp","_chatEndRef$current","current","scrollIntoView","behavior","sendMessage","trim","userMessage","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","errorMsg","formatTime","date","toLocaleTimeString","hour","minute","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","ref","type","value","onChange","e","target","onKeyDown","key","placeholder","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/components/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './Chat.css';\r\n\r\nfunction Chat({ user }) {\r\n    const [messages, setMessages] = useState([]);\r\n    const [input, setInput] = useState(\"\");\r\n    const [isTyping, setIsTyping] = useState(false);\r\n    const chatEndRef = useRef(null);\r\n\r\n    // Welcome message\r\n    useEffect(() => {\r\n        if (user && user.username) {\r\n            setMessages([{\r\n                id: Date.now(),\r\n                text: `Hello ${user.username}! I'm MoodMate. How can I help you today?`,\r\n                sender: 'bot',\r\n                timestamp: new Date()\r\n            }]);\r\n        }\r\n    }, [user]);\r\n\r\n    // Scroll to bottom\r\n    useEffect(() => {\r\n        chatEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n    }, [messages]);\r\n\r\n    const sendMessage = async () => {\r\n        if (!input.trim()) return;\r\n        const userMessage = { id: Date.now(), text: input, sender: 'user', timestamp: new Date() };\r\n        setMessages(prev => [...prev, userMessage]);\r\n        setInput(\"\");\r\n        setIsTyping(true);\r\n\r\n        try {\r\n            const res = await fetch(`/api/chat`, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({ message: input })\r\n            });\r\n            const data = await res.json();\r\n            const botMessage = { id: Date.now() + 1, text: data.reply, sender: 'bot', timestamp: new Date() };\r\n            setMessages(prev => [...prev, botMessage]);\r\n        } catch {\r\n            const errorMsg = { id: Date.now() + 1, text: \"Connection error. Try again.\", sender: 'bot', timestamp: new Date() };\r\n            setMessages(prev => [...prev, errorMsg]);\r\n        } finally {\r\n            setIsTyping(false);\r\n        }\r\n    };\r\n\r\n    const formatTime = (timestamp) => {\r\n        if (!timestamp) return '';\r\n        const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\r\n        return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n    };\r\n\r\n    return (\r\n        <div className=\"chat-container\">\r\n            <div className=\"chat-header-fixed\">\r\n                <div className=\"chat-header-title\">ðŸŒ™ MoodMate</div>\r\n                <div className=\"chat-header-status\">Online - Ready to listen</div>\r\n            </div>\r\n\r\n            <div className=\"chat-box\">\r\n                {messages.map(msg => (\r\n                    <div key={msg.id} className={`chat-message ${msg.sender}`}>\r\n                        <div className=\"bubble\">\r\n                            {msg.text}\r\n                            <div className=\"message-time\">{formatTime(msg.timestamp)}</div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n                {isTyping && <div className=\"chat-message bot typing\"><div className=\"bubble\"><span>.</span><span>.</span><span>.</span></div></div>}\r\n                <div ref={chatEndRef} />\r\n            </div>\r\n\r\n            <div className=\"input-area\">\r\n                <input type=\"text\" value={input} onChange={(e) => setInput(e.target.value)} onKeyDown={(e) => e.key === 'Enter' && sendMessage()} placeholder=\"Type your message...\" />\r\n                <button onClick={sendMessage} disabled={isTyping}>{isTyping ? '...' : 'âž¤'}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}