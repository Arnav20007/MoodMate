{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Prabhat singh\\\\Downloads\\\\Best_Project\\\\frontend\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./app.css\";\n\n// Base URL for API calls\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = \"http://localhost:5000\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const [user, setUser] = useState({\n    id: 1,\n    name: \"Demo User\",\n    coins: 100,\n    streak: 5,\n    mentalFitness: 85\n  });\n  const [activeTab, setActiveTab] = useState(\"chat\");\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [therapists, setTherapists] = useState([]);\n  const [resources, setResources] = useState([]);\n  const [moodWall, setMoodWall] = useState([]);\n  const [moodTribes, setMoodTribes] = useState([]);\n  const [shopItems, setShopItems] = useState([]);\n  const [userTribes, setUserTribes] = useState([]);\n  const [currentTheme, setCurrentTheme] = useState(\"default\");\n  const [typingIndicator, setTypingIndicator] = useState(\"\");\n  const [showEmergencyModal, setShowEmergencyModal] = useState(false);\n  const [achievements, setAchievements] = useState([]);\n  const [activeTribe, setActiveTribe] = useState(null);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [showNewChatModal, setShowNewChatModal] = useState(false);\n  const [lastStreakUpdate, setLastStreakUpdate] = useState(\"\");\n  const [activeShopCategory, setActiveShopCategory] = useState(\"All\");\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\n  const [aiProvider, setAiProvider] = useState(\"gemini\");\n  const [audioEnabled, setAudioEnabled] = useState(true);\n  const [musicEnabled, setMusicEnabled] = useState(true);\n  const [tribeChatMessages, setTribeChatMessages] = useState({});\n  const [tribeInput, setTribeInput] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const startNewChat = () => {\n    setMessages([{\n      id: Date.now(),\n      text: \"Hello! I'm MoodMate, your mental health companion. How are you feeling today?\",\n      sender: \"bot\",\n      timestamp: new Date().toISOString()\n    }]);\n    setShowNewChatModal(false);\n  };\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"You\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const res = await fetch(`${API_BASE_URL}/api/chat`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        sender: \"MoodMate\",\n        text: data.reply || data.error || \"⚠️ No reply\"\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, {\n        sender: \"MoodMate\",\n        text: \"⚠️ Error connecting to server\"\n      }]);\n    }\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"600px\",\n      margin: \"auto\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"MoodMate Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        height: \"400px\",\n        overflowY: \"auto\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage(),\n      style: {\n        width: \"80%\",\n        padding: \"10px\",\n        marginTop: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H/LSLv9gUQFyKINdYw62sG7YDjs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_BASE_URL","App","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","user","setUser","id","name","coins","streak","mentalFitness","activeTab","setActiveTab","journalEntries","setJournalEntries","therapists","setTherapists","resources","setResources","moodWall","setMoodWall","moodTribes","setMoodTribes","shopItems","setShopItems","userTribes","setUserTribes","currentTheme","setCurrentTheme","typingIndicator","setTypingIndicator","showEmergencyModal","setShowEmergencyModal","achievements","setAchievements","activeTribe","setActiveTribe","sidebarOpen","setSidebarOpen","showNewChatModal","setShowNewChatModal","lastStreakUpdate","setLastStreakUpdate","activeShopCategory","setActiveShopCategory","isLoggedIn","setIsLoggedIn","aiProvider","setAiProvider","audioEnabled","setAudioEnabled","musicEnabled","setMusicEnabled","tribeChatMessages","setTribeChatMessages","tribeInput","setTribeInput","chatEndRef","startNewChat","Date","now","text","sender","timestamp","toISOString","sendMessage","trim","userMessage","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","error","err","style","maxWidth","margin","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","msg","i","value","onChange","e","target","onKeyDown","key","width","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Prabhat singh/Downloads/Best_Project/frontend/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport \"./app.css\";\r\n\r\n// Base URL for API calls\r\nconst API_BASE_URL = \"http://localhost:5000\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [user, setUser] = useState({\r\n    id: 1,\r\n    name: \"Demo User\",\r\n    coins: 100,\r\n    streak: 5,\r\n    mentalFitness: 85,\r\n  });\r\n  const [activeTab, setActiveTab] = useState(\"chat\");\r\n  const [journalEntries, setJournalEntries] = useState([]);\r\n  const [therapists, setTherapists] = useState([]);\r\n  const [resources, setResources] = useState([]);\r\n  const [moodWall, setMoodWall] = useState([]);\r\n  const [moodTribes, setMoodTribes] = useState([]);\r\n  const [shopItems, setShopItems] = useState([]);\r\n  const [userTribes, setUserTribes] = useState([]);\r\n  const [currentTheme, setCurrentTheme] = useState(\"default\");\r\n  const [typingIndicator, setTypingIndicator] = useState(\"\");\r\n  const [showEmergencyModal, setShowEmergencyModal] = useState(false);\r\n  const [achievements, setAchievements] = useState([]);\r\n  const [activeTribe, setActiveTribe] = useState(null);\r\n  const [sidebarOpen, setSidebarOpen] = useState(false);\r\n  const [showNewChatModal, setShowNewChatModal] = useState(false);\r\n  const [lastStreakUpdate, setLastStreakUpdate] = useState(\"\");\r\n  const [activeShopCategory, setActiveShopCategory] = useState(\"All\");\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const [aiProvider, setAiProvider] = useState(\"gemini\");\r\n  const [audioEnabled, setAudioEnabled] = useState(true);\r\n  const [musicEnabled, setMusicEnabled] = useState(true);\r\n  const [tribeChatMessages, setTribeChatMessages] = useState({});\r\n  const [tribeInput, setTribeInput] = useState(\"\");\r\n\r\n  const chatEndRef = useRef(null);\r\n\r\n  const startNewChat = () => {\r\n    setMessages([\r\n      {\r\n        id: Date.now(),\r\n        text: \"Hello! I'm MoodMate, your mental health companion. How are you feeling today?\",\r\n        sender: \"bot\",\r\n        timestamp: new Date().toISOString(),\r\n      },\r\n    ]);\r\n    setShowNewChatModal(false);\r\n  };\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { sender: \"You\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      const res = await fetch(`${API_BASE_URL}/api/chat`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = {\r\n        sender: \"MoodMate\",\r\n        text: data.reply || data.error || \"⚠️ No reply\",\r\n      };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"MoodMate\", text: \"⚠️ Error connecting to server\" },\r\n      ]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"600px\", margin: \"auto\", padding: \"20px\" }}>\r\n      <h2>MoodMate Chat</h2>\r\n      <div\r\n        style={{\r\n          border: \"1px solid #ccc\",\r\n          padding: \"10px\",\r\n          height: \"400px\",\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        {messages.map((msg, i) => (\r\n          <p key={i}>\r\n            <strong>{msg.sender}:</strong> {msg.text}\r\n          </p>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        style={{ width: \"80%\", padding: \"10px\", marginTop: \"10px\" }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"10px\" }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}